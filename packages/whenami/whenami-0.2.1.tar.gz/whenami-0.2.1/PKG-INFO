Metadata-Version: 2.4
Name: whenami
Version: 0.2.1
Summary: A powerful Google Calendar tool that merges multiple calendars to find your true availability across work and personal schedules
Project-URL: Homepage, https://github.com/zampierilucas/whenami
Project-URL: Repository, https://github.com/zampierilucas/whenami
Project-URL: Issues, https://github.com/zampierilucas/whenami/issues
Project-URL: Changelog, https://github.com/zampierilucas/whenami/releases
Author-email: Lucas Zampieri <lcasmz54@gmail.com>
License:                                  Apache License
                                   Version 2.0, January 2004
                                http://www.apache.org/licenses/
        
           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
           1. Definitions.
        
              "License" shall mean the terms and conditions for use, reproduction,
              and distribution as defined by Sections 1 through 9 of this document.
        
              "Licensor" shall mean the copyright owner or entity granting the License.
        
              "Legal Entity" shall mean the union of the acting entity and all
              other entities that control, are controlled by, or are under common
              control with that entity. For the purposes of this definition,
              "control" means (i) the power, direct or indirect, to cause the
              direction or management of such entity, whether by contract or
              otherwise, or (ii) ownership of fifty percent (50%) or more of the
              outstanding shares, or (iii) beneficial ownership of such entity.
        
              "You" (or "Your") shall mean an individual or Legal Entity
              exercising permissions granted by this License.
        
              "Source" means the preferred form for making modifications,
              including but not limited to software source code, documentation
              source, and configuration files.
        
              "Object" means any form resulting from mechanical transformation or
              translation of a Source form, including but not limited to compiled
              object code, generated documentation, and conversions to other media
              types.
        
              "Work" shall mean the work of authorship, whether in Source or
              Object form, made available under the License, as indicated by a
              copyright notice that is included in or attached to the work
              (which shall not include communication that is prominently marked
              or otherwise designated in writing by the copyright owner as
              "Not a Work").
        
              "Derivative Works" shall mean any work, whether in Source or Object
              form, that is based upon (or derived from) the Work and for which the
              editorial revisions, annotations, elaborations, or other modifications
              represent, as a whole, an original work of authorship. For the purposes
              of this License, Derivative Works shall not include works that remain
              separable from, or merely link (or bind by name) to the interfaces of,
              the Work and derivative works thereof.
        
              "Contribution" shall mean any work of authorship, including
              the original version of the Work and any modifications or additions
              to that Work or Derivative Works thereof, that is intentionally
              submitted to Licensor for inclusion in the Work by the copyright owner
              or by an individual or Legal Entity authorized to submit on behalf of
              the copyright owner. For the purposes of this definition, "submitted"
              means any form of electronic, verbal, or written communication sent
              to the Licensor or its representatives, including but not limited to
              communication on electronic mailing lists, source code control
              systems, and issue tracking systems that are managed by, or on behalf
              of, the Licensor for the purpose of discussing and improving the Work,
              but excluding communication that is prominently marked or otherwise
              designated in writing by the copyright owner as "Not a Contribution."
        
              "Contributor" shall mean Licensor and any individual or Legal Entity
              on behalf of whom a Contribution has been received by Licensor and
              subsequently incorporated within the Work.
        
           2. Grant of Copyright License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              copyright license to use, reproduce, modify, merge, publish,
              distribute, sublicense, and/or sell copies of the Work, and to
              permit persons to whom the Work is furnished to do so, subject to
              the following conditions:
        
              The above copyright notice and this permission notice shall be
              included in all copies or substantial portions of the Work.
        
           3. Grant of Patent License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              (except as stated in this section) patent license to make, have made,
              use, offer to sell, sell, import, and otherwise transfer the Work,
              where such license applies only to those patent claims licensable
              by such Contributor that are necessarily infringed by their
              Contribution(s) alone or by combination of their Contribution(s)
              with the Work to which such Contribution(s) was submitted. If You
              institute patent litigation against any entity (including a
              cross-claim or counterclaim in a lawsuit) alleging that the Work
              or a Contribution incorporated within the Work constitutes direct
              or contributory patent infringement, then any patent licenses
              granted to You under this License for that Work shall terminate
              as of the date such litigation is filed.
        
           4. Redistribution. You may reproduce and distribute copies of the
              Work or Derivative Works thereof in any medium, with or without
              modifications, and in Source or Object form, provided that You
              meet the following conditions:
        
              (a) You must give any other recipients of the Work or
                  Derivative Works a copy of this License; and
        
              (b) You must cause any modified files to carry prominent notices
                  stating that You changed the files; and
        
              (c) You must retain, in the Source form of any Derivative Works
                  that You distribute, all copyright, trademark, patent,
                  attribution and other notices from the Source form of the Work,
                  excluding those notices that do not pertain to any part of
                  the Derivative Works; and
        
              (d) If the Work includes a "NOTICE" text file as part of its
                  distribution, then any Derivative Works that You distribute must
                  include a readable copy of the attribution notices contained
                  within such NOTICE file, excluding those notices that do not
                  pertain to any part of the Derivative Works, in at least one
                  of the following places: within a NOTICE text file distributed
                  as part of the Derivative Works; within the Source form or
                  documentation, if provided along with the Derivative Works; or,
                  within a display generated by the Derivative Works, if and
                  wherever such third-party notices normally appear. The contents
                  of the NOTICE file are for informational purposes only and
                  do not modify the License. You may add Your own attribution
                  notices within Derivative Works that You distribute, alongside
                  or as an addendum to the NOTICE text from the Work, provided
                  that such additional attribution notices cannot be construed
                  as modifying the License.
        
              You may add Your own copyright notice to Your modifications and
              may provide additional or different license terms and conditions
              for use, reproduction, or distribution of Your modifications, or
              for any such Derivative Works as a whole, provided Your use,
              reproduction, and distribution of the Work otherwise complies with
              the conditions stated in this License.
        
           5. Submission of Contributions. Unless You explicitly state otherwise,
              any Contribution intentionally submitted for inclusion in the Work
              by You to the Licensor shall be under the terms and conditions of
              this License, without any additional terms or conditions.
              Notwithstanding the above, nothing herein shall supersede or modify
              the terms of any separate license agreement you may have executed
              with Licensor regarding such Contributions.
        
           6. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW OR
              AGREED TO IN WRITING, LICENSOR PROVIDES THE WORK (AND EACH
              CONTRIBUTOR PROVIDES ITS CONTRIBUTIONS) ON AN "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
              IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
              OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A
              PARTICULAR PURPOSE. You are solely responsible for determining the
              appropriateness of using or redistributing the Work and assume any
              risks associated with Your exercise of permissions under this License.
        
           7. Limitation of Liability. IN NO EVENT AND UNDER NO LEGAL THEORY,
              WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE,
              UNLESS REQUIRED BY APPLICABLE LAW (SUCH AS DELIBERATE AND GROSSLY
              NEGLIGENT ACTS) OR AGREED TO IN WRITING, SHALL ANY CONTRIBUTOR BE
              LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT, INDIRECT, SPECIAL,
              INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER ARISING AS A
              RESULT OF THIS LICENSE OR OUT OF THE USE OR INABILITY TO USE THE
              WORK (INCLUDING BUT NOT LIMITED TO DAMAGES FOR LOSS OF GOODWILL,
              WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL
              OTHER COMMERCIAL DAMAGES OR LOSSES), EVEN IF SUCH CONTRIBUTOR
              HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
        
           8. Accepting Warranty or Support. You may choose to offer and charge a
              fee for, warranty, support, indemnity or other liability obligations
              and/or rights consistent with this License. However, in accepting such
              obligations, You may act only on Your own behalf and on Your sole
              responsibility, not on behalf of any other Contributor, and only if
              You agree to indemnify, defend, and hold each Contributor harmless for
              any liability incurred by, or claims asserted against, such Contributor
              by reason of your accepting any such warranty or support.
        
           END OF TERMS AND CONDITIONS
        
           APPENDIX: How to apply the Apache License to your work.
        
              To apply the Apache License to your work, attach the following
              boilerplate notice, with the fields enclosed by brackets "[]"
              replaced with your own identifying information. (Don't include
              the brackets!)  The text should be enclosed in comments for the
              particular programming language. You may also want to include a
              copyright notice such adjacent to the appropriate year(s).
        
           Copyright 2025 Lucas Zampieri
        
           Licensed under the Apache License, Version 2.0 (the "License");
           you may not use this file except in compliance with the License.
           You may obtain a copy of the License at
        
               http://www.apache.org/licenses/LICENSE-2.0
        
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
License-File: LICENSE
Keywords: calendar,google-calendar,productivity,scheduling,time-management
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Office/Business :: Scheduling
Classifier: Topic :: Utilities
Requires-Python: >=3.9
Requires-Dist: google-api-python-client
Requires-Dist: google-auth
Requires-Dist: google-auth-oauthlib
Requires-Dist: litellm
Provides-Extra: dev
Requires-Dist: pytest; extra == 'dev'
Requires-Dist: pytest-cov; extra == 'dev'
Description-Content-Type: text/markdown

# Whenami

A powerful Google Calendar tool that merges multiple calendars to find your true availability across work and personal schedules.

<img alt="Whenami demo" src="https://raw.githubusercontent.com/zampierilucas/whenami/master/demo.gif" />

## Description

whenami is a command-line tool designed for people who juggle multiple calendars (work, personal, side projects, etc.). Its key strength is **merging multiple Google Calendars** to show your real availability by combining busy periods from all sources.

### Key Features:
- **🗓️ Multi-calendar support**: Connect work calendars, personal Gmail calendars, shared calendars
- **🔀 Smart merging**: Automatically merges busy periods from all calendars to show true availability
- **🤖 AI-powered natural language (optional)**: Use plain English to query your calendar - "free tomorrow", "busy next week"
- **⏰ Flexible time filtering**: Personal hours (awake time), work hours, or 24/7 view
- **🎨 Color-coded output**: Green for free slots, red for busy periods
- **🌍 Advanced timezone handling**: Automatically detects each calendar's timezone, merges events correctly across timezones, and converts output to any timezone
- **📅 Multiple date ranges**: Today, tomorrow, next week, or custom date ranges with flexible date formats

Perfect for professionals who need to see availability across multiple calendars without manually checking each one.

## Installation

### From PyPI (Recommended)
```bash
pip install whenami
```

After installation, you can run the tool directly:
```bash
whenami --help
```

**Optional AI features**: LLM support is disabled by default. To enable natural language queries, see the [AI-Powered Natural Language Queries](#ai-powered-natural-language-queries-optional) section below.

### Local Development Setup

For local development or running from source:

#### Prerequisites
- Python 3.7+

#### Setup
```bash
# Clone the repository
git clone https://github.com/zampierilucas/whenami.git
cd whenami

# Create virtual environment
python -m venv .venv
source .venv/bin/activate

# Install in development mode with dev dependencies
pip install -e ".[dev]"

# Run the tool directly (after installation)
whenami --help

# Or run from source
python src/whenami/main.py --help
```

## AI-Powered Natural Language Queries (Optional)

whenami supports **optional** natural language processing using LLM models via [litellm](https://github.com/BerriAI/litellm), allowing you to query your calendar using plain English. Works with **any LLM service** including OpenAI, Claude, local Ollama, or custom APIs.

**Note**: LLM features are **disabled by default** and require manual configuration to enable.

### Quick Examples
```bash
# Natural language queries
whenami "free tomorrow"
whenami "busy next week"
whenami "work hours today"
whenami "personal time on 15/07/25"
whenami "show me August 2025"

# With debug output to see LLM processing
whenami "free tomorrow" --debug
```

### Setup LLM Features

#### Option 1: Local Ollama (Recommended)
```bash
# Visit https://ollama.ai for installation instructions
# Or on macOS:
brew install ollama

# Pull a model (recommended: llama3.2 or llama3.3)
ollama pull llama3.3

# Configure in config.json:
{
    "llm": {
        "model": "ollama/llama3.3",
        "api_base": "http://localhost:11434",
        "enabled": true
    }
}
```

#### Option 2: OpenAI API
```json
{
    "llm": {
        "model": "gpt-4o-mini",
        "api_base": "https://api.openai.com/v1",
        "enabled": true
    }
}
```
Set your API key: `export OPENAI_API_KEY="your-key-here"`

#### Option 3: Claude API
```json
{
    "llm": {
        "model": "claude-3-haiku-20240307",
        "api_base": "https://api.anthropic.com",
        "enabled": true
    }
}
```
Set your API key: `export ANTHROPIC_API_KEY="your-key-here"`

#### Option 4: Any Custom LLM Service
litellm supports 100+ LLM providers. See [litellm docs](https://docs.litellm.ai/docs/providers) for configuration examples.

### LLM Management Commands
```bash
# Show current LLM configuration
whenami --llm-config

# Test LLM connectivity with default query
whenami --llm-test

# Test with custom query
whenami --llm-test "busy next week"

# Get setup help and examples
whenami --llm-help
```

### Natural Language Examples

| Input | Converts To |
|-------|-------------|
| `"free tomorrow"` | `--tomorrow --free` |
| `"busy next week"` | `--next-week --busy` |
| `"work hours today"` | `--today --work-hours` |
| `"personal time on 15/07/25"` | `--date "15/07/25" --personal-hours` |
| `"show me August 2025"` | `--date-range "01/08/2025,31/08/2025"` |
| `"free weekdays next week"` | `--next-week --work-days --free` |
| `"tomorrow in New York time"` | `--tomorrow --convert-tz America/New_York` |
| `"today in Tokyo timezone"` | `--today --convert-tz Asia/Tokyo` |

The AI understands context, dates, time preferences, and complex queries, making calendar management more intuitive.

## Usage

### Natural Language Queries (Optional)
```bash
# Simple natural language - AI converts to appropriate commands (requires LLM setup)
whenami "free tomorrow"
whenami "busy next week"
whenami "work hours today"
whenami "personal time on 25/12/25"
whenami "show me next month"
whenami "tomorrow in New York time"
whenami "today in Tokyo timezone"

# Natural language with debug to see conversion
whenami "free tomorrow" --debug
```

### Traditional Command Line Options
```bash
# Show only free slots for today (default)
whenami

# Show only free slots (same as default)
whenami --free --today

# Show only busy slots
whenami --busy --today

# Split busy and free slots into separate sections
whenami --today --split

# Show free slots for tomorrow
whenami --tomorrow

# Show free slots for next week work days(default mon-fri)
whenami --next-week --work-days

# Show free slots during work hours only
whenami --today --work-hours

# Show free slots during personal hours (default: 8-22)
whenami --today --personal-hours

# Show all hours (24/7, no time filtering)
whenami --today --all-hours

# Custom dates (supports DD/MM/YYYY, DD/MM/YY, DD-MM-YYYY, DD-MM-YY)
whenami --date "25/12/2025"
whenami --date "25/12/25"
whenami --date "25-12-2025"

# Date ranges
whenami --date-range "01/08/2025,31/08/2025"
whenami --date-range "01/08/25,31/08/25"

# Convert output to a specific timezone
whenami --today --convert-tz America/Sao_Paulo

# Show event names alongside busy slots
whenami --today --event-name

# Show event names with split view
whenami --today --event-name --split

# List available timezones
whenami --list-tz
```

## Timezone Support

whenami intelligently handles complex timezone scenarios:

### **Multi-Timezone Calendar Merging**
- **Auto-detection**: Automatically detects each calendar's native timezone (e.g., work calendar in EST, personal in PST)
- **Smart merging**: Converts all events to a common timezone before merging busy periods
- **Accurate overlap detection**: Ensures proper conflict detection across timezone boundaries

### **Flexible Output Conversion**
```bash
# View in your local timezone (default)
whenami --today

# Convert to a specific timezone for travel/meetings
whenami --today --convert-tz Europe/London
whenami --next-week --convert-tz Asia/Tokyo

# List all available timezones
whenami --list-tz
```

### **Real-World Example**
If you have:
- Work calendar in `America/New_York` (EST/EDT)
- Personal calendar in `America/Los_Angeles` (PST/PDT)
- University calendar in `Europe/London` (GMT/BST)

whenami will automatically handle the conversions and show your true availability across all timezones, optionally converting the final output to any timezone you specify.

## Configuration

The tool will automatically create a `~/.config/whenami/` directory for storing configuration files. You can place your configuration files there for system-wide access, or use the current directory for project-specific configurations.

1. Copy the example config file:
```bash
cp config.json.example ~/.config/whenami/config.json
```

2. Edit `config.json` with your calendar settings:

```json
{
    "calendars": [
        {
            "id": "your-work-email@company.com",
            "name": "Work Calendar"
        },
        {
            "id": "your-personal@gmail.com",
            "name": "Personal Calendar"
        },
        {
            "id": "shared-project@company.com",
            "name": "Shared Project Calendar"
        },
        {
            "id": "student.name@university.edu",
            "name": "University Calendar"
        }
    ],
    "work_hours": {
        "start": "09:00",
        "end": "17:00"
    },
    "personal_hours": {
        "start": "08:00",
        "end": "22:00"
    },
    "minimum_slot_duration": 30,
    "default_timezone": "Europe/Dublin"
}
```

### Configuration Options

- **`calendars`**: Array of calendar objects with `id` and `name` fields
- **`work_hours`**: Define work hours (start/end times in 24-hour format)
- **`personal_hours`**: Define personal hours (start/end times in 24-hour format)
- **`minimum_slot_duration`**: Minimum duration in minutes for free slots to be displayed
- **`default_timezone`**: Default timezone for date calculations (e.g., "Europe/Dublin", "America/New_York", "UTC")
- **`llm`**: **(Optional)** LLM configuration for natural language processing - disabled by default
  - **`model`**: Model to use (e.g., "ollama/llama3.3", "gpt-4o-mini", "claude-3-haiku-20240307")
  - **`api_base`**: LLM server endpoint (varies by provider, see setup examples above)
  - **`enabled`**: Enable/disable LLM features (false by default)

**📝 Note**: Add as many calendars as needed - the tool will merge all busy periods to show your true availability across all calendars. This is especially useful if you have separate work, personal, and project calendars that you need to coordinate.

The `default_timezone` setting controls the timezone used for date calculations (e.g., "today", "tomorrow"). If not specified, the tool will try to use your system's timezone, falling back to UTC.

## Authentication

The tool requires Google Calendar API authentication:

1. Go to [Google Cloud Console](https://console.cloud.google.com/)
2. Create a new project or select an existing one
3. Enable the Google Calendar API
4. Create OAuth 2.0 credentials (Desktop application)
5. Download the credentials and save as `credentials.json` in one of these locations:
   - `~/.config/whenami/credentials.json` (recommended for system-wide access)
   - `./credentials.json` (current directory, for project-specific setup)

The first time you run the tool, it will open a browser window for authentication. The authentication token will be saved in `~/.config/whenami/token.json` for future use.

## Development

This project uses GitHub Actions for CI/CD:

- **CI Pipeline**: Runs tests on Python 3.9-3.12, generates coverage reports, and validates builds
- **PyPI Publishing**: Automated publishing to PyPI on releases using trusted publishing

For development setup, see the [Local Development Setup](#local-development-setup) section above.
