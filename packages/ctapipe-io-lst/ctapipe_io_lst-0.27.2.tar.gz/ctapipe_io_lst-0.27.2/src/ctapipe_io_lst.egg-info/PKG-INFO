Metadata-Version: 2.4
Name: ctapipe_io_lst
Version: 0.27.2
Summary: ctapipe plugin for reading LST prototype files
Author: CTA LST Project
Author-email: maximilian.linhoff@tu-dortmund.de
License: BSD 3-clause
Project-URL: Bug Tracker, https://github.com/cta-observatory/ctapipe_io_lst/issues
Project-URL: Source Code, https://github.com/cta-observatory/ctapipe_io_lst
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Astronomy
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.10
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
License-File: LICENSE
Requires-Dist: astropy<8.0.0a0,>=5.2
Requires-Dist: ctapipe<0.27.0a0,>=0.23.2
Requires-Dist: protozfits~=2.6
Requires-Dist: numpy>=1.20
Requires-Dist: scipy
Provides-Extra: tests
Requires-Dist: pytest; extra == "tests"
Provides-Extra: dev
Requires-Dist: setuptools_scm[toml]; extra == "dev"
Provides-Extra: all
Requires-Dist: pytest; extra == "all"
Requires-Dist: setuptools_scm[toml]; extra == "all"
Dynamic: license-file

# ctapipe_io_lst [![CI](https://github.com/cta-observatory/ctapipe_io_lst/actions/workflows/ci.yml/badge.svg)](https://github.com/cta-observatory/ctapipe_io_lst/actions/workflows/ci.yml)

EventSource Plugin for ctapipe, able to read LST zfits files
and calibration them to R1 as needed for ctapipe tools.

Since version 0.19, `ctapipe_io_lst` is on conda-forge,
which is the easiest way to install it, since the `protozfits`
dependency is offered pre-compiled for Linux and mac OS (including arm64).

To install into an exisiting environtment, just do:
```
# or conda
$ mamba install -c conda-forge ctapipe_io_lst
```

For development, create a new environment and run the development install:
```
conda env create -n lstenv -f environment.yml
conda activate lstenv
pip install -e .
```

`ctapipe_io_lst` is also on PyPI, but note that the `protozfits`
dependency only has wheels for Linux, so you'd need to compile 
from source on mac OS.

## Test Data

To run the tests, a set of non-public files is needed.
If you are a member of CTA, ask one of the project maintainers for the credentials
and then run

```
./download_test_data.sh
```
