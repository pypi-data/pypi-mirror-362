{"version":3,"file":"component---src-pages-settings-tsx-72c79316dbedff275f7b.js","mappings":"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","sources":["webpack://autogentstudio/./src/components/views/settings/store.tsx","webpack://autogentstudio/./src/components/views/settings/api.ts","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/palette.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/variable.js","webpack://autogentstudio/./src/components/views/settings/sidebar.tsx","webpack://autogentstudio/./src/components/views/settings/view/ui.tsx","webpack://autogentstudio/./src/components/views/settings/manager.tsx","webpack://autogentstudio/./src/pages/settings.tsx","webpack://autogentstudio/./node_modules/antd/es/style/compact-item.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/save.js"],"sourcesContent":["// store.tsx\nimport { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { settingsAPI } from \"./api\";\nimport { Settings, UISettings } from \"../../types/datamodel\";\n\n// Default UI settings that match the backend defaults\nconst DEFAULT_UI_SETTINGS: UISettings = {\n  show_llm_call_events: false,\n  expanded_messages_by_default: false,\n  show_agent_flow_by_default: false,\n  human_input_timeout_minutes: 3,\n};\n\ninterface SettingsState {\n  // Server-synced settings\n  serverSettings: Settings | null;\n  isLoading: boolean;\n  error: string | null;\n\n  // UI settings - these will be synced with server but kept in local state for performance\n  uiSettings: UISettings;\n\n  // Actions\n  initializeSettings: (userId: string) => Promise<void>;\n  updateUISettings: (settings: Partial<UISettings>) => void; // Simplified to avoid async issues\n  resetUISettings: () => Promise<void>;\n}\n\n// Helper function to safely access nested properties\nconst getUISettings = (settings: Settings | null): UISettings => {\n  if (!settings || !settings.config || !settings.config.ui) {\n    return DEFAULT_UI_SETTINGS;\n  }\n  return settings.config.ui;\n};\n\nexport const useSettingsStore = create<SettingsState>()(\n  persist(\n    (set, get) => ({\n      // Initial state\n      serverSettings: null,\n      isLoading: false,\n      error: null,\n      uiSettings: DEFAULT_UI_SETTINGS,\n\n      // Load settings from server\n      initializeSettings: async (userId: string) => {\n        // Skip if already loading\n        if (get().isLoading) return;\n\n        try {\n          set({ isLoading: true, error: null });\n          const settings = await settingsAPI.getSettings(userId);\n\n          // Extract UI settings from server response\n          const uiSettings = getUISettings(settings);\n\n          set({\n            serverSettings: settings,\n            uiSettings,\n            isLoading: false,\n          });\n        } catch (error) {\n          console.error(\"Failed to load settings:\", error);\n          set({\n            error: \"Failed to load settings\",\n            isLoading: false,\n            // Use defaults if server fails\n            uiSettings: DEFAULT_UI_SETTINGS,\n          });\n        }\n      },\n\n      // Update UI settings locally only\n      // The UISettingsPanel component will handle server syncing\n      updateUISettings: (partialSettings: Partial<UISettings>) => {\n        const { uiSettings } = get();\n        const newUISettings = { ...uiSettings, ...partialSettings };\n        set({ uiSettings: newUISettings });\n      },\n\n      // Reset UI settings to defaults - now just resets local state\n      // The UISettingsPanel component will handle actual server resets\n      resetUISettings: async () => {\n        set({ uiSettings: DEFAULT_UI_SETTINGS });\n        return Promise.resolve();\n      },\n    }),\n    {\n      name: \"ags-app-settings-0\",\n      partialize: (state) => ({\n        // Only persist UI settings locally for performance\n        uiSettings: state.uiSettings,\n      }),\n    }\n  )\n);\n","import { Settings } from \"../../types/datamodel\";\nimport { BaseAPI } from \"../../utils/baseapi\";\n\nexport class SettingsAPI extends BaseAPI {\n  async getSettings(userId: string): Promise<Settings> {\n    const response = await fetch(\n      `${this.getBaseUrl()}/settings/?user_id=${userId}`,\n      {\n        headers: this.getHeaders(),\n      }\n    );\n    const data = await response.json();\n    if (!data.status)\n      throw new Error(data.message || \"Failed to fetch settings\");\n    return data.data;\n  }\n\n  async updateSettings(settings: Settings, userId: string): Promise<Settings> {\n    const settingsData = {\n      ...settings,\n      user_id: settings.user_id || userId,\n    };\n\n    console.log(\"settingsData\", settingsData);\n\n    const response = await fetch(`${this.getBaseUrl()}/settings/`, {\n      method: \"PUT\",\n      headers: this.getHeaders(),\n      body: JSON.stringify(settingsData),\n    });\n    const data = await response.json();\n    if (!data.status)\n      throw new Error(data.message || \"Failed to update settings\");\n    return data.data;\n  }\n}\n\nexport const settingsAPI = new SettingsAPI();\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Palette = createLucideIcon(\"Palette\", [\n  [\"circle\", { cx: \"13.5\", cy: \"6.5\", r: \".5\", fill: \"currentColor\", key: \"1okk4w\" }],\n  [\"circle\", { cx: \"17.5\", cy: \"10.5\", r: \".5\", fill: \"currentColor\", key: \"f64h9f\" }],\n  [\"circle\", { cx: \"8.5\", cy: \"7.5\", r: \".5\", fill: \"currentColor\", key: \"fotxhn\" }],\n  [\"circle\", { cx: \"6.5\", cy: \"12.5\", r: \".5\", fill: \"currentColor\", key: \"qy21gx\" }],\n  [\n    \"path\",\n    {\n      d: \"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z\",\n      key: \"12rzf8\"\n    }\n  ]\n]);\n\nexport { Palette as default };\n//# sourceMappingURL=palette.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Variable = createLucideIcon(\"Variable\", [\n  [\"path\", { d: \"M8 21s-4-3-4-9 4-9 4-9\", key: \"uto9ud\" }],\n  [\"path\", { d: \"M16 3s4 3 4 9-4 9-4 9\", key: \"4w2vsq\" }],\n  [\"line\", { x1: \"15\", x2: \"9\", y1: \"9\", y2: \"15\", key: \"f7djnv\" }],\n  [\"line\", { x1: \"9\", x2: \"15\", y1: \"9\", y2: \"15\", key: \"1shsy8\" }]\n]);\n\nexport { Variable as default };\n//# sourceMappingURL=variable.js.map\n","import React from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport { PanelLeftClose, PanelLeftOpen } from \"lucide-react\";\nimport { SettingsSection } from \"./types\";\n\ninterface SettingsSidebarProps {\n  isOpen: boolean;\n  sections: SettingsSection[];\n  currentSection: SettingsSection;\n  onToggle: () => void;\n  onSelectSection: (section: SettingsSection) => void;\n}\n\nexport const SettingsSidebar: React.FC<SettingsSidebarProps> = ({\n  isOpen,\n  sections,\n  currentSection,\n  onToggle,\n  onSelectSection,\n}) => {\n  // Render collapsed state\n  if (!isOpen) {\n    return (\n      <div className=\"h-full border-r border-secondary\">\n        <div className=\"p-2 -ml-2\">\n          <Tooltip title={`Settings (${sections.length})`}>\n            <button\n              onClick={onToggle}\n              className=\"p-2 rounded-md hover:bg-secondary hover:text-accent text-secondary transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-opacity-50\"\n            >\n              <PanelLeftOpen strokeWidth={1.5} className=\"h-6 w-6\" />\n            </button>\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full border-r border-secondary\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between pt-0 p-4 pl-2 pr-2 border-b border-secondary\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-primary font-medium\">Settings</span>\n          <span className=\"px-2 py-0.5 text-xs bg-accent/10 text-accent rounded\">\n            {sections.length}\n          </span>\n        </div>\n        <Tooltip title=\"Close Sidebar\">\n          <button\n            onClick={onToggle}\n            className=\"p-2 rounded-md hover:bg-secondary hover:text-accent text-secondary transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-opacity-50\"\n          >\n            <PanelLeftClose strokeWidth={1.5} className=\"h-6 w-6\" />\n          </button>\n        </Tooltip>\n      </div>\n\n      <div className=\"overflow-y-auto h-[calc(100%-64px)]\">\n        {sections.map((section) => (\n          <div key={section.id} className=\"relative\">\n            <div\n              className={`absolute top-1 left-0.5 z-50 h-[calc(100%-8px)] w-1 bg-opacity-80 rounded \n                ${\n                  currentSection.id === section.id ? \"bg-accent\" : \"bg-tertiary\"\n                }`}\n            />\n            <div\n              className={`group ml-1 flex flex-col p-3 rounded-l cursor-pointer hover:bg-secondary \n                ${\n                  currentSection.id === section.id\n                    ? \"border-accent bg-secondary\"\n                    : \"border-transparent\"\n                }`}\n              onClick={() => onSelectSection(section)}\n            >\n              <div className=\"flex items-center gap-2\">\n                <section.icon className=\"w-4 h-4\" />\n                <span className=\"text-sm\">{section.title}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Tooltip, message } from \"antd\";\nimport { RotateCcw, Save, TriangleAlert } from \"lucide-react\";\nimport { settingsAPI } from \"../api\";\nimport { Settings, UISettings } from \"../../../types/datamodel\";\nimport { useSettingsStore } from \"../store\";\n\ninterface SettingToggleProps {\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n  label: string;\n  description?: string;\n  disabled?: boolean;\n}\n\ninterface SettingNumberInputProps {\n  value: number;\n  onChange: (value: number) => void;\n  label: string;\n  description?: string;\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n  suffix?: string;\n}\n\nconst SettingToggle: React.FC<SettingToggleProps> = ({\n  checked,\n  onChange,\n  label,\n  description,\n  disabled = false,\n}) => (\n  <div className=\"flex justify-between items-start p-4 hover:bg-secondary/5 rounded transition-colors\">\n    <div className=\"flex flex-col gap-1\">\n      <label className=\"font-medium\">{label}</label>\n      {description && (\n        <span className=\"text-sm text-secondary\">{description}</span>\n      )}\n    </div>\n    <div className=\"relative\">\n      <input\n        type=\"checkbox\"\n        checked={checked}\n        onChange={(e) => onChange(e.target.checked)}\n        disabled={disabled}\n        className=\"sr-only\"\n        id={`toggle-${label.replace(/\\s+/g, \"-\").toLowerCase()}`}\n      />\n      <label\n        htmlFor={`toggle-${label.replace(/\\s+/g, \"-\").toLowerCase()}`}\n        className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-opacity-50 cursor-pointer ${\n          disabled ? \"opacity-50 cursor-not-allowed\" : \"\"\n        } ${checked ? \"bg-accent\" : \"bg-gray-300\"}`}\n      >\n        <span\n          className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${\n            checked ? \"translate-x-6\" : \"translate-x-1\"\n          }`}\n        />\n      </label>\n    </div>\n  </div>\n);\n\nconst SettingNumberInput: React.FC<SettingNumberInputProps> = ({\n  value,\n  onChange,\n  label,\n  description,\n  disabled = false,\n  min = 1,\n  max = 30,\n  suffix = \"\",\n}) => (\n  <div className=\"flex justify-between items-start p-4 hover:bg-secondary rounded transition-colors\">\n    <div className=\"flex flex-col gap-1\">\n      <label className=\"font-medium\">{label}</label>\n      {description && (\n        <span className=\"text-sm text-secondary\">{description}</span>\n      )}\n    </div>\n    <div className=\"flex items-center gap-2\">\n      <input\n        type=\"number\"\n        value={value}\n        onChange={(e) => {\n          const newValue = parseInt(e.target.value);\n          if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n            onChange(newValue);\n          }\n        }}\n        disabled={disabled}\n        min={min}\n        max={max}\n        className=\"w-16 px-2 py-1 text-sm border border-secondary rounded focus:border-accent focus:ring-1 focus:ring-accent outline-none disabled:opacity-50 bg-primary\"\n      />\n      {suffix && <span className=\"text-sm text-secondary\">{suffix}</span>}\n    </div>\n  </div>\n);\n\ninterface UISettingsPanelProps {\n  userId: string;\n}\n\nexport const UISettingsPanel: React.FC<UISettingsPanelProps> = ({ userId }) => {\n  const {\n    serverSettings,\n    uiSettings: storeUISettings,\n    initializeSettings,\n  } = useSettingsStore();\n\n  // Local state for UI settings\n  const [localUISettings, setLocalUISettings] = useState<UISettings>({\n    show_llm_call_events: false,\n    expanded_messages_by_default: false,\n    show_agent_flow_by_default: false,\n    human_input_timeout_minutes: 3,\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [messageApi, contextHolder] = message.useMessage();\n\n  // Initialize local state from store\n  useEffect(() => {\n    setLocalUISettings(storeUISettings);\n  }, [storeUISettings]);\n\n  // Update local state when a setting is changed\n  const handleSettingChange = (\n    key: keyof UISettings,\n    value: boolean | number\n  ) => {\n    setLocalUISettings((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n    setIsDirty(true);\n  };\n\n  // Reset UI settings to defaults\n  const handleReset = async () => {\n    try {\n      setIsSaving(true);\n\n      if (!serverSettings) {\n        messageApi.error(\"Settings not loaded\");\n        setIsSaving(false);\n        return;\n      }\n\n      // Define default UI settings\n      const DEFAULT_UI_SETTINGS: UISettings = {\n        show_llm_call_events: false,\n        expanded_messages_by_default: false,\n        show_agent_flow_by_default: false,\n        human_input_timeout_minutes: 3,\n      };\n\n      // Update local state\n      setLocalUISettings(DEFAULT_UI_SETTINGS);\n\n      // Prepare for server update\n      const updatedSettings: Settings = {\n        ...serverSettings,\n        config: {\n          ...serverSettings.config,\n          ui: DEFAULT_UI_SETTINGS,\n        },\n        created_at: undefined,\n        updated_at: undefined,\n      };\n\n      console.log(\"Updated settings:\", updatedSettings);\n\n      // Update on server\n      await settingsAPI.updateSettings(updatedSettings, userId);\n\n      // Refresh from server\n      await initializeSettings(userId);\n\n      setIsDirty(false);\n      messageApi.success(\"UI settings reset successfully\");\n    } catch (error) {\n      console.error(\"Failed to reset UI settings:\", error);\n      messageApi.error(\"Failed to reset UI settings\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Save settings to server\n  const handleSave = async () => {\n    try {\n      setIsSaving(true);\n\n      if (!serverSettings) {\n        messageApi.error(\"Settings not loaded\");\n        setIsSaving(false);\n        return;\n      }\n\n      // Prepare updated settings\n      const updatedSettings: Settings = {\n        ...serverSettings,\n        config: {\n          ...serverSettings.config,\n          ui: localUISettings,\n        },\n        created_at: undefined,\n        updated_at: undefined,\n      };\n\n      // Update on server\n      await settingsAPI.updateSettings(updatedSettings, userId);\n\n      // Refresh from server to ensure sync\n      await initializeSettings(userId);\n\n      setIsDirty(false);\n      messageApi.success(\"UI settings saved successfully\");\n    } catch (error) {\n      console.error(\"Failed to save UI settings:\", error);\n      messageApi.error(\"Failed to save UI settings\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return (\n    <div className=\" \">\n      {contextHolder}\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"text-lg font-medium\">UI Settings</h3>\n        <div className=\"space-x-2 inline-flex\">\n          <Tooltip title=\"Reset to defaults\">\n            <Button\n              icon={<RotateCcw className=\"w-4 h-4\" />}\n              onClick={handleReset}\n              disabled={isSaving}\n            >\n              Reset\n            </Button>\n          </Tooltip>\n          <Tooltip title={isDirty ? \"Save your changes\" : \"No unsaved changes\"}>\n            <Button\n              type=\"primary\"\n              icon={\n                <div className=\"relative\">\n                  <Save className=\"w-4 h-4\" />\n                  {isDirty && (\n                    <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-red-500 rounded-full\" />\n                  )}\n                </div>\n              }\n              onClick={handleSave}\n              disabled={!isDirty || isSaving}\n              loading={isSaving}\n            >\n              Save\n            </Button>\n          </Tooltip>\n        </div>\n      </div>\n\n      <div className=\"space-y-0 rounded border border-secondary\">\n        <SettingToggle\n          checked={localUISettings.show_llm_call_events}\n          onChange={(checked) =>\n            handleSettingChange(\"show_llm_call_events\", checked)\n          }\n          label=\"Show LLM Events\"\n          description=\"Display detailed LLM call logs in the message thread\"\n          disabled={isSaving}\n        />\n\n        <SettingToggle\n          checked={localUISettings.expanded_messages_by_default ?? false}\n          onChange={(checked) =>\n            handleSettingChange(\"expanded_messages_by_default\", checked)\n          }\n          label=\"Expand Messages by Default\"\n          description=\"Automatically expand message threads when they load\"\n          disabled={isSaving}\n        />\n\n        <SettingToggle\n          checked={localUISettings.show_agent_flow_by_default ?? false}\n          onChange={(checked) =>\n            handleSettingChange(\"show_agent_flow_by_default\", checked)\n          }\n          label=\"Show Agent Flow by Default\"\n          description=\"Display the agent flow diagram automatically\"\n          disabled={isSaving}\n        />\n\n        <SettingNumberInput\n          value={localUISettings.human_input_timeout_minutes ?? 3}\n          onChange={(value) =>\n            handleSettingChange(\"human_input_timeout_minutes\", value)\n          }\n          label=\"Human Input Timeout\"\n          description=\"How long to wait for user input before timing out (1-30 minutes)\"\n          disabled={isSaving}\n          min={1}\n          max={30}\n          suffix=\"minutes\"\n        />\n      </div>\n\n      <div className=\"mt-4 hidden text-xs text-secondary\">\n        <TriangleAlert\n          strokeWidth={1.5}\n          className=\"inline-block mr-1 h-4 w-4\"\n        />{\" \"}\n        These settings are automatically saved and synced across browser\n        sessions\n      </div>\n    </div>\n  );\n};\n\nexport default UISettingsPanel;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Tabs, TabsProps } from \"antd\";\nimport {\n  ChevronRight,\n  RotateCcw,\n  Variable,\n  Settings,\n  Palette,\n  Brain,\n} from \"lucide-react\";\nimport { useSettingsStore } from \"./store\";\nimport { SettingsSidebar } from \"./sidebar\";\nimport { appContext } from \"../../../hooks/provider\";\nimport UISettingsPanel from \"./view/ui\";\nimport { ModelConfigPanel } from \"./view/modelconfig\";\nimport { EnvironmentVariablesPanel } from \"./view/environment\";\n\nexport const SettingsManager: React.FC = () => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem(\"settingsSidebar\");\n      return stored !== null ? JSON.parse(stored) : true;\n    }\n    return true;\n  });\n\n  const { user } = useContext(appContext);\n  const userId = user?.id || \"\";\n\n  const { serverSettings, resetUISettings, initializeSettings, isLoading } =\n    useSettingsStore();\n\n  // Initialize settings when component mounts\n  useEffect(() => {\n    if (userId) {\n      initializeSettings(userId);\n    }\n  }, [userId, initializeSettings]);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"settingsSidebar\", JSON.stringify(isSidebarOpen));\n    }\n  }, [isSidebarOpen]);\n\n  if (isLoading) {\n    return <div className=\"p-8 text-center\">Loading settings...</div>;\n  }\n\n  // Get model component for the model config panel\n  const modelComponent = serverSettings?.config.default_model_client || {\n    provider: \"openai\",\n    component_type: \"model\",\n    label: \"Default Model Client\",\n    description: \"Default model client for this environment\",\n    config: {\n      model: \"gpt-3.5-turbo\",\n      temperature: 0.7,\n      max_tokens: 1000,\n    },\n  };\n\n  const tabItems: TabsProps[\"items\"] = [\n    {\n      key: \"ui\",\n      label: (\n        <span className=\"flex items-center gap-2\">\n          <Palette className=\"w-4 h-4\" />\n          UI Settings\n        </span>\n      ),\n      children: <UISettingsPanel userId={userId} />,\n    },\n    // {\n    //   key: \"model\",\n    //   label: (\n    //     <span className=\"flex items-center gap-2\">\n    //       <Brain className=\"w-4 h-4\" />\n    //       Default Model\n    //     </span>\n    //   ),\n    //   children: (\n    //     <div className=\"mt-4\">\n    //       <ModelConfigPanel\n    //         modelComponent={modelComponent}\n    //         onModelUpdate={async () => {}}\n    //       />\n    //     </div>\n    //   ),\n    // },\n    // {\n    //   key: \"environment\",\n    //   label: (\n    //     <span className=\"flex items-center gap-2\">\n    //       <Variable className=\"w-4 h-4\" />\n    //       Environment Variables\n    //     </span>\n    //   ),\n    //   children: (\n    //     <div className=\"mt-4\">\n    //       <EnvironmentVariablesPanel\n    //         serverSettings={serverSettings}\n    //         loading={false}\n    //         userId={userId}\n    //         initializeSettings={initializeSettings}\n    //       />\n    //     </div>\n    //   ),\n    // },\n  ];\n\n  return (\n    <div className=\"relative flex h-full w-full\">\n      <div\n        className={`absolute left-0 top-0 h-full transition-all duration-200 ease-in-out ${\n          isSidebarOpen ? \"w-64\" : \"w-12\"\n        }`}\n      >\n        <SettingsSidebar\n          isOpen={isSidebarOpen}\n          sections={[\n            {\n              id: \"settings\",\n              title: \"Settings\",\n              icon: Variable,\n              content: () => <></>,\n            },\n          ]}\n          currentSection={{\n            id: \"settings\",\n            title: \"Settings\",\n            icon: Variable,\n            content: () => <></>,\n          }}\n          onToggle={() => setIsSidebarOpen(!isSidebarOpen)}\n          onSelectSection={() => {}}\n        />\n      </div>\n\n      <div\n        className={`flex-1 transition-all max-w-5xl -mr-6 duration-200 ${\n          isSidebarOpen ? \"ml-64\" : \"ml-12\"\n        }`}\n      >\n        <div className=\"p-4 pt-2\">\n          <div className=\"flex items-center gap-2 mb-4 text-sm\">\n            <span className=\"text-primary font-medium\">Settings</span>\n          </div>\n\n          <div className=\"flex items-center gap-2 mb-8 text-sm\">\n            <span className=\"text-secondary\">\n              Manage your settings and preferences\n            </span>\n          </div>\n\n          <div className=\"  rounded-lg shadow-sm\">\n            <Tabs\n              defaultActiveKey=\"ui\"\n              items={tabItems}\n              // type=\"card\"\n              size=\"large\"\n              className=\"settings-tabs\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsManager;\n","import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport { SettingsManager } from \"../components/views/settings/manager\";\n\n// markup\nconst SettingsPage = ({ data }: any) => {\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Home\" link={\"/settings\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <SettingsManager />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default SettingsPage;\n","// handle border collapse\nfunction compactItemBorder(token, parentCls, options) {\n  const {\n    focusElCls,\n    focus,\n    borderElCls\n  } = options;\n  const childCombinator = borderElCls ? '> *' : '';\n  const hoverEffects = ['hover', focus ? 'focus' : null, 'active'].filter(Boolean).map(n => `&:${n} ${childCombinator}`).join(',');\n  return {\n    [`&-item:not(${parentCls}-last-item)`]: {\n      marginInlineEnd: token.calc(token.lineWidth).mul(-1).equal()\n    },\n    '&-item': Object.assign(Object.assign({\n      [hoverEffects]: {\n        zIndex: 2\n      }\n    }, focusElCls ? {\n      [`&${focusElCls}`]: {\n        zIndex: 2\n      }\n    } : {}), {\n      [`&[disabled] ${childCombinator}`]: {\n        zIndex: 0\n      }\n    })\n  };\n}\n// handle border-radius\nfunction compactItemBorderRadius(prefixCls, parentCls, options) {\n  const {\n    borderElCls\n  } = options;\n  const childCombinator = borderElCls ? `> ${borderElCls}` : '';\n  return {\n    [`&-item:not(${parentCls}-first-item):not(${parentCls}-last-item) ${childCombinator}`]: {\n      borderRadius: 0\n    },\n    [`&-item:not(${parentCls}-last-item)${parentCls}-first-item`]: {\n      [`& ${childCombinator}, &${prefixCls}-sm ${childCombinator}, &${prefixCls}-lg ${childCombinator}`]: {\n        borderStartEndRadius: 0,\n        borderEndEndRadius: 0\n      }\n    },\n    [`&-item:not(${parentCls}-first-item)${parentCls}-last-item`]: {\n      [`& ${childCombinator}, &${prefixCls}-sm ${childCombinator}, &${prefixCls}-lg ${childCombinator}`]: {\n        borderStartStartRadius: 0,\n        borderEndStartRadius: 0\n      }\n    }\n  };\n}\nexport function genCompactItemStyle(token, options = {\n  focus: true\n}) {\n  const {\n    componentCls\n  } = token;\n  const compactCls = `${componentCls}-compact`;\n  return {\n    [compactCls]: Object.assign(Object.assign({}, compactItemBorder(token, compactCls, options)), compactItemBorderRadius(componentCls, compactCls, options))\n  };\n}","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Save = createLucideIcon(\"Save\", [\n  [\n    \"path\",\n    {\n      d: \"M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z\",\n      key: \"1c8476\"\n    }\n  ],\n  [\"path\", { d: \"M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7\", key: \"1ydtos\" }],\n  [\"path\", { d: \"M7 3v4a1 1 0 0 0 1 1h7\", key: \"t51u73\" }]\n]);\n\nexport { Save as default };\n//# sourceMappingURL=save.js.map\n"],"names":["DEFAULT_UI_SETTINGS","show_llm_call_events","expanded_messages_by_default","show_agent_flow_by_default","human_input_timeout_minutes","useSettingsStore","create","persist","set","get","serverSettings","isLoading","error","uiSettings","initializeSettings","async","settings","settingsAPI","getSettings","userId","config","ui","getUISettings","console","updateUISettings","partialSettings","newUISettings","resetUISettings","Promise","resolve","name","partialize","state","SettingsAPI","_BaseAPI","apply","arguments","_inheritsLoose","_proto","prototype","response","fetch","this","getBaseUrl","headers","getHeaders","data","json","status","Error","message","updateSettings","settingsData","user_id","log","method","body","JSON","stringify","BaseAPI","Palette","createLucideIcon","cx","cy","r","fill","key","d","Variable","x1","x2","y1","y2","SettingsSidebar","_ref","isOpen","sections","currentSection","onToggle","onSelectSection","React","className","length","Tooltip","title","onClick","PanelLeftClose","strokeWidth","map","section","id","icon","PanelLeftOpen","SettingToggle","checked","onChange","label","description","disabled","type","e","target","replace","toLowerCase","htmlFor","SettingNumberInput","_ref2","value","min","max","suffix","newValue","parseInt","isNaN","_ref3","_localUISettings$expa","_localUISettings$show","_localUISettings$huma","storeUISettings","localUISettings","setLocalUISettings","useState","isDirty","setIsDirty","isSaving","setIsSaving","messageApi","contextHolder","useMessage","useEffect","handleSettingChange","prev","Button","RotateCcw","updatedSettings","created_at","undefined","updated_at","success","Save","loading","TriangleAlert","SettingsManager","isSidebarOpen","setIsSidebarOpen","window","stored","localStorage","getItem","parse","user","useContext","appContext","setItem","default_model_client","tabItems","children","UISettingsPanel","content","Tabs","defaultActiveKey","items","size","Layout","meta","site","siteMetadata","link","style","height","compactItemBorder","token","parentCls","options","focusElCls","focus","borderElCls","childCombinator","hoverEffects","filter","Boolean","n","join","marginInlineEnd","calc","lineWidth","mul","equal","Object","assign","zIndex","compactItemBorderRadius","prefixCls","borderRadius","borderStartEndRadius","borderEndEndRadius","borderStartStartRadius","borderEndStartRadius","genCompactItemStyle","componentCls","compactCls"],"sourceRoot":""}