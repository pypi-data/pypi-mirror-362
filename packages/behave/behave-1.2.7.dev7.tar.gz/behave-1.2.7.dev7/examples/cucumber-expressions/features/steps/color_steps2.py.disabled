# -- USING: TypeBuilder.make_enum()
from behave import given, when, then
from behave.cucumber_expression import (
    TypeBuilder,
    define_parameter_type_with
)
from example4me.color import Color

parse_color = TypeBuilder.make_enum(Color)

# -- REGISTER PARAMETER TYPES:
define_parameter_type_with(
    name="color",
    regexp=parse_color.pattern,
    type=Color,
    transformer=parse_color
)

# -- STEP DEFINITIONS: With OPTIONAL parts.
@when('I select the "{color}" theme colo(u)r')
def step_when_select_color_theme(ctx, color: Color):
    assert isinstance(color, Color)
    ctx.selected_color = color

@then('the profile colo(u)r should be "{color}"')
def step_then_profile_color_should_be(ctx, the_color: Color):
    assert isinstance(the_color, Color)
    assert ctx.selected_color == the_color
