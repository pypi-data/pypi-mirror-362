[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "robotics-numpy"
dynamic = ["version"]
description = "A solely NumPy-dependent robotics Python package for basic kinematics, dynamics, and others."
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [{ name = "Chaoyue Fei", email = "chaoyue.fei@vub.be" }]
keywords = [
    "robotics",
    "kinematics",
    "dynamics",
    "numpy",
    "lightweight",
    "motion-planning",
    "robot-manipulator",
    "forward-kinematics",
    "inverse-kinematics",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ["numpy"]

[project.optional-dependencies]
rtb = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    # "numpy<2",
    "plotly",
    "roboticstoolbox-python",
]
visualization = ["plotly>=5.0.0"]
docs = [
    "mkdocs-material>=9.0.0",
    "mkdocs-jupyter>=0.24.0",
    "mkdocstrings[python]>=0.20.0",
]
test = [
    "pytest",
    "plotly",
    "pytest-cov",
    "pytest-benchmark",
    "ruff",
    "mypy",
    "black",
]
all = ["robotics-numpy[visualization]"]

[project.urls]
# Homepage = "https://github.com/chaoyue/robotics-numpy"
# Documentation = "https://robotics-numpy.readthedocs.io"
# Repository = "https://github.com/chaoyue/robotics-numpy"
# Issues = "https://github.com/chaoyue/robotics-numpy/issues"

[tool.hatch.version]
path = "src/robotics_numpy/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/robotics_numpy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=robotics_numpy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["F401", "F811"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["numpy.*", "plotly.*"]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
