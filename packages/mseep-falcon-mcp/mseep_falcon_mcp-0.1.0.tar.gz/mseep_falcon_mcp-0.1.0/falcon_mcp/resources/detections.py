"""
Contains Detections resources.
"""

SEARCH_DETECTIONS_FQL_DOCUMENTATION = """Falcon Query Language (FQL) - Search Detections Guide

=== BASIC SYNTAX ===
property_name:[operator]'value'

=== AVAILABLE OPERATORS ===
‚Ä¢ No operator = equals (default)
‚Ä¢ ! = not equal to
‚Ä¢ > = greater than
‚Ä¢ >= = greater than or equal
‚Ä¢ < = less than
‚Ä¢ <= = less than or equal
‚Ä¢ ~ = text match (ignores case, spaces, punctuation)
‚Ä¢ !~ = does not text match
‚Ä¢ * = wildcard matching (one or more characters)

=== DATA TYPES & SYNTAX ===
‚Ä¢ Strings: 'value' or ['exact_value'] for exact match
‚Ä¢ Dates: 'YYYY-MM-DDTHH:MM:SSZ' (UTC format)
‚Ä¢ Booleans: true or false (no quotes)
‚Ä¢ Numbers: 123 (no quotes)
‚Ä¢ Wildcards: 'partial*' or '*partial' or '*partial*'

=== COMBINING CONDITIONS ===
‚Ä¢ + = AND condition
‚Ä¢ , = OR condition
‚Ä¢ ( ) = Group expressions

üö® DETECTION PROPERTIES (Complete List):

=== IDENTIFICATION & CORE ===
‚Ä¢ composite_id: Unique detection identifier
‚Ä¢ aggregate_id: Related detection group identifier
‚Ä¢ cid: Customer ID
‚Ä¢ agent_id: Falcon agent identifier
‚Ä¢ pattern_id: Detection pattern identifier

=== ASSIGNMENT & WORKFLOW ===
‚Ä¢ assigned_to_name: Person assigned to this detection
‚Ä¢ assigned_to_uid: Assigned user identifier
‚Ä¢ assigned_to_uuid: Assigned user UUID
‚Ä¢ status: Detection status (new, in_progress, closed, reopened)

=== TIMESTAMPS ===
‚Ä¢ created_timestamp: When detection was created
‚Ä¢ updated_timestamp: Last modification time
‚Ä¢ timestamp: Detection occurrence timestamp

=== THREAT INTELLIGENCE ===
‚Ä¢ confidence: Confidence level (1-100)
‚Ä¢ severity: Detection severity level
‚Ä¢ tactic: MITRE ATT&CK tactic
‚Ä¢ tactic_id: MITRE ATT&CK tactic ID
‚Ä¢ technique: MITRE ATT&CK technique
‚Ä¢ technique_id: MITRE ATT&CK technique ID
‚Ä¢ objective: Attack objective description

=== DETECTION METADATA ===
‚Ä¢ name: Detection name/title
‚Ä¢ display_name: Human-readable detection name
‚Ä¢ description: Detection description
‚Ä¢ type: Detection type classification
‚Ä¢ scenario: Detection scenario

=== SYSTEM & PLATFORM ===
‚Ä¢ platform: Operating system platform
‚Ä¢ show_in_ui: Whether detection appears in UI (true/false)
‚Ä¢ data_domains: Data classification domains

=== PRODUCT FILTERING ===
‚Ä¢ product: Source Falcon product
    - 'epp' (Endpoint Protection)
    - 'idp' (Identity Protection)
    - 'mobile' (Falcon for Mobile)
    - 'xdr' (Falcon XDR)
    - 'overwatch' (OverWatch)
    - 'cwpp' (Cloud Workload Protection)
    - 'ngsiem' (Next-Gen SIEM)
    - 'thirdparty' (Third party data)
    - 'data-protection' (Data Protection)

=== SOURCE INFORMATION ===
‚Ä¢ source_products: Products that generated this detection
‚Ä¢ source_vendors: Vendor sources for the detection

=== TAGS & CLASSIFICATION ===
‚Ä¢ tags: Detection classification tags

üí° PRACTICAL DETECTION SEARCH EXAMPLES:

=== STATUS-BASED SEARCHES ===
Find new detections:
status:'new'

Find detections in progress:
status:'in_progress'

Find closed detections:
status:'closed'

Find reopened detections:
status:'reopened'

=== PRODUCT-SPECIFIC SEARCHES ===
Find endpoint protection detections:
product:'epp'

Find identity protection detections:
product:'idp'

Find XDR detections:
product:'xdr'

Find OverWatch detections:
product:'overwatch'

=== SEVERITY & CONFIDENCE SEARCHES ===
Find high confidence detections:
confidence:>80

Find medium to high confidence:
confidence:>=50

üî• SEVERITY NUMERIC MAPPING (Critical for Proper Filtering):
Based on CrowdStrike Falcon API data:
‚Ä¢ Critical: severity:>=90 (or severity:90 exactly)
‚Ä¢ High: severity:>=70 (or severity:70 exactly)
‚Ä¢ Medium: severity:>=50 (or severity:50 exactly)
‚Ä¢ Low: severity:>=20 (covers range 20-40)
‚Ä¢ Informational: severity:<=10 (covers range 2-5)

Find critical severity detections only:
severity:>=90

Find high severity detections (includes critical):
severity:>=70

Find medium severity and above (includes high & critical):
severity:>=50

Find high severity detections only (excludes critical):
severity:70

Find informational detections:
severity:<=10

=== ASSIGNMENT SEARCHES ===
Find unassigned detections:
assigned_to_name:!*

Find detections assigned to specific analyst:
assigned_to_name:'john.doe'

=== TIME-BASED SEARCHES ===
Find recent detections (last 24 hours):
created_timestamp:>'2024-01-20T00:00:00Z'

Find detections from specific date range:
created_timestamp:>='2024-01-15T00:00:00Z'+created_timestamp:<='2024-01-20T00:00:00Z'

Find recently updated detections:
updated_timestamp:>'2024-01-19T00:00:00Z'

=== THREAT INTELLIGENCE SEARCHES ===
Find detections with specific tactic:
tactic:'Persistence'

Find detections with technique ID:
technique_id:'T1055'

Find detections with specific objective:
objective:'*credential*'

=== ADVANCED COMBINED SEARCHES ===
Find new high-confidence endpoint detections:
status:'new'+confidence:>75+product:'epp'

Find assigned XDR detections that are in progress:
product:'xdr'+status:'in_progress'+assigned_to_name:*

Find recent high-severity unassigned detections:
created_timestamp:>'2024-01-18T00:00:00Z'+assigned_to_name:!*+confidence:>80

Find OverWatch detections with persistence tactics:
product:'overwatch'+tactic:'Persistence'

=== BULK FILTERING SEARCHES ===
Find detections from multiple products:
(product:'epp'),(product:'xdr'),(product:'idp')

Find detections in various active states:
(status:'new'),(status:'in_progress')

Find detections needing attention (new or reopened):
(status:'new'),(status:'reopened')

=== INVESTIGATION-FOCUSED SEARCHES ===
Find detections with specific pattern:
pattern_id:'12345'

Find related detections by aggregate:
aggregate_id:'agg-67890'

Find detections with specific tags:
tags:'malware'

Find detections that show in UI:
show_in_ui:true

üöÄ USAGE EXAMPLES:

# Find new endpoint protection detections sorted by severity
falcon_search_detections(filter="status:'new'+product:'epp'", limit=50, sort="severity.desc")

# Find high-confidence XDR detections from last week
falcon_search_detections(filter="product:'xdr'+confidence:>80+created_timestamp:>'2024-01-15T00:00:00Z'", limit=25)

# Find unassigned detections across all products
falcon_search_detections(filter="assigned_to_name:!*", limit=100, sort="timestamp.desc")

# Find OverWatch detections with specific tactics
falcon_search_detections(filter="product:'overwatch'+tactic:'Initial Access'", limit=50)

# Find detections that need immediate attention
falcon_search_detections(filter="(status:'new'),(status:'reopened')+confidence:>75", sort="timestamp.desc")

‚ö†Ô∏è IMPORTANT NOTES:
‚Ä¢ Use single quotes around string values: 'value'
‚Ä¢ Use square brackets for exact matches: ['exact_value']
‚Ä¢ Date format must be UTC: 'YYYY-MM-DDTHH:MM:SSZ'
‚Ä¢ Status values are: new, in_progress, closed, reopened
‚Ä¢ Product filtering enables product-specific detection analysis
‚Ä¢ Confidence values range from 1-100
‚Ä¢ Complex queries may take longer to execute
‚Ä¢ include_hidden parameter shows previously hidden detections
"""
