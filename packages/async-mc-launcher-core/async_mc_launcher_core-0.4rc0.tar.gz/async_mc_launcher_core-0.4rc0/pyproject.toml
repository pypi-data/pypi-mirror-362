[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "async-mc-launcher-core"
description = "A Modern Async Python Library for Minecraft Launcher Development"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["Minecraft", "Mojang", "launcher", "minecraft-launcher", "java", "async"]
license = "BSD-2-Clause"
authors = [
  { name = "JaydenChao101", email = "jaydenchao@proton.me" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "Framework :: AsyncIO",
]
dependencies = [
  "aiofiles>=24.1.0",
  "aiohttp>=3.12.14",
  "cryptography>=45.0.2",
  "flake8>=7.3.0",
  "pydantic>=2.11.7",
  "pydantic-settings>=2.7.0",
  "pyjwt>=2.10.1",
  "tomli>=1.2.0; python_version<'3.11'",
  "tomli-w>=1.2.0",
]
dynamic = ["version"]

[project.urls]
Issues = "https://github.com/JaydenChao101/async-mc-launcher-core/issues"
Source = "https://github.com/JaydenChao101/async-mc-launcher-core"

[tool.setuptools.dynamic]
version = {attr = "launcher_core.__version__"}

[dependency-groups]
dev = [
    "black>=25.1.0",
    "coverage>=7.9.2",
    "datamodel-code-generator>=0.31.2",
    "mypy>=1.17.0",
    "nuitka>=2.7.12",
    "pylint>=3.3.7",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.3",
    "vulture>=2.14",
]

[tool.mypy]
python_version = "3.13"
strict = true
disallow_untyped_defs = true
warn_unused_ignores = true
ignore_missing_imports = true


[tool.setuptools]
packages = {find = {where = ["."], include = ["launcher_core*"]}}  # 自動發現所有 launcher_core 子包
