# Adapted from https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-docker-hub-and-github-packages
name: Publish

on:
  release:
    types: [published]

jobs:
  publish-pypi:
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Checkout actions
        uses: actions/checkout@v4
      - name: Init environment
        uses: ./.github/actions/init-environment
      - name: uv Build
        run: uv build
      - name: uv Publish
        run: uv publish --token ${{ secrets.PYPI_TOKEN }}

  push_cpu_image:
    name: Push CPU Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            griptape/griptape-nodes
            ghcr.io/${{ github.repository }}

      - name: Build and push CPU image
        id: push_cpu
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            BUILD_TYPE=cpu
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_gpu_image:
    name: Push GPU Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            griptape/griptape-nodes
            ghcr.io/${{ github.repository }}

      - name: Generate GPU tags
        id: meta_gpu
        run: |
          # Read the comma‚Äêseparated list of CPU tags from metadata-action
          CPU_TAGS="${{ steps.meta.outputs.tags }}"

          # Split into array
          IFS=',' read -r -a TAG_ARRAY <<< "$CPU_TAGS"

          # Append "-gpu" to each tag name
          GPU_TAGS=""
          for full_ref in "${TAG_ARRAY[@]}"; do
            # full_ref has form "repo:tag"
            image_name="${full_ref%%:*}"
            image_tag="${full_ref##*:}"
            gpu_ref="${image_name}:${image_tag}-gpu"

            if [ -z "$GPU_TAGS" ]; then
              GPU_TAGS="$gpu_ref"
            else
              GPU_TAGS="$GPU_TAGS,$gpu_ref"
            fi
          done

          echo "tags=$GPU_TAGS" >> $GITHUB_OUTPUT

      - name: Build and push GPU image
        id: push_gpu
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            BUILD_TYPE=gpu
          tags: ${{ steps.meta_gpu.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
