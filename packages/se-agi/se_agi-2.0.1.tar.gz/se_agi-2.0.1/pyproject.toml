[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "se-agi"
version = "2.0.1"
description = "Self-Evolving General AI: The Holy Grail of Autonomous Intelligence"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SE-AGI Research Team", email = "bajpaikrishna715@gmail.com"}
]
maintainers = [
    {name = "SE-AGI Research Team", email = "bajpaikrishna715@gmail.com"}
]
keywords = [
    "artificial-intelligence",
    "machine-learning", 
    "agi",
    "autonomous-ai",
    "self-evolving",
    "multi-agent",
    "meta-learning",
    "reasoning",
    "cognitive-architecture"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
requires-python = ">=3.9"
dependencies = [
    "torch>=2.1.0",
    "transformers>=4.30.0",
    "accelerate>=0.20.0",
    "datasets>=2.14.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "networkx>=3.1",
    "pydantic>=2.0.1",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "asyncio-mqtt>=0.14.0",
    "redis>=4.6.0",
    "sqlalchemy>=2.0.1",
    "alembic>=1.11.0",
    "gymnasium>=0.29.0",
    "stable-baselines3>=2.1.0",
    "optuna>=3.3.0",
    "wandb>=0.15.0",
    "tensorboard>=2.13.0",
    "huggingface-hub>=0.16.0",
    "opencv-python-headless>=4.8.0",
    "pillow>=10.0.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "httpx>=0.24.0",
    "websockets>=11.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "aiofiles>=23.1.0",
    "chromadb>=0.4.0",
    "faiss-cpu>=1.7.4",
    "qdrant-client>=1.4.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "jsonschema>=4.19.0",
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
]
vision = [
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "transformers[vision]>=4.30.0",
]
audio = [
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
]
simulation = [
    "gymnasium>=0.29.0",
    "pybullet>=3.2.5",
]
all = [
    "se-agi[dev,vision,audio,simulation]",
]

[project.urls]
Homepage = "https://github.com/krish567366/se-agi"
Documentation = "https://krish567366.github.io/se-agi"
Repository = "https://github.com/krish567366/se-agi"
Issues = "https://github.com/krish567366/se-agi/issues"
Changelog = "https://github.com/krish567366/se-agi/blob/main/CHANGELOG.md"

[project.scripts]
se-agi = "se_agi.cli:main"
se-agi-train = "se_agi.training.cli:main"
se-agi-evolve = "se_agi.evolution.cli:main"

[tool.setuptools.packages.find]
include = ["se_agi*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
se_agi = ["configs/*.yaml", "prompts/*.txt", "schemas/*.json"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
