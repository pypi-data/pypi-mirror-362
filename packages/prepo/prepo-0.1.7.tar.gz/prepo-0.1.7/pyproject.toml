[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "prepo"
dynamic = ["version"]  # Use setuptools-scm for versioning
authors = [
    {name = "Erik Hoxhaj", email = "erik.hoxhaj@outlook.com"},
]
description = "A modern Python package for intelligent preprocessing of pandas DataFrames with automatic data type detection, cleaning, and scaling"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
keywords = ["pandas", "preprocessing", "data-science", "feature-engineering", "data-cleaning", "machine-learning"]
dependencies = [
    "pandas>=2.1.0",
    "numpy>=2.0.0",
    "scikit-learn>=1.4.0",
    "scipy>=1.11.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "black>=23.3.0",
    "ruff>=0.5.0",
    "mypy>=1.4.0",
    "pandas-stubs>=2.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
]
parquet = [
    "pyarrow>=16.0.0",
    "fastparquet>=2023.0.0",
]
performance = [
    "polars>=0.20.0",
    "dask[dataframe]>=2024.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.23.0",
    "myst-parser>=2.0.0",
]
all = [
    "prepo[dev,parquet,performance,docs]",
]

[project.urls]
Homepage = "https://github.com/erikhox/prepo"
Documentation = "https://prepo.readthedocs.io"
Repository = "https://github.com/erikhox/prepo"
Issues = "https://github.com/erikhox/prepo/issues"
Changelog = "https://github.com/erikhox/prepo/blob/main/CHANGELOG.md"
"Bug Reports" = "https://github.com/erikhox/prepo/issues"
"Source Code" = "https://github.com/erikhox/prepo"

[project.scripts]
prepo = "prepo.cli:main"

# Setuptools configuration
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["prepo*"]

[tool.setuptools.package-data]
prepo = ["py.typed"]

# Setuptools-scm for automatic versioning from git tags
[tool.setuptools_scm]
write_to = "src/prepo/_version.py"
version_scheme = "python-simplified-semver"
local_scheme = "no-local-version"

# Development tools configuration
[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "NPY",   # NumPy-specific rules
    "PD",    # pandas-vet
    "PERF",  # perflint for performance
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E741",  # ambiguous variable name
]

[tool.ruff.per-file-ignores]
"tests/*" = ["B", "C", "E", "F", "W", "PLR2004"]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["prepo"]
force-single-line = true

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = false
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "polars.*",
    "pyarrow.*",
    "dask.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src/prepo",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/prepo"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/setup.py",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"
