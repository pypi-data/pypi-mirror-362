[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "prepo"
version = "0.2.0"
description = "A Python package with automated data type detection, KNN imputation, outlier removal, and multiple scaling methods using type-safe enum architecture"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Erik Hoxhaj", email = "erik.hoxhaj@outlook.com"}
]
maintainers = [
    {name = "Erik Hoxhaj", email = "erik.hoxhaj@outlook.com"}
]
keywords = [
    "pandas", "preprocessing", "data-science", "feature-engineering", 
    "machine-learning", "automation", "type-detection", "knn-imputation", 
    "scaling", "outlier-detection", "cli", "polars", "pyarrow"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
performance = [
    "polars>=0.20.0",
    "pyarrow>=10.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xvfb>=3.0.0",
    "coverage>=7.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "coverage-badge>=1.1.0",
]
cli = [
    "click>=8.0.0",
]
all = [
    "polars>=0.20.0",
    "pyarrow>=10.0.0",
    "click>=8.0.0",
]

[project.scripts]
prepo = "prepo.cli:main"

[project.urls]
"Homepage" = "https://github.com/erikhox/prepo"
"Bug Reports" = "https://github.com/erikhox/prepo/issues"
"Source" = "https://github.com/erikhox/prepo"
"Documentation" = "https://github.com/erikhox/prepo#readme"
"Changelog" = "https://github.com/erikhox/prepo/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 127
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    "*.egg-info"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--cov=src/prepo",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
    "-ra",
    "--strict-markers",
    "--strict-config",
]
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/prepo"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
