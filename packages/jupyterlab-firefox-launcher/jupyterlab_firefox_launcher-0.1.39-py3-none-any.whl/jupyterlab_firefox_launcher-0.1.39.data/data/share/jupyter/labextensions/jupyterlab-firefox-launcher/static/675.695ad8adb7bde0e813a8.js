"use strict";(self.webpackChunkjupyterlab_firefox_launcher=self.webpackChunkjupyterlab_firefox_launcher||[]).push([[675],{675:(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var o=t(654),r=t(805),l=t(708),i=t(955),s=t(256);const c=()=>{document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||console.log("Exited fullscreen mode")},a={id:"jupyterlab-firefox-launcher:plugin",description:"JupyterLab extension to launch Firefox in a tab",autoStart:!0,requires:[o.ILauncher,r.ICommandPalette],activate:async(e,n,t)=>{const o="firefox:open",a="Firefox Browser";e.commands.addCommand(o,{label:a,execute:async()=>{var n,t,o;console.log("[Firefox Launcher] Command executed");let d="",u=!1;try{console.log("[Firefox Launcher] Making launch request to backend...");const e=await async function(e="",n={}){const t=i.ServerConnection.makeSettings(),o=l.URLExt.join(t.baseUrl,"jupyterlab-firefox-launcher",e);console.log(`[Firefox Launcher] Making API request to: ${o}`),console.log(`[Firefox Launcher] Base URL: ${t.baseUrl}`),console.log("[Firefox Launcher] Request init:",n);const r=await i.ServerConnection.makeRequest(o,{method:"POST",...n},t);if(console.log(`[Firefox Launcher] Response status: ${r.status}`),console.log("[Firefox Launcher] Response headers:",r.headers),!r.ok){const e=await r.text();throw console.error(`[Firefox Launcher] API request failed with status ${r.status}: ${e}`),new Error(`API request failed with status ${r.status}: ${e}`)}const s=r.json();return console.log("[Firefox Launcher] Response data:",s),s}("launch",{method:"POST"});console.log("[Firefox Launcher] Backend response:",e),e&&e.url?(d=e.url,u=!0,console.log("[Firefox Launcher] ✅ Backend URL received:",d)):console.warn("[Firefox Launcher] ❌ Backend response missing URL:",e)}catch(e){console.error("[Firefox Launcher] ❌ Backend API call failed:",e)}if(!u){console.log("[Firefox Launcher] 🔧 Attempting to construct JupyterHub proxy URL...");const e=window.location.href;if(console.log("[Firefox Launcher] Current URL:",e),e.includes("/user/")){const n=e.match(/(https?:\/\/[^\/]+\/user\/[^\/]+)/);n&&(d=`${n[1]}/proxy/8080/vnc.html?autoconnect=true&resize=scale`,console.log("[Firefox Launcher] 🎯 Constructed JupyterHub URL:",d))}d||(d="about:blank",console.warn("[Firefox Launcher] ⚠️ Using blank page fallback"))}const f=new s.Widget;f.node.style.height="100%",f.node.style.width="100%",f.node.style.overflow="hidden";const x="firefox-iframe";let h="";h=u?"Connected successfully via backend API":"Backend API failed - using manual URL construction",f.node.innerHTML=((e,n,t="")=>"about:blank"===n||t.includes("error")?`\n      <div style="display:flex; flex-direction:column; height:100%; background:#f8f9fa;">\n        <div style="padding:20px; text-align:center;">\n          <h2 style="color:#dc3545;">🔧 Firefox Launcher Status</h2>\n          <div style="background:white; border-radius:8px; padding:20px; margin:20px; box-shadow:0 2px 4px rgba(0,0,0,0.1);">\n            <p><strong>Current Status:</strong> ${t||"Attempting to connect to VNC service..."}</p>\n            <p><strong>URL:</strong> ${n}</p>\n            <div style="margin-top:20px;">\n              <button onclick="window.location.reload()" style="padding:10px 20px; background:#007bff; color:white; border:none; border-radius:4px; cursor:pointer;">\n                🔄 Retry Connection\n              </button>\n            </div>\n          </div>\n          <div style="text-align:left; background:#f8f9fa; padding:15px; border-radius:5px; margin:20px;">\n            <h4>Troubleshooting:</h4>\n            <ul style="margin:10px 0;">\n              <li>Check that the Firefox launcher backend is running</li>\n              <li>Verify VNC services are active on the server</li>\n              <li>Ensure proper network connectivity to VNC ports</li>\n              <li>Try refreshing this tab after a few seconds</li>\n            </ul>\n          </div>\n        </div>\n      </div>`:`\n    <div style="display:flex; flex-direction:column; height:100%;">\n      \x3c!-- URL Navigation Bar --\x3e\n      <div style="display:flex; align-items:center; padding:8px; gap:8px; background:#f8f9fa; border-bottom:1px solid #dee2e6;">\n        <button id="ff-back" title="Back">⬅️</button>\n        <button id="ff-forward" title="Forward">➡️</button>\n        <button id="ff-refresh" title="Refresh">🔄</button>\n        <button id="ff-home" title="Home">🏠</button>\n        <input \n          id="ff-url-bar" \n          type="text" \n          placeholder="Enter URL (e.g., https://google.com)" \n          style="flex:1; padding:6px 12px; border:1px solid #ced4da; border-radius:4px; font-size:14px;"\n          value=""\n        />\n        <button id="ff-go" title="Go" style="padding:6px 12px; background:#007bff; color:white; border:none; border-radius:4px; cursor:pointer;">Go</button>\n        <div style="border-left:1px solid #dee2e6; height:24px; margin:0 8px;"></div>\n        <button id="ff-fullscreen" title="Fullscreen">⛶</button>\n        <button id="ff-close" title="Close" style="color:#dc3545;">❌</button>\n      </div>\n      \n      \x3c!-- Status indicator --\x3e\n      <div style="padding:4px 8px; ${t.includes("failed")?"background:#fff3cd; border-bottom:1px solid #ffeaa7;":"background:#d4edda; border-bottom:1px solid #c3e6cb;"} font-size:12px;">\n        ${t.includes("failed")?"🟡":"🟢"} ${t||"Connected to VNC"}: ${n}\n      </div>\n      \n      \x3c!-- Firefox VNC Iframe --\x3e\n      <iframe \n        id="${e}"\n        src="${n}" \n        style="width:100%; flex:1; border:none;"\n        allowfullscreen\n      ></iframe>\n    </div>`)(x,d,h);const p=new r.MainAreaWidget({content:f});p.id="firefox-browser",p.title.label=a,p.title.closable=!0,p.node.style.height="100%",e.shell.add(p,"main"),e.shell.activateById(p.id);const b=f.node.querySelector(`#${x}`);b?(null===(n=f.node.querySelector("#ff-refresh"))||void 0===n||n.addEventListener("click",()=>{b.src=b.src}),null===(t=f.node.querySelector("#ff-close"))||void 0===t||t.addEventListener("click",()=>{p.close()}),null===(o=f.node.querySelector("#ff-fullscreen"))||void 0===o||o.addEventListener("click",()=>{var e;(e=b).requestFullscreen?e.requestFullscreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.msRequestFullscreen&&e.msRequestFullscreen()}),document.addEventListener("fullscreenchange",c),document.addEventListener("webkitfullscreenchange",c),document.addEventListener("mozfullscreenchange",c),document.addEventListener("MSFullscreenChange",c)):console.error("Firefox iframe not found")}}),n.add({command:o,category:"Other",rank:1}),t.addItem({command:o,category:"Firefox"})}}}}]);