"use strict";(self.webpackChunkjupyterlab_firefox_launcher=self.webpackChunkjupyterlab_firefox_launcher||[]).push([[675],{675:(e,n,o)=>{o.r(n),o.d(n,{default:()=>u});var t=o(654),r=o(805),l=o(708),s=o(955),c=o(256);const a=()=>{document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||console.log("Exited fullscreen mode")},u={id:"jupyterlab-firefox-launcher:plugin",description:"JupyterLab extension to launch Firefox in a tab",autoStart:!0,requires:[t.ILauncher,r.ICommandPalette],activate:async(e,n,o)=>{const t="firefox:open",u="Firefox Browser";e.commands.addCommand(t,{label:u,execute:async()=>{var n,o,t;console.log("[Firefox Launcher] Command executed");let i="http://localhost:6080/vnc.html?autoconnect=true";try{console.log("[Firefox Launcher] Making launch request to backend...");const e=await async function(e="",n={}){const o=s.ServerConnection.makeSettings(),t=l.URLExt.join(o.baseUrl,"jupyterlab-firefox-launcher",e);console.log(`[Firefox Launcher] Making API request to: ${t}`),console.log(`[Firefox Launcher] Base URL: ${o.baseUrl}`),console.log("[Firefox Launcher] Request init:",n);const r=await s.ServerConnection.makeRequest(t,{method:"POST",...n},o);if(console.log(`[Firefox Launcher] Response status: ${r.status}`),console.log("[Firefox Launcher] Response headers:",r.headers),!r.ok){const e=await r.text();throw console.error(`[Firefox Launcher] API request failed with status ${r.status}: ${e}`),new Error(`API request failed with status ${r.status}: ${e}`)}const c=r.json();return console.log("[Firefox Launcher] Response data:",c),c}("launch",{method:"POST"});console.log("[Firefox Launcher] Backend response:",e),e.url?(i=e.url,console.log("[Firefox Launcher] Using backend URL:",i)):console.warn("[Firefox Launcher] No URL in response, using fallback")}catch(e){console.error("[Firefox Launcher] Failed to launch Firefox:",e)}const d=new c.Widget;d.node.style.height="100%",d.node.style.width="100%",d.node.style.overflow="hidden";const f="firefox-iframe";d.node.innerHTML=((e,n)=>`\n    <div style="display:flex; justify-content:end; padding:4px; gap:8px; background:#f5f5f5;">\n      <button id="ff-refresh">üîÑ Refresh</button>\n      <button id="ff-fullscreen">‚õ∂ Fullscreen</button>\n      <button id="ff-close">‚ùå Close</button>\n    </div>\n    <iframe \n      id="${e}"\n      src="${n}" \n      style="width:100%; height:90%; border:none;"\n      allowfullscreen\n    ></iframe>`)(f,i);const h=new r.MainAreaWidget({content:d});h.id="firefox-browser",h.title.label=u,h.title.closable=!0,h.node.style.height="100%",e.shell.add(h,"main"),e.shell.activateById(h.id);const m=d.node.querySelector(`#${f}`);m?(null===(n=d.node.querySelector("#ff-refresh"))||void 0===n||n.addEventListener("click",()=>{m.src=m.src}),null===(o=d.node.querySelector("#ff-close"))||void 0===o||o.addEventListener("click",()=>{h.close()}),null===(t=d.node.querySelector("#ff-fullscreen"))||void 0===t||t.addEventListener("click",()=>{var e;(e=m).requestFullscreen?e.requestFullscreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.msRequestFullscreen&&e.msRequestFullscreen()}),document.addEventListener("fullscreenchange",a),document.addEventListener("webkitfullscreenchange",a),document.addEventListener("mozfullscreenchange",a),document.addEventListener("MSFullscreenChange",a)):console.error("Firefox iframe not found")}}),n.add({command:t,category:"Other",rank:1}),o.addItem({command:t,category:"Firefox"})}}}}]);