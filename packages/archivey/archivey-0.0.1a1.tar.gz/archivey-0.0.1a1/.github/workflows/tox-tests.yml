name: Run Tox Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  all-deps-tests:
    name: Tox - py${{ matrix.python-version }}-alldeps
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.13t", "3.14-dev", "3.14t-dev"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: pip install tox

      - name: Install unrar (for rarfile tests)
        run: sudo apt-get update && sudo apt-get install -y unrar

      - name: Run tox environment
        run: |
          if [[ "${{ matrix.python-version }}" == "3.14-dev" ]]; then
            tox -e py3.14-alldeps
          elif [[ "${{ matrix.python-version }}" == "3.14t-dev" ]]; then
            tox -e py3.14t-freethreaded
          elif [[ "${{ matrix.python-version }}" == "3.13t" ]]; then
            tox -e py3.13t-freethreaded
          else
            tox -e py${{ matrix.python-version }}-alldeps
          fi

  dependency-version-tests:
    name: Tox - py${{ matrix.python-version }}-${{ matrix.tox_env }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.13"]
        tox_env: ["newlibs", "oldlibs", "nolibs", "rarfile_no_crypto"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: pip install tox

      - name: Install unrar (for rarfile tests)
        run: sudo apt-get update && sudo apt-get install -y unrar

      - name: Run tox environment
        run: tox -e py${{ matrix.python-version }}-${{ matrix.tox_env }}
