# ATTENTION!!
#
# DO NOT EDIT THIS FILE WITHOUT MAKING A BACKUP COPY!
#
# This is the default GeoEco logging configuration file. This
# configuration is used when you initialize the GeoEco logging system
# but do not specify your own configuration file. You may change the
# default configuration by editing this file. But, for safety, you
# should consider creating your own file and leaving this one alone.
# 
# This file is formatted according to the format specified in the
# Python Library Reference documentation. Search that documentation
# "configuration file format". In Python 2.4.4, the article was titled
# "6.29.10.2 Configuration file format".
#
# This format is approximately the same as a Windows "INI" file. You
# can also read more about it in the Python documentation for the
# "ConfigParser" class.
#
# WARNING: The Python logging system does not report very helpful
# error messages when you supply a configuration file with invalid
# syntax. In fact, it suppresses many errors, making it almost
# impossible to track them down. For this reason, ALWAYS make a backup
# copy of your file and change JUST A LITTLE AT A TIME so that
# mistakes are easier to track down.

# The handlers specify the possible destinations for log messages. Python
# provides more than the default ones you see here:

[handlers]
keys=Console,ArcGIS

[handler_Console]
class=GeoEco.Logging._GeoEcoStreamHandler
formatter=Console
args=(sys.stdout,)

[handler_ArcGIS]
class=GeoEco.Logging._ArcGISLoggingHandler
formatter=ArcGIS
args=()

# The formatters specify the message output format for handlers:

[formatters]
keys=Console,ArcGIS

[formatter_Console]
format=%(asctime)s %(levelname)s %(message)s

[formatter_ArcGIS]
format=%(message)s

# The loggers specify which messages go to which handlers:

[loggers]
keys=root,GeoEco,ArcGIS,DatabaseAccess,Datasets,R

# Log GeoEco informational, warning and error messages to the console.
# and to ArcGIS. To log debug messages as well, change "level=INFO"
# to "level=DEBUG". But rather than editing the default GeoEco logging
# configuration file, consider making a copy and explicitly initializing the
# logging system with your own file.

[logger_GeoEco]
level=INFO
handlers=Console,ArcGIS
propagate=0
qualname=GeoEco

# Only log warnings and errors from GeoEco.ArcGIS. Change "level=WARNING"
# to "level=INFO" to see the messages reported by ArcGIS any time GeoEco invokes
# an ArcGIS geoprocessing tool. Change it to "level=DEBUG" to see a complete
# low-level trace of all interactions between GeoEco and the ArcGIS
# geoprocessor (a message will be generated every time GeoEco accesses a
# property or invokes a method of the geoprocessor).

[logger_ArcGIS]
level=WARNING
handlers=Console,ArcGIS
propagate=0
qualname=GeoEco.ArcGIS

# Only log infos, warnings and errors from GeoEco.DatabaseAccess. Change
# "level=INFO" to "level=DEBUG" to see a complete low-level trace all GeoEco
# interactions with databases. Note: this will generate a LOT of messages if
# for scenarios that involve significant database I/O.

[logger_DatabaseAccess]
level=INFO
handlers=Console,ArcGIS
propagate=0
qualname=GeoEco.DatabaseAccess

# Only log infos, warnings and errors from GeoEco.Datasets. These
# messages will eventually replace the ones from
# GeoEco.DatabaseAccess. Please see above for more information.

[logger_Datasets]
level=INFO
handlers=Console,ArcGIS
propagate=0
qualname=GeoEco.Datasets

# Only log infos, warnings, and errors from the R statistics program. Change
# "level=INFO" to "level=DEBUG" to see a complete low-level trace of all
# interactions between GeoEco and the R interpreter (a message will be generated
# every time GeoEco accesses a property or invokes a method of the interpreter).

[logger_R]
level=INFO
handlers=Console,ArcGIS
propagate=0
qualname=GeoEco.R

# Log warnings and errors from any non-GeoEco component to the console.
# Because the modules included in the "Python library" do not do any
# logging, there won't be any non-GeoEco messages unless the user calls
# some other third-party Python modules that do report log messages.

[logger_root]
level=WARNING
handlers=Console
