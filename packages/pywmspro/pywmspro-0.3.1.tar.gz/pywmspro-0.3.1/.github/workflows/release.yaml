---
name: Release
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5
      - run: uv build
      - uses: actions/upload-artifact@v4
        with:
          name: Packages
          path: dist
  test-pypi:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/pywmspro
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          print-hash: true
  github-release:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs: test-pypi
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: dist/*
      - run: >
          gh release create "${{ github.ref_name }}" dist/*
          --target "${{ github.sha }}"
          --generate-notes
          --verify-tag
          --prerelease
          --draft
        env:
          GH_TOKEN: "${{ github.token }}"
  prod-pypi:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs: github-release
    environment:
      name: prod-pypi
      url: https://pypi.org/p/pywmspro
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
...
