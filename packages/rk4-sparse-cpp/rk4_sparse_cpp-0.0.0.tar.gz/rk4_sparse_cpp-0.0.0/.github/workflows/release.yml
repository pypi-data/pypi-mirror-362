# =========================== .github/workflows/release.yml ===========================
name: Build and publish to PyPI

on:
  push:
    tags:
      - 'v*'                 # 例: v1.2.3 でトリガ

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 60      # 保険：無限ループ防止

    steps:
    # -----------------------------------------------------------------------
    # 1. ソース & サブモジュール取得（タグ必須：setuptools-scm 用）
    # -----------------------------------------------------------------------
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
        fetch-tags: true

    # -----------------------------------------------------------------------
    # 2. ホスト Python（キャッシュ付き）— ここでは 3.11 で任意
    # -----------------------------------------------------------------------
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    # -----------------------------------------------------------------------
    # 3. ビルドツール導入
    # -----------------------------------------------------------------------
    - name: Upgrade pip and install build tools
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build cibuildwheel==2.23.3

    # -----------------------------------------------------------------------
    # 4. aarch64 クロスビルド用 QEMU
    # -----------------------------------------------------------------------
    - name: Setup QEMU (for aarch64 wheels)
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    # -----------------------------------------------------------------------
    # 5. Wheel ビルド (Python 3.9+ に絞る)
    # -----------------------------------------------------------------------
    - name: Build wheels
      env:
        # 対応アーキテクチャ
        CIBW_ARCHS_LINUX: "x86_64 aarch64"
        # Python 3.8 以下・PyPy をスキップ
        CIBW_SKIP: "cp36-* cp37-* cp38-* pp*"
        # ログ詳細
        CIBW_BUILD_VERBOSITY: "1"
        # ビルド並列度
        CIBW_PARALLEL: "2"
        # manylinux 2.28 (glibc 2.28) ベース
        CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
        CIBW_MANYLINUX_AARCH64_IMAGE: "manylinux_2_28"
        # ビルド専用。NumPy 2.x + pybind11 3.x に合わせる
        CIBW_BEFORE_BUILD: |
          pip install -U pip
          pip install "numpy~=2.0" "pybind11>=3.0"
      run: cibuildwheel --output-dir dist

    # -----------------------------------------------------------------------
    # 6. ソース配布 (sdist)
    # -----------------------------------------------------------------------
    - name: Build sdist
      run: python -m build --sdist -o dist

    # -----------------------------------------------------------------------
    # 7. ビルド成果物をアーティファクトとして保存（任意）
    # -----------------------------------------------------------------------
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

    # -----------------------------------------------------------------------
    # 8. PyPI アップロード
    # -----------------------------------------------------------------------
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
