
name: CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
  publish-to-pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repository with full history depth to retrieve all tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
          python -m pip install --upgrade twine
          python -m pip install --upgrade setuptools_scm
          python -m pip install --upgrade build
          python -m pip install --upgrade semver

      - name: Increment the git tag
        run: |
          # get the current git tag
          git fetch --tags origin
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          # Increment the tag by a minor version with the semver python package
          NEW_TAG=$(python -c "import semver; print(semver.bump_minor('$CURRENT_TAG'))")
          git tag $NEW_TAG
          # push the tag to the remote repository
          git push origin $NEW_TAG

      - name: Retrieve the package version using setuptools_scm and publish to PyPI
        run: |
          # Use setuptools_scm to get the current version and echo it
          PACKAGE_VERSION=$(python -c "import setuptools_scm; print(setuptools_scm.get_version())")
          echo "Package version: $PACKAGE_VERSION"

          # Build the package using setuptools_scm for versioning
          python -m build

          # Publish the package to PyPI using twine
          python -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

  deploy-prod:
    uses: VisiumCH/deploy-to-cloud-run/.github/workflows/deploy-to-cloud-run.yaml@main
    needs: publish-to-pypi
    with:
      app_name: explore-prod
      docker_build_context: .
      dockerfile_path: examples/iris/Dockerfile
    secrets:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  
  deploy-recommender-system-prod:
    uses: VisiumCH/deploy-to-cloud-run/.github/workflows/deploy-to-cloud-run.yaml@main
    with:
      app_name: explore-recommender-system-prod
      docker_build_context: .
      dockerfile_path: examples/recommender/Dockerfile
    secrets:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
