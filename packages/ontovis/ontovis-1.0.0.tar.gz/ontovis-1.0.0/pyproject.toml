[project]
name = "ontovis"
version = "1.0.0"
description = "Visualize and analyze WissKI pathbuilders."
readme = "README.md"
authors = [
    { name = "Oliver Baumann", email = "oliver.baumann@uni-bayreuth.de" }
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Visualization",
    "Typing :: Typed"
]
dependencies = [
    "jinja2>=3.1.6",
    "networkx[default]>=3.5",
    "pygraphviz",
    "requests>=2.32.4",
    "rich>=14.0.0",
    "typer>=0.16.0",
]

[project.urls]
Homepage = "https://github.com/AM-Digital-Research-Environment/ontovis"
Documentation = "https://github.com/AM-Digital-Research-Environment/ontovis/blob/main/COMMANDS.md"
Repository = "https://github.com/AM-Digital-Research-Environment/ontovis"
Issues = "https://github.com/AM-Digital-Research-Environment/ontovis/issues"
Changelog = "https://github.com/AM-Digital-Research-Environment/ontovis/blob/main/CHANGELOG.md"

[project.scripts]
ontovis = "ontovis.main:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "basedpyright>=1.29.4",
    "pytest>=8.4.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.11.13",
    "types-networkx>=3.5.0.20250610",
    "types-requests>=2.32.4.20250611",
]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]
addopts = "-ra --cov=ontovis --cov-report=xml -m \"not slow\""
testpaths = ["./tests"]

[tool.ruff]
# General Ruff settings
line-length = 88 # Or your preferred line length
target-version = "py311" # Or your target Python version

[tool.ruff.lint]
# Enable common linting rules, including import sorting (I)
# "E" for Error, "F" for Flake8, "I" for isort-related rules (import sorting)
select = ["E", "F", "I"]
# You can add more categories like "B" for Bugbear, "ANN" for type annotations etc.
# select =

# If you have specific rules you want to ignore, add them here
# ignore = ["E501"] # Example: ignore line length if you prefer formatter to handle it

[tool.ruff.format]
# These are the formatter-specific settings.
# Ruff's formatter handles import grouping and sorting by default.
# You typically don't need a specific setting for "sort imports" here.
# However, you can configure other formatting aspects:
quote-style = "double" # "double" or "single"
indent-style = "space" # "space" or "tab"
docstring-code-format = true # Format code examples in docstrings [1, 2]
