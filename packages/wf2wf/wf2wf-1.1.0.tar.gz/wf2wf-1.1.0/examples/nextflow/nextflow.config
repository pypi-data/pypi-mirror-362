// Nextflow configuration file

// Enable DSL2
nextflow.enable.dsl = 2

// Pipeline parameters
params {
    // Input/output
    input_data = "data/raw_data.txt"
    output_dir = "results"

    // Resource defaults
    threads = 4
    memory = "8.GB"

    // Analysis parameters
    analysis_threshold = 0.05
    max_iterations = 1000
}

// Process configuration
process {
    // Default settings
    cpus = 2
    memory = '4.GB'
    time = '1h'

    // Error handling
    errorStrategy = 'retry'
    maxRetries = 1

    // Container settings
    container = 'ubuntu:20.04'

    // Process-specific settings
    withName: 'PREPARE_DATA' {
        cpus = 2
        memory = '4.GB'
        container = 'python:3.9-slim'
    }

    withName: 'ANALYZE_DATA' {
        cpus = 4
        memory = '8.GB'
        time = '2h'
        container = 'rocker/r-ver:4.2.0'
        maxRetries = 2
    }

    withName: 'GENERATE_REPORT' {
        cpus = 2
        memory = '4.GB'
        container = 'pandoc/latex:2.19'
    }
}

// Executor configuration
executor {
    name = 'local'
    cpus = 8
    memory = '32.GB'
}

// Container configuration
docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g)'
}

singularity {
    enabled = false
    autoMounts = true
}

// Conda configuration
conda {
    enabled = true
    useMamba = true
}

// Resource monitoring
timeline {
    enabled = true
    file = "${params.output_dir}/timeline.html"
}

report {
    enabled = true
    file = "${params.output_dir}/report.html"
}

trace {
    enabled = true
    file = "${params.output_dir}/trace.txt"
}

dag {
    enabled = true
    file = "${params.output_dir}/dag.svg"
}

// Profiles for different execution environments
profiles {
    standard {
        executor.name = 'local'
        executor.cpus = 8
        executor.memory = '32.GB'
    }

    cluster {
        executor.name = 'slurm'
        executor.queueSize = 50
        process.queue = 'compute'
        process.clusterOptions = '--account=research'
    }

    cloud {
        executor.name = 'awsbatch'
        aws.region = 'us-east-1'
        aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
    }
}
