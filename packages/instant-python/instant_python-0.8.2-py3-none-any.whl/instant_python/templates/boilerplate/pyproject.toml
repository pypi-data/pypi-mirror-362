[project]
name = "{{ general.slug }}"
version = "{{ general.version }}"
description = "{{ general.description }}"
authors = [{name = "{{ general.author }}", email = "{{ git.email }}"}]
dependencies = [
    {% if "async_sqlalchemy" in template.built_in_features %}
    "sqlalchemy",
    "asyncpg",
    "psycopg2-binary",
    {% endif %}
    {% if "async_alembic" in template.built_in_features %}
    "alembic",
    {% endif %}
    {% if "event_bus" in template.built_in_features %}
    "pika",
    {% endif %}
    {% if "fastapi_application" in template.built_in_features %}
    "fastapi[standard]",
    {% endif %}
]
requires-python = "=={{ general.python_version }}.*"
readme = "README.md"
license = { file = "LICENSE" }

{% if general.dependency_manager == "pdm" %}
[tool.pdm]
distribution = false
{% endif %}

{% if ["github_actions", "makefile"] | is_in(template.built_in_features) or dependencies | has_dependency("pytest") and template.name != template_types.CUSTOM %}
[dependency-groups]
{% if ["github_actions", "makefile"] | is_in(template.built_in_features) and dependencies | has_dependency("pytest") %}
lint = [
    "mypy",
    "ruff",
]
test = [
    "faker",
    "pytest",
    "pytest-asyncio",
]
{% elif ["github_actions", "makefile"] | is_in(template.built_in_features) %}
lint = [
    "mypy",
    "ruff",
]
test = [
    "faker",
    "pytest",
    "pytest-asyncio",
]
{% elif dependencies | has_dependency("pytest") %}
test = [
    "faker",
    "pytest-asyncio",
]
{% elif template.name != template_types.CUSTOM %}
test = [
    "faker",
]
{% endif %}
{% endif %}
