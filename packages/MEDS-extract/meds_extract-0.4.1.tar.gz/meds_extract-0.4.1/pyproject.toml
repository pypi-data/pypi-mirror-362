[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "MEDS_extract"
dynamic = ["version"]
authors = [
  { name="Matthew McDermott", email="mattmcdermott8@gmail.com" },
]
description = "MEDS ETL building support leveraging MEDS-Transforms."
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
  "polars>=1.26",
  "pyarrow",
  "hydra-core",
  "numpy",
  "meds~=0.4.0",
  "MEDS-transforms~=0.6.0",
  "universal_pathlib"
]

[tool.setuptools_scm]

[project.optional-dependencies]
dev = ["pre-commit<4", "ruff"]
tests = [
    "pytest",
    "pytest-cov",
    "pytest-notebook",
    "hydra-joblib-launcher",
    "meds_testing_helpers>=0.2.1",
]
example = ["jupyter"]
local_parallelism = ["hydra-joblib-launcher"]
slurm_parallelism = ["hydra-submitit-launcher"]
docs = [
  "mkdocs==1.6.1", "mkdocs-material==9.6.7", "mkdocstrings[python,shell]==0.28.2", "mkdocs-gen-files==0.5.0",
  "mkdocs-literate-nav==0.6.1", "mkdocs-section-index==0.3.9", "mkdocs-git-authors-plugin==0.9.2",
  "mkdocs-git-revision-date-localized-plugin==1.3.0"
]

[project.entry-points."MEDS_transforms.stages"]
split_and_shard_subjects = "MEDS_extract:split_and_shard_subjects"
shard_events = "MEDS_extract:shard_events"
convert_to_subject_sharded = "MEDS_extract:convert_to_subject_sharded"
convert_to_MEDS_events = "MEDS_extract:convert_to_MEDS_events"
merge_to_MEDS_cohort = "MEDS_extract:merge_to_MEDS_cohort"
extract_code_metadata = "MEDS_extract:extract_code_metadata"
finalize_MEDS_metadata = "MEDS_extract:finalize_MEDS_metadata"
finalize_MEDS_data = "MEDS_extract:finalize_MEDS_data"

[project.urls]
Homepage = "https://github.com/mmcdermott/MEDS_extract"
Issues = "https://github.com/mmcdermott/MEDS_extract/issues"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--doctest-modules",
  "--ignore=docs",
  "--doctest-glob=*.md",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS"]

[tool.ruff]
target-version = "py311"
line-length = 110
extend-exclude = ["docs/index.md"]

# Enable linters
[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "N",   # pep8-naming
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports in __init__ files
"test_*.py" = ["DTZ"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["*MEDS*"]  # Ignore MEDS in variable names
