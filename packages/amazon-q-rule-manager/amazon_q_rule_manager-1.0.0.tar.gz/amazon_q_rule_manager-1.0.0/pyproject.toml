[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "amazon-q-rule-manager"
version = "1.0.0"
authors = [
    {name = "Amazon Q Rules Team", email = "support@example.com"},
]
description = "A robust manager for Amazon Q Developer rules with global and workspace support"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Quality Assurance",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
keywords = ["amazon-q", "developer", "rules", "code-quality", "aws", "terraform", "python"]
dependencies = [
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "appdirs>=1.4.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
]

[project.urls]
Homepage = "https://github.com/zerodaysec/amazonq-rules"
Documentation = "https://github.com/zerodaysec/amazonq-rules/blob/main/README.md"
Repository = "https://github.com/zerodaysec/amazonq-rules"
"Bug Reports" = "https://github.com/zerodaysec/amazonq-rules/issues"

[project.scripts]
amazon-q-rule-manager = "amazon_q_rule_manager.cli:main"
aqrm = "amazon_q_rule_manager.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["amazon_q_rule_manager*"]

[tool.setuptools.package-data]
amazon_q_rule_manager = ["data/*.json", "templates/*.md"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["amazon_q_rule_manager"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
