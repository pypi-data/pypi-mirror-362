Metadata-Version: 2.1
Name: DD-Forge
Version: 0.1.0
Summary: A Flask application for Device Driver Generation and Automation with private PyPI
Author-email: Karthikeyan D <karthikeyan.dhanasekar@multicorewareinc.com>, Surendhar K <surendhar.kamalakannan@multicorewareinc.com>, Surieya N <surieya.natarajan@multicorewareinc.com>, Gladson K <gladson.kalanjiadurai@multicorewareinc.com>
Description-Content-Type: text/markdown
Requires-Dist: aiohttp==3.12.11
Requires-Dist: aiosignal==1.3.2
Requires-Dist: amqp==5.3.1
Requires-Dist: annotated-types==0.7.0
Requires-Dist: anyio==4.9.0
Requires-Dist: asgiref==3.8.1
Requires-Dist: attrs==25.3.0
Requires-Dist: backoff==2.2.1
Requires-Dist: bcrypt==4.3.0
Requires-Dist: billiard==4.2.1
Requires-Dist: blinker==1.9.0
Requires-Dist: build==1.2.2.post1
Requires-Dist: cachetools==5.5.2
Requires-Dist: celery==5.5.3
Requires-Dist: certifi==2025.4.26
Requires-Dist: charset-normalizer==3.4.2
Requires-Dist: chromadb==1.0.12
Requires-Dist: click==8.2.1
Requires-Dist: click-didyoumean==0.3.1
Requires-Dist: click-plugins==1.1.1
Requires-Dist: click-repl==0.3.0
Requires-Dist: coloredlogs==15.0.1
Requires-Dist: dataclasses-json==0.6.7
Requires-Dist: distro==1.9.0
Requires-Dist: docker==7.1.0
Requires-Dist: durationpy==0.10
Requires-Dist: fastapi==0.115.9
Requires-Dist: filelock==3.18.0
Requires-Dist: Flask==3.1.1
Requires-Dist: flatbuffers==25.2.10
Requires-Dist: frozenlist==1.6.2
Requires-Dist: fsspec==2025.5.1
Requires-Dist: google-auth==2.40.3
Requires-Dist: googleapis-common-protos==1.70.0
Requires-Dist: greenlet==3.2.3
Requires-Dist: grpcio==1.73.0
Requires-Dist: h11==0.16.0
Requires-Dist: hf-xet==1.1.3
Requires-Dist: httpcore==1.0.9
Requires-Dist: httptools==0.6.4
Requires-Dist: httpx==0.28.1
Requires-Dist: httpx-sse==0.4.0
Requires-Dist: huggingface-hub==0.32.4
Requires-Dist: humanfriendly==10.0
Requires-Dist: idna==3.10
Requires-Dist: importlib-metadata==8.7.0
Requires-Dist: importlib-resources==6.5.2
Requires-Dist: intel-extension-for-pytorch==2.7.0
Requires-Dist: itsdangerous==2.2.0
Requires-Dist: Jinja2==3.1.6
Requires-Dist: joblib==1.5.1
Requires-Dist: jsonpatch==1.33
Requires-Dist: jsonpointer==3.0.0
Requires-Dist: jsonschema==4.24.0
Requires-Dist: jsonschema-specifications==2025.4.1
Requires-Dist: marshmallow==3.26.1
Requires-Dist: mdurl==0.1.2
Requires-Dist: mmh3==5.1.0
Requires-Dist: mpmath==1.3.0
Requires-Dist: multidict==6.4.4
Requires-Dist: mypy-extensions==1.1.0
Requires-Dist: networkx==3.5
Requires-Dist: numpy==2.3.0
Requires-Dist: overrides==7.7.0
Requires-Dist: packaging==24.2
Requires-Dist: pillow==11.2.1
Requires-Dist: posthog==4.4.2
Requires-Dist: prompt-toolkit==3.0.51
Requires-Dist: propcache==0.3.1
Requires-Dist: protobuf==5.29.5
Requires-Dist: psutil==7.0.0
Requires-Dist: psycopg2-binary==2.9.10
Requires-Dist: pyasn1==0.6.1
Requires-Dist: pyasn1-modules==0.4.2
Requires-Dist: pydantic==2.11.5
Requires-Dist: pydantic-settings==2.9.1
Requires-Dist: pydantic-core==2.33.2
Requires-Dist: Pygments==2.19.1
Requires-Dist: PyPika==0.48.9
Requires-Dist: pyproject-hooks==1.2.0
Requires-Dist: python-dateutil==2.9.0.post0
Requires-Dist: python-dotenv==1.1.0
Requires-Dist: PyYAML==6.0.2
Requires-Dist: redis==6.2.0
Requires-Dist: referencing==0.36.2
Requires-Dist: regex==2024.11.6
Requires-Dist: requests==2.32.3
Requires-Dist: requests-oauthlib==2.0.0
Requires-Dist: requests-toolbelt==1.0.0
Requires-Dist: rich==14.0.0
Requires-Dist: rpds-py==0.25.1
Requires-Dist: rsa==4.9.1
Requires-Dist: safetensors==0.5.3
Requires-Dist: scikit-learn==1.7.0
Requires-Dist: scipy==1.15.3
Requires-Dist: sentence-transformers==4.1.0
Requires-Dist: setuptools==80.9.0
Requires-Dist: shellingham==1.5.4
Requires-Dist: six==1.17.0
Requires-Dist: sniffio==1.3.1
Requires-Dist: SQLAlchemy==2.0.41
Requires-Dist: starlette==0.45.3
Requires-Dist: sympy==1.14.0
Requires-Dist: tenacity==9.1.2
Requires-Dist: threadpoolctl==3.6.0
Requires-Dist: tokenizers==0.21.1
Requires-Dist: tzdata==2025.2
Requires-Dist: urllib3==2.4.0
Requires-Dist: uvicorn==0.34.3
Requires-Dist: uvloop==0.21.0
Requires-Dist: vine==5.1.0
Requires-Dist: watchfiles==1.0.5
Requires-Dist: wcwidth==0.2.13
Requires-Dist: websocket-client==1.8.0
Requires-Dist: websockets==15.0.1
Requires-Dist: Werkzeug==3.1.3
Requires-Dist: wrapt==1.17.2
Requires-Dist: yarl==1.20.0
Requires-Dist: zipp==3.23.0
Requires-Dist: zstandard==0.23.0



```markdown
# DD Forge AI — Driver Generation Flask App

DD Forge AI is a Flask-based web application for generating, integrating, and packaging device drivers for SoCs based on user-selected interface, device, and OS type. It supports AI-assisted driver generation, Docker-based SDK building, and Redis + Celery task queue for background processing.

---

## 🔧 Features

- 📄 Flask frontend to submit driver generation requests.
- 🧠 Remote AI-based driver generation via SSH.
- 🐳 Dockerfile auto-update and SDK build inside containers.
- 🛠️ Integration with GitHub-based driver repository.
- 📦 SDK output is compressed and made downloadable.
- 🪄 Celery + Redis used for background job queuing and cancellation.
- 📜 SQLAlchemy ORM with PostgreSQL for job tracking.

---

## 📁 Project Structure

```

DD\_Forge\_AI/
├── app.py                  # Flask entry point
├── ai\_model\_run.py         # Remote AI model execution and result fetch
├── celery\_worker.py        # Celery task worker (Docker build + integration)
├── driver\_select.py        # GitHub API + devices.json-based driver fetch
├── models.py               # SQLAlchemy DB models
├── templates/              # HTML templates (Flask)
├── static/                 # Static files like devices.json
├── Dockerfile.template     # Used to generate build-specific Dockerfiles
├── run\_container.sh        # SDK integration script
├── run\_container\_ai.sh     # SDK integration script (AI mode)
└── build\_logs/             # Log output for each job

````

---

## 🚀 Getting Started

### 1. Install Dependencies

```bash
pip install -r requirements.txt
````

### 2. Start Redis Server

```bash
redis-server
```

### 3. Initialize PostgreSQL

Ensure PostgreSQL is running and a database `dd_forge_db` is created with:

* **User**: `dd_user`
* **Password**: `dd_pass`

Or update the `engine = create_engine(...)` line in `models.py`.

### 4. Start Celery Worker

```bash
celery -A celery_worker.celery worker --loglevel=info
```

### 5. Run the Flask App

```bash
python app.py
```

Access the app at: [http://localhost:5000](http://localhost:5000)

---

## 📡 API Endpoints

| Endpoint              | Method | Description                      |
| --------------------- | ------ | -------------------------------- |
| `/`                   | GET    | Home form UI                     |
| `/form`               | POST   | Trigger SDK driver build         |
| `/generate_ai_driver` | POST   | Generate drivers remotely via AI |
| `/status/<job_id>`    | GET    | Get build status                 |
| `/download`           | GET    | Download generated SDK           |
| `/view-dockerfile`    | GET    | View auto-generated Dockerfile   |

---

## 🔐 Authentication & Security

* Make sure to secure the Flask app and Redis server for production deployment.

---

## ✅ TODOs & Improvements

* Add proper error pages in the frontend.
* Stream real-time logs to the frontend via WebSocket.
* Add job retry and expiry logic in Celery.
* Secure SSH and SCP in `ai_model_run.py` using SSH keys or vault.

---

## 📄 License

This project is intended for internal usage within embedded SDK toolchains. Licensing terms TBD.

---

## 🙏 Acknowledgements

* Flask (Python web framework)
* Celery + Redis (Asynchronous task queue)
* SQLAlchemy (ORM)
* Docker (Build + integration)
* GitHub API (Driver fetch automation)

```

---


