# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from digitalkin_proto.digitalkin.storage.v1 import s3_storage_pb2 as digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2

GRPC_GENERATED_VERSION = '1.71.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in digitalkin/storage/v1/s3_storage_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StorageServiceStub(object):
    """StorageService
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadFile = channel.unary_unary(
                '/digitalkin.storage.v1.StorageService/UploadFile',
                request_serializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.UploadFileResponse.FromString,
                _registered_method=True)
        self.ReadFile = channel.unary_stream(
                '/digitalkin.storage.v1.StorageService/ReadFile',
                request_serializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.ReadFileRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.ReadFileResponse.FromString,
                _registered_method=True)


class StorageServiceServicer(object):
    """StorageService
    """

    def UploadFile(self, request, context):
        """UploadFile

        ## Parameters

        - file: File to upload
        - organization_id: Organization id

        ## Returns

        - file_url: File url
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadFile(self, request, context):
        """ReadFile

        ## Parameters

        - file_url: File url
        - organization_id: Organization id

        ## Returns

        - content: File content
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.UploadFileRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.UploadFileResponse.SerializeToString,
            ),
            'ReadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.ReadFile,
                    request_deserializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.ReadFileRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.ReadFileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'digitalkin.storage.v1.StorageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('digitalkin.storage.v1.StorageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StorageService(object):
    """StorageService
    """

    @staticmethod
    def UploadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v1.StorageService/UploadFile',
            digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.UploadFileRequest.SerializeToString,
            digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.UploadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/digitalkin.storage.v1.StorageService/ReadFile',
            digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.ReadFileRequest.SerializeToString,
            digitalkin_dot_storage_dot_v1_dot_s3__storage__pb2.ReadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
