# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from digitalkin_proto.digitalkin.storage.v2 import data_pb2 as digitalkin_dot_storage_dot_v2_dot_data__pb2

GRPC_GENERATED_VERSION = '1.71.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in digitalkin/storage/v2/storage_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StorageServiceStub(object):
    """StorageService: Service to store data
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreRecord = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/StoreRecord',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreRecordRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreRecordResponse.FromString,
                _registered_method=True)
        self.ReadRecord = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/ReadRecord',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ReadRecordRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ReadRecordResponse.FromString,
                _registered_method=True)
        self.UpdateRecord = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/UpdateRecord',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.UpdateRecordRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.UpdateRecordResponse.FromString,
                _registered_method=True)
        self.RemoveRecord = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/RemoveRecord',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveRecordRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveRecordResponse.FromString,
                _registered_method=True)
        self.ListRecords = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/ListRecords',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ListRecordsRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ListRecordsResponse.FromString,
                _registered_method=True)
        self.RemoveCollection = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/RemoveCollection',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveCollectionRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveCollectionResponse.FromString,
                _registered_method=True)


class StorageServiceServicer(object):
    """StorageService: Service to store data
    """

    def StoreRecord(self, request, context):
        """StoreRecord: Store a new data 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadRecord(self, request, context):
        """ReadRecord: Get data by mission and name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRecord(self, request, context):
        """UpdateRecord: Update data record
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRecord(self, request, context):
        """RemoveRecord: Delete data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRecords(self, request, context):
        """ListRecords: List all records in a given collection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveCollection(self, request, context):
        """RemoveCollection: Delete all records in a given collection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreRecord,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreRecordRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreRecordResponse.SerializeToString,
            ),
            'ReadRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadRecord,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ReadRecordRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ReadRecordResponse.SerializeToString,
            ),
            'UpdateRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRecord,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.UpdateRecordRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.UpdateRecordResponse.SerializeToString,
            ),
            'RemoveRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRecord,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveRecordRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveRecordResponse.SerializeToString,
            ),
            'ListRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRecords,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ListRecordsRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.ListRecordsResponse.SerializeToString,
            ),
            'RemoveCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveCollection,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveCollectionRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveCollectionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'digitalkin.storage.v2.StorageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('digitalkin.storage.v2.StorageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StorageService(object):
    """StorageService: Service to store data
    """

    @staticmethod
    def StoreRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/StoreRecord',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreRecordRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/ReadRecord',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.ReadRecordRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.ReadRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/UpdateRecord',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.UpdateRecordRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.UpdateRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/RemoveRecord',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveRecordRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/ListRecords',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.ListRecordsRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.ListRecordsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/RemoveCollection',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveCollectionRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.RemoveCollectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
