[project]
name = "kili-formats"
version = "0.2.9"
description = ""
authors = [{ name = "Kili Technology", email = "contact@kili-technology.com" }]
license = { file = "LICENSE.txt" }
requires-python = ">=3.8"
readme = "README.md"
dependencies = [
  "typing-extensions >= 4.1.0, < 5.0.0"
]

[build-system]
requires = ["setuptools", "wheel"]

[project.optional-dependencies]
all = [
  # coco
  "numpy >= 2, < 3",
  "shapely >= 1.8, < 3",
  # image
  "Pillow >=9.0.0, <11.0.0",
  # video
  "ffmpeg-python >= 0.2.0, < 0.3.0"
]
dev = [
  # tests
  "pytest",
  "requests >= 2.0.0, < 3.0.0",
  # linting
  "pre-commit >= 3.3.0, < 4.0.0",
  "pylint ==3.0.3",
  "pyright ==1.1.347",
  # optional dependencies - coco
  "shapely >= 1.8, < 3",
  # optional dependencies - image
  "Pillow >=9.0.0, <11.0.0",
  # optional dependencies - video
  "ffmpeg-python >= 0.2.0, < 0.3.0"
]
coco = [
  "numpy >= 2, < 3",
  "shapely >= 1.8, < 3"
]
image = [
  "Pillow >=9.0.0, <11.0.0"
]
video = [
  "ffmpeg-python >= 0.2.0, < 0.3.0"
]

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
)/
'''

[tool.isort]
profile = "black"
py_version = 38

[tool.ruff]
line-length = 100
target-version = "py38"
ignore = ["E501"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.isort]
known-first-party = ["src", "tests"]

[tool.pytest]
ini_options = { pythonpath = ["src", "."] }
aliases = ["test = pytest"]

[tool.setuptools.packages.find]
where = ["src"]
include = ["kili_formats*"]
