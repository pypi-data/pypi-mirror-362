"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.server.v1.queries_pb2 import (
    GetQueryErrorsChartRequest,
    GetQueryErrorsChartResponse,
    GetQueryPerformanceSummaryRequest,
    GetQueryPerformanceSummaryResponse,
    GetQueryPlanRequest,
    GetQueryPlanResponse,
    ListQueryErrorsRequest,
    ListQueryErrorsResponse,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)

class QueriesServiceStub:
    def __init__(self, channel: Channel) -> None: ...
    GetQueryPerformanceSummary: UnaryUnaryMultiCallable[
        GetQueryPerformanceSummaryRequest,
        GetQueryPerformanceSummaryResponse,
    ]
    ListQueryErrors: UnaryUnaryMultiCallable[
        ListQueryErrorsRequest,
        ListQueryErrorsResponse,
    ]
    GetQueryErrorsChart: UnaryUnaryMultiCallable[
        GetQueryErrorsChartRequest,
        GetQueryErrorsChartResponse,
    ]
    GetQueryPlan: UnaryUnaryMultiCallable[
        GetQueryPlanRequest,
        GetQueryPlanResponse,
    ]

class QueriesServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def GetQueryPerformanceSummary(
        self,
        request: GetQueryPerformanceSummaryRequest,
        context: ServicerContext,
    ) -> GetQueryPerformanceSummaryResponse: ...
    @abstractmethod
    def ListQueryErrors(
        self,
        request: ListQueryErrorsRequest,
        context: ServicerContext,
    ) -> ListQueryErrorsResponse: ...
    @abstractmethod
    def GetQueryErrorsChart(
        self,
        request: GetQueryErrorsChartRequest,
        context: ServicerContext,
    ) -> GetQueryErrorsChartResponse: ...
    @abstractmethod
    def GetQueryPlan(
        self,
        request: GetQueryPlanRequest,
        context: ServicerContext,
    ) -> GetQueryPlanResponse: ...

def add_QueriesServiceServicer_to_server(servicer: QueriesServiceServicer, server: Server) -> None: ...
