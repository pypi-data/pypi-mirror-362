# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
from .supported_service_type import SupportedServiceType
import pydantic
from .wordlist_size import WordlistSize
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class PentestServiceBruteForceConfig(UniversalBaseModel):
    targets: typing.List[str]
    service: SupportedServiceType
    usernames: typing.Optional[typing.List[str]] = None
    username_lists: typing.Optional[typing.List[str]] = pydantic.Field(alias="usernameLists", default=None)
    passwords: typing.Optional[typing.List[str]] = None
    password_lists: typing.Optional[typing.List[str]] = pydantic.Field(alias="passwordLists", default=None)
    wordlist_size: typing.Optional[WordlistSize] = pydantic.Field(alias="wordlistSize", default=None)
    timeout: int
    sleep: int
    retries: int
    successful_only: bool = pydantic.Field(alias="successfulOnly")
    stop_first_success: bool = pydantic.Field(alias="stopFirstSuccess")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
