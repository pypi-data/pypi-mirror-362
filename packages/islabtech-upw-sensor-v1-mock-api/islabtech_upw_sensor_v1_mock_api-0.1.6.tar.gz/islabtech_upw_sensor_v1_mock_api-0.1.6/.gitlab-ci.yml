image: python:3-slim

build:
    stage: build
    script:
        - pip3 install build
        - python3 -m build
    artifacts:
        untracked: false
        when: on_success
        access: all
        expire_in: "30 days"
        paths:
            - "dist/"

test:
    stage: test
    script:
        - pip3 install dist/*.whl
        - pip3 install pytest
        - pytest -v .
    # TODO: capture test results in GitLab

test-version-consistency:
    stage: test
    image: debian:stable-slim
    needs: []
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - test "$CI_COMMIT_TAG"  = v"$(sed -n 's/^ *version *= *"\(.*\)" *$/\1/p' pyproject.toml)"

publish:
    image: python:3
    stage: deploy
    rules:
        - if: $CI_COMMIT_TAG
    id_tokens:
        PYPI_ID_TOKEN:
            # Use "testpypi" if uploading to TestPyPI
            aud: pypi
    script:
        - python --version; pip --version
        # Install dependencies
        - apt-get -qq update && apt-get -qq install -y jq
        - pip install twine id

        # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
        - oidc_token=$(python -m id PYPI)
        # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
        - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
        - api_token=$(jq --raw-output '.token' <<< "${resp}")

        # Upload to PyPI authenticating via the newly-minted token
        # Add "--repository testpypi" if uploading to TestPyPI
        - twine upload -u __token__ -p "${api_token}" dist/*

release:
    stage: deploy
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - echo "running release_job"
    release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
        tag_name: "$CI_COMMIT_TAG"
        description: "$CI_COMMIT_TAG"
