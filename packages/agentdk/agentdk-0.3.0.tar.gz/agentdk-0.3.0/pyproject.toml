[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agentdk"
version = "0.3.0"
authors = [
  { name="Zineng Yuan", email="zineng.yuan01@gmail.com" },
]
description = "Agent Development Kit for building intelligent agents with LangGraph and MCP integration, Support Agent Async in jupyter notebook/IPython"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["agents", "ai", "langgraph", "mcp", "llm", "automation", "multi-agent"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "langgraph-supervisor>=0.0.27",
    "langchain_core>=0.3.63",
    "langchain-mcp-adapters>=0.1.7",
    "langgraph>=0.4.8",
    "nest_asyncio>=1.6.0,<2.0.0",
    "mcp[cli]>=1.8.1",
    "pydantic>=2.11.5",
    "pyyaml>=6.0.2",
    "sqlparse>=0.4.4,<1.0.0",
    "python-dotenv>=1.0.0",
    "mem0ai>=0.1.111",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "toml>=0.10.2",
    "langchain-openai>=0.3.24",  # Required for integration tests
]
openai = [
    "langchain-openai>=0.3.24",
]
anthropic = [
    "langchain-anthropic>=0.1.0",
]
cli = [
    "langchain-openai>=0.3.24",
    "langchain-anthropic>=0.1.0",
]
all = [
    "agentdk[dev,openai,anthropic]",
]

[project.urls]
"Homepage" = "https://github.com/breadpowder/agentdk"
"Bug Tracker" = "https://github.com/breadpowder/agentdk/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/agentdk"]

[tool.hatch.build.targets.wheel.sources]
"examples" = "agentdk/examples"

[project.scripts]
agentdk = "agentdk.cli.main:main"

[tool.hatch.version]
path = "src/agentdk/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/examples",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agentdk"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/agentdk",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 

[dependency-groups]
dev = [
    "pytest-cov>=6.2.1",
]
