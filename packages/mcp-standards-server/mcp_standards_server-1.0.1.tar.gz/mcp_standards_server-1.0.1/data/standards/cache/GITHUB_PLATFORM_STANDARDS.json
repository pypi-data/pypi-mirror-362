{
  "id": "github_platform_standards",
  "name": "GitHub Platform Standards",
  "category": "tools",
  "tags": [
    "best-practices",
    "security",
    "automation"
  ],
  "description": "**Version:** 1.0.0",
  "sections": [
    "Table of Contents",
    "Overview",
    "1. Repository Standards",
    "üöÄ Quick Start",
    "üìã Prerequisites",
    "üõ†Ô∏è Installation",
    "üìñ Documentation",
    "üß™ Testing",
    "ü§ù Contributing",
    "üìù License"
  ],
  "version": "1.0.0",
  "content": "# GitHub Platform Standards\n\n**Version:** 1.0.0\n**Last Updated:** January 2025\n**Status:** Active\n**Standard Code:** GH\n\n---\n\n**Version:** 1.0.0\n**Last Updated:** January 2025\n**Status:** Active\n\n## Table of Contents\n\n1. [Repository Standards](#1-repository-standards)\n2. [GitHub Actions CI/CD](#2-github-actions-cicd)\n3. [GitHub Pages Hosting](#3-github-pages-hosting)\n4. [Security and Compliance](#4-security-and-compliance)\n5. [Project Management](#5-project-management)\n6. [GitHub Apps and Integrations](#6-github-apps-and-integrations)\n7. [Advanced GitHub Features](#7-advanced-github-features)\n\n---\n\n## Overview\n\nThis standard provides comprehensive guidelines and best practices for the subject area.\nIt aims to ensure consistency, quality, and maintainability across all related implementations.\n\n## 1. Repository Standards\n\n### 1.1 Repository Structure\n\n#### Base Repository Layout **[REQUIRED]**\n```\nproject-name/\n‚îú‚îÄ‚îÄ .github/                    # GitHub-specific files\n‚îÇ   ‚îú‚îÄ‚îÄ workflows/             # GitHub Actions workflows\n‚îÇ   ‚îú‚îÄ‚îÄ ISSUE_TEMPLATE/        # Issue templates\n‚îÇ   ‚îú‚îÄ‚îÄ PULL_REQUEST_TEMPLATE.md\n‚îÇ   ‚îú‚îÄ‚îÄ CODEOWNERS            # Code ownership\n‚îÇ   ‚îú‚îÄ‚îÄ dependabot.yml        # Dependency updates\n‚îÇ   ‚îî‚îÄ‚îÄ SECURITY.md           # Security policy\n‚îú‚îÄ‚îÄ docs/                      # Documentation\n‚îÇ   ‚îî‚îÄ‚îÄ index.md              # For GitHub Pages\n‚îú‚îÄ‚îÄ src/                       # Source code\n‚îú‚îÄ‚îÄ tests/                     # Test files\n‚îú‚îÄ‚îÄ scripts/                   # Build/utility scripts\n‚îú‚îÄ‚îÄ .gitignore\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ LICENSE\n‚îú‚îÄ‚îÄ CONTRIBUTING.md\n‚îî‚îÄ‚îÄ CODE_OF_CONDUCT.md\n```\n\n#### Repository Settings **[REQUIRED]**\n```yaml\n# .github/settings.yml (using GitHub Settings App)\nrepository:\n  name: project-name\n  description: Clear, concise description\n  topics:\n    - topic1\n    - topic2\n  private: false\n  has_issues: true\n  has_projects: true\n  has_wiki: false\n  has_downloads: true\n  default_branch: main\n  allow_squash_merge: true\n  allow_merge_commit: false\n  allow_rebase_merge: true\n  delete_branch_on_merge: true\n  enable_vulnerability_alerts: true\n  enable_automated_security_fixes: true\n\nbranches:\n  - name: main\n    protection:\n      required_status_checks:\n        strict: true\n        contexts:\n          - continuous-integration\n          - security-scan\n      enforce_admins: false\n      required_pull_request_reviews:\n        required_approving_review_count: 1\n        dismiss_stale_reviews: true\n        require_code_owner_reviews: true\n      restrictions: null\n```\n\n### 1.2 Branch Protection\n\n#### Protection Rules **[REQUIRED]**\n```yaml\n# Branch protection for main/master\nprotection_rules:\n  main:\n    # Require PR reviews\n    required_reviews:\n      count: 1\n      dismiss_stale: true\n      require_codeowner: true\n\n    # Required status checks\n    required_checks:\n      - \"build\"\n      - \"test\"\n      - \"security-scan\"\n      - \"lint\"\n\n    # Additional restrictions\n    enforce_admins: false\n    restrict_pushes: true\n    allow_force_pushes: false\n    allow_deletions: false\n\n    # Require up-to-date branches\n    strict_checks: true\n\n    # Require signed commits\n    required_signatures: true\n```\n\n### 1.3 Repository Templates\n\n#### README Template **[REQUIRED]**\n```markdown\n# Project Name\n\n![Build Status](https://github.com/org/repo/workflows/CI/badge.svg)\n![Coverage](https://img.shields.io/codecov/c/github/org/repo)\n![License](https://img.shields.io/github/license/org/repo)\n\nBrief description of the project.\n\n## üöÄ Quick Start\n\n```bash\n# Installation\nnpm install\n\n# Development\nnpm run dev\n\n# Testing\nnpm test\n\n# Build\nnpm run build\n```\n\n## üìã Prerequisites\n\n- Node.js >= 18\n- npm >= 9\n\n## üõ†Ô∏è Installation\n\nDetailed installation instructions.\n\n## üìñ Documentation\n\n- [Contributing Guide](./docs/core/CONTRIBUTING.md)\n- [Code of Conduct](./docs/core/CODE_OF_CONDUCT.md)\n\n## üß™ Testing\n\n```bash\n# Run all tests\nnpm test\n\n# Run with coverage\nnpm run test:coverage\n\n# Run specific test\nnpm test -- --grep \"test name\"\n```\n\n## ü§ù Contributing\n\nPlease read [CONTRIBUTING.md](./docs/core/CONTRIBUTING.md) for details.\n\n## üìù License\n\nThis project is licensed under the MIT License - see [LICENSE](./LICENSE).\n```\n\n#### CONTRIBUTING Template **[REQUIRED]**\n```markdown\n# Contributing to Project Name\n\n## Code of Conduct\n\nPlease read our [Code of Conduct](./docs/core/CODE_OF_CONDUCT.md).\n\n## How to Contribute\n\n### Reporting Issues\n\n1. Check existing issues\n2. Create detailed bug report\n3. Include reproduction steps\n4. Add system information\n\n### Pull Requests\n\n1. Fork the repository\n2. Create feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit changes (`git commit -m 'Add amazing feature'`)\n4. Push branch (`git push origin feature/amazing-feature`)\n5. Open Pull Request\n\n### Development Setup\n\n```bash\n# Clone your fork\ngit clone https://github.com/your-username/repo-name\n\n# Install dependencies\nnpm install\n\n# Run tests\nnpm test\n\n# Start development\nnpm run dev\n```\n\n### Coding Standards\n\n- Follow existing code style\n- Add tests for new features\n- Update documentation\n- Ensure CI passes\n\n### Commit Messages\n\nFollow [Conventional Commits](https://www.conventionalcommits.org/):\n- `feat:` New feature\n- `fix:` Bug fix\n- `docs:` Documentation\n- `style:` Formatting\n- `refactor:` Code restructuring\n- `test:` Tests\n- `chore:` Maintenance\n```\n\n---\n\n## 2. GitHub Actions CI/CD\n\n### 2.1 Workflow Structure\n\n#### Basic CI Workflow **[REQUIRED]**\n```yaml\n# .github/workflows/ci.yml\nname: CI\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n  schedule:\n    - cron: '0 0 * * 0'  # Weekly security scan\n\nenv:\n  NODE_VERSION: '18'\n\njobs:\n  lint:\n    name: Lint\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run linter\n        run: npm run lint\n\n      - name: Check formatting\n        run: npm run format:check\n\n  test:\n    name: Test\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        node-version: [16, 18, 20]\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Setup Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ matrix.node-version }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run tests\n        run: npm test\n\n      - name: Upload coverage\n        if: matrix.node-version == '18'\n        uses: codecov/codecov-action@v3\n        with:\n          token: ${{ secrets.CODECOV_TOKEN }}\n          file: ./coverage/lcov.info\n\n  security:\n    name: Security Scan\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Run security audit\n        run: npm audit --audit-level=high\n\n      - name: Run Snyk scan\n        uses: snyk/actions/node@master\n        env:\n          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}\n\n      - name: Upload SARIF results\n        uses: github/codeql-action/upload-sarif@v2\n        with:\n          sarif_file: snyk.sarif\n\n  build:\n    name: Build\n    needs: [lint, test]\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Build project\n        run: npm run build\n\n      - name: Upload artifacts\n        uses: actions/upload-artifact@v3\n        with:\n          name: build-artifacts\n          path: dist/\n          retention-days: 7\n```\n\n### 2.2 Advanced Workflows\n\n#### Release Workflow **[REQUIRED]**\n```yaml\n# .github/workflows/release.yml\nname: Release\n\non:\n  push:\n    tags:\n      - 'v*'\n\npermissions:\n  contents: write\n  packages: write\n\njobs:\n  release:\n    name: Create Release\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: 18\n          registry-url: 'https://registry.npmjs.org'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Build\n        run: npm run build\n\n      - name: Generate changelog\n        id: changelog\n        uses: conventional-changelog-action@v3\n        with:\n          preset: 'angular'\n\n      - name: Create Release\n        uses: ncipollo/release-action@v1\n        with:\n          artifacts: \"dist/*\"\n          body: ${{ steps.changelog.outputs.clean_changelog }}\n          draft: false\n          prerelease: false\n\n      - name: Publish to npm\n        run: npm publish\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n\n      - name: Build Docker image\n        run: |\n          docker build -t ghcr.io/${{ github.repository }}:${{ github.ref_name }} .\n          docker push ghcr.io/${{ github.repository }}:${{ github.ref_name }}\n```\n\n#### Deployment Workflow **[REQUIRED]**\n```yaml\n# .github/workflows/deploy.yml\nname: Deploy\n\non:\n  workflow_dispatch:\n    inputs:\n      environment:\n        description: 'Environment to deploy to'\n        required: true\n        type: choice\n        options:\n          - development\n          - staging\n          - production\n\njobs:\n  deploy:\n    name: Deploy to ${{ github.event.inputs.environment }}\n    runs-on: ubuntu-latest\n    environment: ${{ github.event.inputs.environment }}\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v4\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: us-east-1\n\n      - name: Deploy to environment\n        run: |\n          ./scripts/deploy.sh ${{ github.event.inputs.environment }}\n\n      - name: Notify deployment\n        uses: 8398a7/action-slack@v3\n        with:\n          status: ${{ job.status }}\n          text: 'Deployment to ${{ github.event.inputs.environment }} ${{ job.status }}'\n        env:\n          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}\n        if: always()\n```\n\n### 2.3 Reusable Workflows\n\n#### Shared Workflow **[REQUIRED]**\n```yaml\n# .github/workflows/reusable-test.yml\nname: Reusable Test Workflow\n\non:\n  workflow_call:\n    inputs:\n      node-version:\n        required: false\n        type: string\n        default: '18'\n    secrets:\n      codecov-token:\n        required: true\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: ${{ inputs.node-version }}\n          cache: 'npm'\n\n      - name: Install and test\n        run: |\n          npm ci\n          npm test\n\n      - name: Upload coverage\n        uses: codecov/codecov-action@v3\n        with:\n          token: ${{ secrets.codecov-token }}\n```\n\n#### Using Reusable Workflow\n```yaml\n# .github/workflows/ci.yml\nname: CI\n\non: [push, pull_request]\n\njobs:\n  test:\n    uses: ./.github/workflows/reusable-test.yml\n    with:\n      node-version: '18'\n    secrets:\n      codecov-token: ${{ secrets.CODECOV_TOKEN }}\n```\n\n### 2.4 GitHub Actions Best Practices\n\n#### Action Security **[REQUIRED]**\n```yaml\n# Pin actions to commit SHA for security\nsteps:\n  - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n\n  # Use environment for secrets\n  - name: Deploy\n    environment: production\n    env:\n      API_KEY: ${{ secrets.API_KEY }}\n    run: |\n      # Never echo secrets\n      ./deploy.sh\n```\n\n#### Caching Strategy **[RECOMMENDED]**\n```yaml\n# Cache dependencies\n- name: Cache node modules\n  uses: actions/cache@v3\n  with:\n    path: ~/.npm\n    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n    restore-keys: |\n      ${{ runner.os }}-node-\n\n# Cache build artifacts\n- name: Cache build\n  uses: actions/cache@v3\n  with:\n    path: |\n      .next/cache\n      dist\n    key: ${{ runner.os }}-build-${{ github.sha }}\n    restore-keys: |\n      ${{ runner.os }}-build-\n```\n\n#### Matrix Builds **[RECOMMENDED]**\n```yaml\nstrategy:\n  matrix:\n    os: [ubuntu-latest, macos-latest, windows-latest]\n    node: [16, 18, 20]\n    exclude:\n      - os: windows-latest\n        node: 16\n  fail-fast: false\n  max-parallel: 3\n```\n\n---\n\n## 3. GitHub Pages Hosting\n\n### 3.1 Static Site Configuration\n\n#### Jekyll Configuration **[REQUIRED]**\n```yaml\n# _config.yml\ntitle: Project Documentation\ndescription: Comprehensive project documentation\ntheme: just-the-docs\nbaseurl: \"/project-name\"\nurl: \"https://username.github.io\"\n\n# Navigation\nnav_enabled: true\nnav_sort: case_insensitive\n\n# Search\nsearch_enabled: true\nsearch_tokenizer_separator: /[\\s/]+/\n\n# Footer\nfooter_content: \"Copyright &copy; 2025\"\n\n# Collections\ncollections:\n  docs:\n    permalink: \"/:collection/:path/\"\n    output: true\n\n# Defaults\ndefaults:\n  - scope:\n      path: \"\"\n      type: \"docs\"\n    values:\n      layout: \"default\"\n      nav_order: 1\n```\n\n#### GitHub Pages Workflow **[REQUIRED]**\n```yaml\n# .github/workflows/deploy-pages.yml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches: [ main ]\n    paths:\n      - 'docs/**'\n      - '_config.yml'\n\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: false\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Setup Ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: '3.1'\n          bundler-cache: true\n\n      - name: Build Jekyll site\n        run: bundle exec jekyll build\n        env:\n          JEKYLL_ENV: production\n\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v2\n        with:\n          path: ./_site\n\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    needs: build\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v3\n```\n\n### 3.2 Custom Domain Setup\n\n#### DNS Configuration **[REQUIRED]**\n```\n# CNAME file in repository root\ndocs.example.com\n```\n\n```\n# DNS Records\nType    Name    Value                   TTL\nA       @       185.199.108.153        300\nA       @       185.199.109.153        300\nA       @       185.199.110.153        300\nA       @       185.199.111.153        300\nCNAME   www     username.github.io     300\n```\n\n### 3.3 Documentation Site Structure\n\n#### Documentation Layout **[REQUIRED]**\n```\ndocs/\n‚îú‚îÄ‚îÄ _config.yml\n‚îú‚îÄ‚îÄ index.md\n‚îú‚îÄ‚îÄ getting-started/\n‚îÇ   ‚îú‚îÄ‚îÄ installation.md\n‚îÇ   ‚îú‚îÄ‚îÄ configuration.md\n‚îÇ   ‚îî‚îÄ‚îÄ quick-start.md\n‚îú‚îÄ‚îÄ guides/\n‚îÇ   ‚îú‚îÄ‚îÄ development.md\n‚îÇ   ‚îú‚îÄ‚îÄ deployment.md\n‚îÇ   ‚îî‚îÄ‚îÄ troubleshooting.md\n‚îú‚îÄ‚îÄ api/\n‚îÇ   ‚îú‚îÄ‚îÄ reference.md\n‚îÇ   ‚îî‚îÄ‚îÄ examples.md\n‚îî‚îÄ‚îÄ assets/\n    ‚îú‚îÄ‚îÄ css/\n    ‚îú‚îÄ‚îÄ js/\n    ‚îî‚îÄ‚îÄ images/\n```\n\n#### Front Matter Template **[REQUIRED]**\n```markdown\n---\nlayout: default\ntitle: Page Title\nnav_order: 1\nparent: Parent Page\nhas_children: true\nhas_toc: true\n---\n\n# Page Title\n\n{: .no_toc }\n\n## Table of contents\n{: .no_toc .text-delta }\n\n1. TOC\n{:toc}\n\n---\n\n## Section 1\n\nContent here...\n```\n\n---\n\n## 4. Security and Compliance\n\n### 4.1 Security Configuration\n\n#### Dependabot Configuration **[REQUIRED]**\n```yaml\n# .github/dependabot.yml\nversion: 2\nupdates:\n  # npm dependencies\n  - package-ecosystem: \"npm\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n      day: \"monday\"\n      time: \"04:00\"\n    open-pull-requests-limit: 10\n    reviewers:\n      - \"username\"\n    labels:\n      - \"dependencies\"\n      - \"npm\"\n    commit-message:\n      prefix: \"chore\"\n      include: \"scope\"\n    ignore:\n      - dependency-name: \"aws-sdk\"\n        versions: [\"2.x\"]\n\n  # GitHub Actions\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    labels:\n      - \"dependencies\"\n      - \"github-actions\"\n\n  # Docker\n  - package-ecosystem: \"docker\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    labels:\n      - \"dependencies\"\n      - \"docker\"\n```\n\n#### Security Policy **[REQUIRED]**\n```markdown\n# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.x.x   | :white_check_mark: |\n| 1.x.x   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease report security vulnerabilities to security@example.com.\n\n- We will acknowledge receipt within 24 hours\n- We will provide updates every 72 hours\n- We aim to patch critical issues within 7 days\n\nDo not disclose security issues publicly until patched.\n\n## Security Measures\n\n- All dependencies are automatically scanned\n- Security patches are applied promptly\n- Code is reviewed for security issues\n- Penetration testing performed quarterly\n```\n\n#### Code Scanning **[REQUIRED]**\n```yaml\n# .github/workflows/codeql.yml\nname: \"CodeQL\"\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n  schedule:\n    - cron: '0 1 * * 0'\n\njobs:\n  analyze:\n    name: Analyze\n    runs-on: ubuntu-latest\n    permissions:\n      actions: read\n      contents: read\n      security-events: write\n\n    strategy:\n      fail-fast: false\n      matrix:\n        language: [ 'javascript', 'python' ]\n\n    steps:\n    - name: Checkout repository\n      uses: actions/checkout@v4\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n      with:\n        languages: ${{ matrix.language }}\n        queries: security-and-quality\n\n    - name: Autobuild\n      uses: github/codeql-action/autobuild@v2\n\n    - name: Perform CodeQL Analysis\n      uses: github/codeql-action/analyze@v2\n      with:\n        category: \"/language:${{matrix.language}}\"\n```\n\n### 4.2 Compliance Automation\n\n#### License Scanning **[REQUIRED]**\n```yaml\n# .github/workflows/license-scan.yml\nname: License Scan\n\non: [push, pull_request]\n\njobs:\n  license-check:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: License Finder\n        uses: pivotal/licensefinder-action@v1\n        with:\n          permitted_licenses: |\n            MIT\n            Apache-2.0\n            BSD-3-Clause\n            ISC\n\n      - name: FOSSA Scan\n        uses: fossas/fossa-action@main\n        with:\n          api-key: ${{ secrets.FOSSA_API_KEY }}\n```\n\n#### SBOM Generation **[REQUIRED]**\n```yaml\n# Generate Software Bill of Materials\n- name: Generate SBOM\n  uses: anchore/sbom-action@v0\n  with:\n    artifact-name: sbom.spdx.json\n    format: spdx-json\n\n- name: Publish SBOM\n  uses: anchore/sbom-action/publish-sbom@v0\n  with:\n    sbom-artifact-match: \".*\\\\.spdx\\\\.json$\"\n```\n\n---\n\n## 5. Project Management\n\n### 5.1 Issue Templates\n\n#### Bug Report Template **[REQUIRED]**\n```yaml\n# .github/ISSUE_TEMPLATE/bug_report.yml\nname: Bug Report\ndescription: File a bug report\ntitle: \"[Bug]: \"\nlabels: [\"bug\", \"triage\"]\nassignees:\n  - octocat\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for taking the time to fill out this bug report!\n\n  - type: textarea\n    id: what-happened\n    attributes:\n      label: What happened?\n      description: A clear and concise description of the bug\n      placeholder: Tell us what you see!\n    validations:\n      required: true\n\n  - type: textarea\n    id: reproduction\n    attributes:\n      label: Steps to reproduce\n      description: Steps to reproduce the behavior\n      value: |\n        1. Go to '...'\n        2. Click on '....'\n        3. Scroll down to '....'\n        4. See error\n    validations:\n      required: true\n\n  - type: dropdown\n    id: version\n    attributes:\n      label: Version\n      description: What version are you running?\n      options:\n        - 1.0.2 (Default)\n        - 1.0.3 (Edge)\n    validations:\n      required: true\n\n  - type: dropdown\n    id: browsers\n    attributes:\n      label: What browsers are you seeing the problem on?\n      multiple: true\n      options:\n        - Firefox\n        - Chrome\n        - Safari\n        - Microsoft Edge\n\n  - type: textarea\n    id: logs\n    attributes:\n      label: Relevant log output\n      description: Please copy and paste any relevant log output\n      render: shell\n\n  - type: checkboxes\n    id: terms\n    attributes:\n      label: Code of Conduct\n      description: By submitting this issue, you agree to follow our Code of Conduct\n      options:\n        - label: I agree to follow this project's Code of Conduct\n          required: true\n```\n\n#### Feature Request Template **[REQUIRED]**\n```yaml\n# .github/ISSUE_TEMPLATE/feature_request.yml\nname: Feature Request\ndescription: Suggest a new feature\ntitle: \"[Feature]: \"\nlabels: [\"enhancement\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for suggesting a new feature!\n\n  - type: textarea\n    id: problem\n    attributes:\n      label: Problem Statement\n      description: What problem does this feature solve?\n    validations:\n      required: true\n\n  - type: textarea\n    id: solution\n    attributes:\n      label: Proposed Solution\n      description: Describe your proposed solution\n    validations:\n      required: true\n\n  - type: textarea\n    id: alternatives\n    attributes:\n      label: Alternatives Considered\n      description: What alternatives have you considered?\n\n  - type: dropdown\n    id: priority\n    attributes:\n      label: Priority\n      options:\n        - Low\n        - Medium\n        - High\n        - Critical\n```\n\n### 5.2 Project Automation\n\n#### Project Board Automation **[REQUIRED]**\n```yaml\n# .github/workflows/project-automation.yml\nname: Project Automation\n\non:\n  issues:\n    types: [opened, labeled]\n  pull_request:\n    types: [opened, ready_for_review, review_requested]\n\njobs:\n  add-to-project:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/add-to-project@v0.5.0\n        with:\n          project-url: https://github.com/orgs/myorg/projects/1\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          labeled: bug, enhancement\n          label-operator: OR\n```\n\n#### Auto-labeling **[REQUIRED]**\n```yaml\n# .github/labeler.yml\ndocumentation:\n  - docs/**\n  - '*.md'\n\nfrontend:\n  - src/frontend/**\n  - src/components/**\n  - '*.css'\n  - '*.scss'\n\nbackend:\n  - src/backend/**\n  - src/api/**\n  - src/services/**\n\ntests:\n  - tests/**\n  - '**/*.test.js'\n  - '**/*.spec.js'\n\ndependencies:\n  - package.json\n  - package-lock.json\n  - yarn.lock\n  - requirements.txt\n  - go.mod\n  - go.sum\n```\n\n### 5.3 Release Management\n\n#### Release Drafter **[REQUIRED]**\n```yaml\n# .github/release-drafter.yml\nname-template: 'v$RESOLVED_VERSION'\ntag-template: 'v$RESOLVED_VERSION'\ncategories:\n  - title: 'üöÄ Features'\n    labels:\n      - 'feature'\n      - 'enhancement'\n  - title: 'üêõ Bug Fixes'\n    labels:\n      - 'fix'\n      - 'bugfix'\n      - 'bug'\n  - title: 'üß∞ Maintenance'\n    labels:\n      - 'chore'\n      - 'dependencies'\nchange-template: '- $TITLE @$AUTHOR (#$NUMBER)'\nchange-title-escapes: '\\<*_&'\nversion-resolver:\n  major:\n    labels:\n      - 'major'\n      - 'breaking-change'\n  minor:\n    labels:\n      - 'minor'\n      - 'feature'\n  patch:\n    labels:\n      - 'patch'\n      - 'bug'\n  default: patch\ntemplate: |\n  ## Changes\n\n  $CHANGES\n\n  **Full Changelog**: https://github.com/$OWNER/$REPOSITORY/compare/$PREVIOUS_TAG...v$RESOLVED_VERSION\n```\n\n#### Changelog Generation **[REQUIRED]**\n```yaml\n# .github/workflows/changelog.yml\nname: Changelog\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  changelog:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n\n      - name: Generate changelog\n        uses: orhun/git-cliff-action@v2\n        with:\n          config: .github/cliff.toml\n          args: --verbose\n        env:\n          OUTPUT: CHANGELOG.md\n\n      - name: Commit changelog\n        run: |\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n          git add CHANGELOG.md\n          git commit -m \"chore: update changelog\" || exit 0\n          git push\n```\n\n---\n\n## 6. GitHub Apps and Integrations\n\n### 6.1 Essential GitHub Apps\n\n#### Recommended Apps **[RECOMMENDED]**\n```yaml\n# Essential GitHub Apps to install:\napps:\n  - name: \"Dependabot\"\n    purpose: \"Automated dependency updates\"\n\n  - name: \"Codecov\"\n    purpose: \"Code coverage tracking\"\n    config: |\n      codecov:\n        require_ci_to_pass: yes\n        coverage:\n          status:\n            project:\n              default:\n                target: 80%\n                threshold: 2%\n\n  - name: \"Renovate\"\n    purpose: \"Advanced dependency management\"\n    config: |\n      {\n        \"extends\": [\"config:base\"],\n        \"prConcurrentLimit\": 3,\n        \"prHourlyLimit\": 2\n      }\n\n  - name: \"Stale\"\n    purpose: \"Manage stale issues/PRs\"\n    config: |\n      daysUntilStale: 60\n      daysUntilClose: 7\n      staleLabel: wontfix\n\n  - name: \"AllContributors\"\n    purpose: \"Recognize contributors\"\n\n  - name: \"Settings\"\n    purpose: \"Repository settings as code\"\n```\n\n### 6.2 Webhook Configuration\n\n#### Webhook Setup **[RECOMMENDED]**\n```javascript\n// Example webhook handler\nconst crypto = require('crypto');\nconst express = require('express');\nconst app = express();\n\n// Middleware to verify GitHub webhook signature\nfunction verifyGitHubWebhook(req, res, next) {\n  const signature = req.headers['x-hub-signature-256'];\n  const body = JSON.stringify(req.body);\n\n  if (!signature) {\n    return res.status(401).send('Unauthorized');\n  }\n\n  const hmac = crypto.createHmac('sha256', process.env.WEBHOOK_SECRET);\n  const digest = 'sha256=' + hmac.update(body).digest('hex');\n\n  if (signature !== digest) {\n    return res.status(401).send('Unauthorized');\n  }\n\n  next();\n}\n\n// Webhook handler\napp.post('/webhook', express.json(), verifyGitHubWebhook, (req, res) => {\n  const event = req.headers['x-github-event'];\n  const payload = req.body;\n\n  switch (event) {\n    case 'push':\n      handlePush(payload);\n      break;\n    case 'pull_request':\n      handlePullRequest(payload);\n      break;\n    case 'issues':\n      handleIssue(payload);\n      break;\n    default:\n      console.log(`Unhandled event: ${event}`);\n  }\n\n  res.status(200).send('OK');\n});\n```\n\n---\n\n## 7. Advanced GitHub Features\n\n### 7.1 GitHub CLI Automation\n\n#### CLI Scripts **[RECOMMENDED]**\n```bash\n#!/bin/bash\n# scripts/github-automation.sh\n\n# Create issue from template\ncreate_issue() {\n  gh issue create \\\n    --title \"$1\" \\\n    --body-file .github/ISSUE_TEMPLATE/bug_report.md \\\n    --label \"bug,needs-triage\" \\\n    --assignee \"@me\"\n}\n\n# Bulk update PRs\nupdate_prs() {\n  gh pr list --label \"needs-rebase\" --json number --jq '.[].number' | \\\n  while read -r pr; do\n    gh pr checkout \"$pr\"\n    git rebase origin/main\n    git push --force-with-lease\n    gh pr review \"$pr\" --comment --body \"Rebased on main\"\n  done\n}\n\n# Archive old issues\narchive_issues() {\n  gh issue list \\\n    --state closed \\\n    --search \"updated:<$(date -d '90 days ago' +%Y-%m-%d)\" \\\n    --json number,title --limit 100 | \\\n  jq -r '.[] | \"\\(.number)\\t\\(.title)\"' > archived_issues.txt\n}\n\n# Generate release notes\ngenerate_release() {\n  local version=$1\n  local previous=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')\n\n  gh api repos/:owner/:repo/releases/generate-notes \\\n    --method POST \\\n    --field tag_name=\"v$version\" \\\n    --field target_commitish=main \\\n    --field previous_tag_name=\"$previous\" \\\n    --jq '.body' > release_notes.md\n}\n```\n\n### 7.2 GitHub API Usage\n\n#### API Automation **[RECOMMENDED]**\n```javascript\n// GitHub API client setup\nconst { Octokit } = require(\"@octokit/rest\");\nconst { retry } = require(\"@octokit/plugin-retry\");\nconst { throttling } = require(\"@octokit/plugin-throttling\");\n\nconst MyOctokit = Octokit.plugin(retry, throttling);\n\nconst octokit = new MyOctokit({\n  auth: process.env.GITHUB_TOKEN,\n  throttle: {\n    onRateLimit: (retryAfter, options) => {\n      console.warn(`Rate limit exceeded, retrying after ${retryAfter} seconds`);\n      return true;\n    },\n    onSecondaryRateLimit: (retryAfter, options) => {\n      console.warn(`Secondary rate limit hit, retrying after ${retryAfter} seconds`);\n      return true;\n    },\n  },\n});\n\n// Example: Auto-merge dependabot PRs\nasync function autoMergeDependabot() {\n  const { data: pulls } = await octokit.pulls.list({\n    owner: 'myorg',\n    repo: 'myrepo',\n    state: 'open',\n  });\n\n  for (const pull of pulls) {\n    if (pull.user.login === 'dependabot[bot]' && pull.mergeable_state === 'clean') {\n      await octokit.pulls.merge({\n        owner: 'myorg',\n        repo: 'myrepo',\n        pull_number: pull.number,\n        merge_method: 'squash',\n      });\n      console.log(`Merged PR #${pull.number}`);\n    }\n  }\n}\n\n// Example: Bulk issue operations\nasync function bulkUpdateIssues(labels, milestone) {\n  const iterator = octokit.paginate.iterator(octokit.issues.listForRepo, {\n    owner: 'myorg',\n    repo: 'myrepo',\n    state: 'open',\n    per_page: 100,\n  });\n\n  for await (const { data: issues } of iterator) {\n    for (const issue of issues) {\n      await octokit.issues.update({\n        owner: 'myorg',\n        repo: 'myrepo',\n        issue_number: issue.number,\n        labels: [...issue.labels.map(l => l.name), ...labels],\n        milestone: milestone,\n      });\n    }\n  }\n}\n```\n\n### 7.3 Code Spaces Configuration\n\n#### DevContainer Setup **[RECOMMENDED]**\n```json\n// .devcontainer/devcontainer.json\n{\n  \"name\": \"Project Dev Container\",\n  \"image\": \"mcr.microsoft.com/devcontainers/javascript-node:18\",\n  \"features\": {\n    \"ghcr.io/devcontainers/features/github-cli:1\": {},\n    \"ghcr.io/devcontainers/features/docker-in-docker:2\": {},\n    \"ghcr.io/devcontainers/features/kubectl-helm-minikube:1\": {}\n  },\n  \"customizations\": {\n    \"vscode\": {\n      \"extensions\": [\n        \"dbaeumer.vscode-eslint\",\n        \"esbenp.prettier-vscode\",\n        \"GitHub.copilot\",\n        \"GitHub.vscode-pull-request-github\"\n      ],\n      \"settings\": {\n        \"editor.formatOnSave\": true,\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n      }\n    }\n  },\n  \"postCreateCommand\": \"npm install\",\n  \"forwardPorts\": [3000, 5432],\n  \"portsAttributes\": {\n    \"3000\": {\n      \"label\": \"Application\",\n      \"onAutoForward\": \"notify\"\n    }\n  },\n  \"remoteUser\": \"node\"\n}\n```\n\n---\n\n## Implementation Checklist\n\n### Repository Setup\n- [ ] Repository structure follows standards\n- [ ] Branch protection configured\n- [ ] CODEOWNERS file created\n- [ ] Issue/PR templates added\n- [ ] Security policy defined\n\n### CI/CD Pipeline\n- [ ] Basic CI workflow implemented\n- [ ] Security scanning enabled\n- [ ] Deployment automation configured\n- [ ] Release process automated\n- [ ] Artifact management setup\n\n### GitHub Pages\n- [ ] Documentation site configured\n- [ ] Custom domain setup (if needed)\n- [ ] Automatic deployment enabled\n- [ ] Search functionality added\n- [ ] Analytics configured\n\n### Security & Compliance\n- [ ] Dependabot enabled\n- [ ] CodeQL scanning active\n- [ ] Secret scanning enabled\n- [ ] License compliance checked\n- [ ] SBOM generation automated\n\n### Project Management\n- [ ] Project boards configured\n- [ ] Automation rules created\n- [ ] Labels standardized\n- [ ] Milestones defined\n- [ ] Team permissions set\n\n### Advanced Features\n- [ ] GitHub Apps installed\n- [ ] Webhooks configured (if needed)\n- [ ] API integrations built\n- [ ] CLI scripts created\n- [ ] DevContainer configured\n\n---\n\n**End of GitHub Platform Standards**\n"
}