{
  "id": "python-testing",
  "name": "Python Testing Standards",
  "version": "2.1.0",
  "category": "testing",
  "tags": [
    "python",
    "testing",
    "pytest",
    "quality",
    "backend"
  ],
  "content": {
    "summary": "Comprehensive Python testing standards using pytest framework.",
    "sections": [
      {
        "title": "Test Structure",
        "content": "Organize tests in a tests/ directory mirroring source structure.",
        "rules": [
          "Use descriptive test names starting with test_",
          "Group related tests in classes",
          "Keep tests independent and isolated"
        ]
      },
      {
        "title": "Pytest Best Practices",
        "content": "Leverage pytest features for better tests.",
        "examples": [
          {
            "description": "Parametrized testing",
            "code": "@pytest.mark.parametrize('input,expected', [\n    (1, 2),\n    (2, 4),\n])\ndef test_double(input, expected):\n    assert double(input) == expected"
          }
        ]
      },
      {
        "title": "Coverage Requirements",
        "content": "Maintain minimum 80% code coverage.",
        "rules": [
          "Write tests for all public APIs",
          "Test edge cases and error conditions",
          "Use mocks for external dependencies"
        ]
      }
    ]
  },
  "metadata": {
    "author": "QA Team",
    "last_updated": "2024-01-15",
    "applies_to": [
      "python@>=3.8"
    ],
    "tools": [
      "pytest",
      "coverage",
      "pytest-cov"
    ]
  }
}