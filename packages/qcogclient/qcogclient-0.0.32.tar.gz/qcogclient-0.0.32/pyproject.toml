
[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["qcogclient*", "cli*"]

[tool.setuptools_scm]
version_file = "src/qcogclient/_version.py"

[project]
name = "qcogclient"

dynamic = ["version"]

authors = [
  { name = "Qognitive" },
]

readme = "README.md"
requires-python = ">=3.12"

classifiers = [
    "Programming Language :: Python :: 3",
]

dependencies = [
    "aiohttp>=3.11.18",
    "colorama>=0.4.6",
    "mypy>=1.15.0",
    "pydantic-settings>=2.9.1",
    "returns>=0.25.0",
    "rich>=14.0.0",
    "sentry-sdk>=2.32.0",
    "termcolor>=3.0.1",
    "tqdm>=4.67.1",
]

[project.scripts]
qcog = "cli.main:entrypoint"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.11.6",
]


[tool.ruff]
target-version = "py312"
line-length = 88
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  ".venv",
  "venv",
  "src/__version__.py",
  "__generated.py",
]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"examples/*" = ["D"]
"docs/*" = ["D"]
"tests/*" = ["D"]
"**/__init__.py" = ["D104", "F401"]

[tool.mypy]
plugins = ["returns.contrib.mypy.returns_plugin"]

warn_redundant_casts = true
warn_unused_ignores = true


mypy_path = "stubs"

disallow_untyped_calls = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_return_any = true
no_implicit_optional = true
strict_optional = true
ignore_missing_imports = true
no_warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]

