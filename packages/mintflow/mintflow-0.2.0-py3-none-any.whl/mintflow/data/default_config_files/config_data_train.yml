
# This is a smple config file to let inflow know how it should take in it's training data.

# Inflow expects a list of .h5ad files stored on disk, where each file contains "a single" tissue.
# All preprocessing (e.g. `sc.pp.filter_cells`, `sc.pp.filter_genes` etc.) is expected to be done by user and before creating the .h5ad files, except to row-normalising the count matrix, which is done by inflow via `scanpy.pp.normalize_total`.
# Samples (i.e. tissue sections) are listed as follows and an independent neighbourhood graph is created for each sample.
# The names on the left (`anndata1`, `anndata2`, `anndata3`, ..., `file`, `obskey_cell_type`, `obskey_sliceid_to_checkUnique`, `obskey_x`, `obskey_y`, `obskey_biological_batch_key`, etc) have to remain untouched and user specifies only the values on the right (e.g. 'info_id` etc).

# Notes on setting the window size (i.e. `width_window` variables below)
#   - Inlfow's dataloader makes `width_window` by `width_window` crops from each tissue, and uses them for training.
#   - The `width_window` paramters below specifies the width of crops for each tissue.
#   - Larger `wdith_window` is technically preferable, but it also increases, e.g., GPU memory usuage.
#   - Inflow plots each tissue with a sample window overlayed in 'path_output/Toinspect_CropsOnTissues', where 'path_output' is the output path specified the argument 'path_output' when running inflow as `inflow_cli --path_output SOMEPATh ...`.
#   - After running inflow you can inspect 'path_output/Toinspect_CropsOnTissues' to see if the size of crops are fine, and for example are not too small or too big compared to the size of the tissue itself.

# Notes on configuring the neighbourhood graph built for each sample via `config_neighbourhood_graph` fields.
#   - For each sample (i.e. tissue section) a separate and configurable neighbourhood graph is crated.
#   - One may want to configure each neighbourhood grpah (e.g. the number of nearest cells to which each cell is connected, etc.).
#   - But leaving the values under `config_neighbourhood_graph` untouched is expected to result in a reasonable performance, so one can skip tuning the values under `config_neighbourhood_graph`.
#   - Inflow plots the neighbouhood graphs in 'path_output/Toinspect_NeighbourhoodGraphs', where 'path_output' is the output path specified the argument 'path_output' when running inflow as `inflow_cli --path_output SOMEPATh ...`.
#   - After running inflow you can inspect 'path_output/Toinspect_NeighbourhoodGraphs' to see if the neighbourhood grpahs look fine.

# Notes on specifying biological batches and inflow's batch correction:
#   - The user-specified `obskey_biological_batch_key` determines the column in each and every `andata.obs` that inflow looks at to understand the biological batch of each sample.
#   - The 1st sample (i.e. `anndata1`) is always used as the reference sample for batch correction.
#   - However it may so happn that multiple samples (let's say `anndata1` and `anndata2`) come from the same biological batch. In that case, if there is a sample from another biological batch (let's say `anndata3`) inflow uses `anndata1` to correct for batch effect on `anndata3`.
#     - In the above case since `anndata1` and `anndata2` come from the same batch, no batch correction is done on `anndata2` because inflow assumes the user has taged both samples as being from the same biological batch and there is no batch effect to correct for.
#   - Having mentioned the above points, if multiple biological batches are present `anndata1` should be the biggest sample containing a diverse set of cell types so it suits as a reference sample for batch correction.

list_tissue:
  anndata1:
    file: /absolute/path/to/ListAnndata/adata_1.h5ad  # TODO:ESSENTIAL:TUNE, the file name for sample 1
    obskey_cell_type: mod_celltypes_new  # TODO:ESSENTIAL:TUNE, the cell type column in `adata.obs` to be used by inflow.
    obskey_sliceid_to_checkUnique: info_id  # TODO:ESSENTIAL:TUNE, inflow requires each sample to a have a unique ID stored in the `obskey_sliceid_to_checkUnique` column of `adata.obs`. This column is only used to double check that each anndata contains a unique sample and not >1 tissues.
    obskey_x: x_centroid  # TODO:ESSENTIAL:TUNE, the column in `adata.obs` containing the sptial X position of cells.
    obskey_y: y_centroid  # TODO:ESSENTIAL:TUNE, the column in `adata.obs` containing the sptial Y position of cells.
    obskey_biological_batch_key: info_id  # TODO:ESSENTIAL:TUNE, the column in `adata.obs` that specifies the biological batch. This should be set carefully, since inflow creates biological batch identifiers based on this. Refer to `Notes on specifying biological batches and inflow's batch correction` above.
    config_neighbourhood_graph:  # config for the neighbourhood graph created by `sq.gr.spatial_neighbors`, any argument can be passed here except `spatial_key` and `library_key`
      set_diag: "False"  # no self-loops
      delaunay: "False"  # no delaunay tringulation in the neighbourhood graph
      n_neighs: 5  # each cell is connected to its 5 nearest neighbours
    config_dataloader_train:  # config for the training dataloader, which is a torch_geometric's `NeighborLoader` with a customised batch sampler.
      num_neighbors: 5  # elements of `num_neighbors` argument of torch geometric's `NeighborLoader`. It has to be less than or equal to the `n_neighs` field above. If `n_neighs` is small, it's usually fine to set `num_neighbors` equal to `n_neighs`.
      width_window: 600 #'TODO:ESSENTIAL:TUNE', an "essential" paramter to tune. Please refer to the description above, under "Notes on setting the window size".
      min_numpoints_ingrid: 10  # if the number of cells in a tissue copr is less than this number, that crop is discarded by the dataloader.
    config_sq_pl_spatial_scatter:  # some args of `sq.pl.spatial_scatter`, called by inflow to create the connectivity graphs in 'path_output/Toinspect_NeighbourhoodGraphs'
      edges_width: 0.1
      legend_fontsize: 5
      figsize: 10
      size: 10.0
    batchsize_compute_NCC: 10  # the batch size to compute NCC vectors (i.e. Neighbouhood Celltype Composition s)


