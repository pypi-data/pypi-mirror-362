# GitHub Actions configuration **EXAMPLE**,
# MODIFY IT ACCORDING TO YOUR NEEDS!
# Reference: https://docs.github.com/en/actions

name: CI

on:
  pull_request:
  push:
    branches:
      - "main"
    tags: ['v*']  # Keep tag support for releases

permissions:
  pull-requests: write
  contents: write
  id-token: write  # Needed for PyPI publishing

env:
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  test:
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        platform: [ubuntu-latest, ]
        # platform: [ubuntu-latest, macos-latest, windows-latest]  # Uncomment for cross-platform testing
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install dependencies
        run: uv sync --locked --all-extras

      - name: Run linting
        run: uv run ruff check .

      - name: Run tests with coverage
        run: uv run pytest --cov s7datablock --cov-report=term-missing

      - name: Minimize uv cache
        run: uv cache prune --ci

  build-and-publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.11"

      - name: Update version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Setting version to $VERSION"
          sed -i 's/^version = ".*"/version = "'$VERSION'"/' pyproject.toml

      - name: Build package
        run: |
          uv pip install build
          uv run python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
