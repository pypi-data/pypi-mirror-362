# coding: utf-8

"""
    Jungfraujoch

    API to control Jungfraujoch developed by the Paul Scherrer Institute (Switzerland). Jungfraujoch is a data acquisition and analysis system for pixel array detectors, primarly PSI JUNGFRAU. Jungfraujoch uses FPGA boards to acquire data at high data rates. 

    The version of the OpenAPI document: 1.0.0-rc.64
    Contact: filip.leonarski@psi.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jfjoch_client.models.broker_status import BrokerStatus

class TestBrokerStatus(unittest.TestCase):
    """BrokerStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BrokerStatus:
        """Test BrokerStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BrokerStatus`
        """
        model = BrokerStatus()
        if include_optional:
            return BrokerStatus(
                state = 'Inactive',
                progress = 1.0,
                message = '',
                message_severity = 'error',
                gpu_count = 56,
                ml_resolution_estimation = True
            )
        else:
            return BrokerStatus(
                state = 'Inactive',
        )
        """

    def testBrokerStatus(self):
        """Test BrokerStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
