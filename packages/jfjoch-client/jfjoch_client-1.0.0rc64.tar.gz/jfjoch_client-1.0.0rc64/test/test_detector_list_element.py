# coding: utf-8

"""
    Jungfraujoch

    API to control Jungfraujoch developed by the Paul Scherrer Institute (Switzerland). Jungfraujoch is a data acquisition and analysis system for pixel array detectors, primarly PSI JUNGFRAU. Jungfraujoch uses FPGA boards to acquire data at high data rates. 

    The version of the OpenAPI document: 1.0.0-rc.64
    Contact: filip.leonarski@psi.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jfjoch_client.models.detector_list_element import DetectorListElement

class TestDetectorListElement(unittest.TestCase):
    """DetectorListElement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DetectorListElement:
        """Test DetectorListElement
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DetectorListElement`
        """
        model = DetectorListElement()
        if include_optional:
            return DetectorListElement(
                id = 0,
                description = 'JUNGFRAU 4 Mpixel',
                serial_number = 'JF17T16V01',
                base_ipv4_addr = '10.10.10.1',
                udp_interface_count = 2,
                nmodules = 18,
                width = 2068,
                height = 2164,
                pixel_size_mm = 0.075,
                readout_time_us = 56,
                min_frame_time_us = 56,
                min_count_time_us = 56,
                type = 'EIGER'
            )
        else:
            return DetectorListElement(
                id = 0,
                description = 'JUNGFRAU 4 Mpixel',
                serial_number = 'JF17T16V01',
                base_ipv4_addr = '10.10.10.1',
                udp_interface_count = 2,
                nmodules = 18,
                width = 2068,
                height = 2164,
                readout_time_us = 56,
                min_frame_time_us = 56,
                min_count_time_us = 56,
        )
        """

    def testDetectorListElement(self):
        """Test DetectorListElement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
