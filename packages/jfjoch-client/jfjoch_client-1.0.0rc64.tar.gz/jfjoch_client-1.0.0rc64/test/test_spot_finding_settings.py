# coding: utf-8

"""
    Jungfraujoch

    API to control Jungfraujoch developed by the Paul Scherrer Institute (Switzerland). Jungfraujoch is a data acquisition and analysis system for pixel array detectors, primarly PSI JUNGFRAU. Jungfraujoch uses FPGA boards to acquire data at high data rates. 

    The version of the OpenAPI document: 1.0.0-rc.64
    Contact: filip.leonarski@psi.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jfjoch_client.models.spot_finding_settings import SpotFindingSettings

class TestSpotFindingSettings(unittest.TestCase):
    """SpotFindingSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SpotFindingSettings:
        """Test SpotFindingSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SpotFindingSettings`
        """
        model = SpotFindingSettings()
        if include_optional:
            return SpotFindingSettings(
                enable = True,
                indexing = True,
                signal_to_noise_threshold = 0,
                photon_count_threshold = 0,
                min_pix_per_spot = 1,
                max_pix_per_spot = 1,
                high_resolution_limit = 1.337,
                low_resolution_limit = 1.337,
                high_resolution_limit_for_spot_count_low_res = 2.0,
                resolution_estimate = True,
                quick_integration = True
            )
        else:
            return SpotFindingSettings(
                enable = True,
                indexing = True,
                signal_to_noise_threshold = 0,
                photon_count_threshold = 0,
                min_pix_per_spot = 1,
                max_pix_per_spot = 1,
                high_resolution_limit = 1.337,
                low_resolution_limit = 1.337,
                high_resolution_limit_for_spot_count_low_res = 2.0,
                quick_integration = True,
        )
        """

    def testSpotFindingSettings(self):
        """Test SpotFindingSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
