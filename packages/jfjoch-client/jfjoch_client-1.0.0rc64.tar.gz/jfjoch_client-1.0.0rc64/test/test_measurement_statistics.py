# coding: utf-8

"""
    Jungfraujoch

    API to control Jungfraujoch developed by the Paul Scherrer Institute (Switzerland). Jungfraujoch is a data acquisition and analysis system for pixel array detectors, primarly PSI JUNGFRAU. Jungfraujoch uses FPGA boards to acquire data at high data rates. 

    The version of the OpenAPI document: 1.0.0-rc.64
    Contact: filip.leonarski@psi.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jfjoch_client.models.measurement_statistics import MeasurementStatistics

class TestMeasurementStatistics(unittest.TestCase):
    """MeasurementStatistics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeasurementStatistics:
        """Test MeasurementStatistics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeasurementStatistics`
        """
        model = MeasurementStatistics()
        if include_optional:
            return MeasurementStatistics(
                file_prefix = '',
                run_number = 56,
                experiment_group = '',
                images_expected = 56,
                images_collected = 56,
                images_sent = 56,
                images_discarded_lossy_compression = 56,
                max_image_number_sent = 56,
                collection_efficiency = 1.0,
                compression_ratio = 5.3,
                cancelled = True,
                max_receiver_delay = 56,
                indexing_rate = 1.337,
                detector_width = 56,
                detector_height = 56,
                detector_pixel_depth = 2,
                bkg_estimate = 1.337,
                unit_cell = '',
                error_pixels = 1.337,
                saturated_pixels = 1.337,
                roi_beam_pixels = 1.337,
                roi_beam_sum = 1.337
            )
        else:
            return MeasurementStatistics(
        )
        """

    def testMeasurementStatistics(self):
        """Test MeasurementStatistics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
