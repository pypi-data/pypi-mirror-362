# coding: utf-8

"""
    Jungfraujoch

    API to control Jungfraujoch developed by the Paul Scherrer Institute (Switzerland). Jungfraujoch is a data acquisition and analysis system for pixel array detectors, primarly PSI JUNGFRAU. Jungfraujoch uses FPGA boards to acquire data at high data rates. 

    The version of the OpenAPI document: 1.0.0-rc.64
    Contact: filip.leonarski@psi.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jfjoch_client.models.detector import Detector

class TestDetector(unittest.TestCase):
    """Detector unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Detector:
        """Test Detector
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Detector`
        """
        model = Detector()
        if include_optional:
            return Detector(
                description = '0',
                serial_number = 'Unknown',
                type = 'EIGER',
                high_voltage_v = 0,
                udp_interface_count = 1,
                module_sync = True,
                sensor_thickness_um = 0,
                readout_time_us = 1,
                minimum_count_time_us = 0,
                minimum_frame_time_us = 0,
                calibration_file = [
                    ''
                    ],
                hostname = [
                    ''
                    ],
                sensor_material = 'Si',
                tx_delay = [
                    56
                    ],
                base_data_ipv4_address = '10.10.10.50',
                standard_geometry = jfjoch_client.models.standard_detector_geometry.standard_detector_geometry(
                    nmodules = 1, 
                    gap_x = 0, 
                    gap_y = 0, 
                    modules_in_row = 1, ),
                custom_geometry = [
                    jfjoch_client.models.detector_module.detector_module(
                        x0 = 1.337, 
                        y0 = 1.337, 
                        fast_axis = 'Xp', 
                        slow_axis = 'Xp', )
                    ],
                roi_mode = '',
                mirror_y = True
            )
        else:
            return Detector(
                description = '0',
        )
        """

    def testDetector(self):
        """Test Detector"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
