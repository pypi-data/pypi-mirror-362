# coding: utf-8

"""
    Jungfraujoch

    API to control Jungfraujoch developed by the Paul Scherrer Institute (Switzerland). Jungfraujoch is a data acquisition and analysis system for pixel array detectors, primarly PSI JUNGFRAU. Jungfraujoch uses FPGA boards to acquire data at high data rates. 

    The version of the OpenAPI document: 1.0.0-rc.64
    Contact: filip.leonarski@psi.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jfjoch_client.models.plot import Plot

class TestPlot(unittest.TestCase):
    """Plot unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Plot:
        """Test Plot
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Plot`
        """
        model = Plot()
        if include_optional:
            return Plot(
                title = '',
                x = [
                    1.337
                    ],
                y = [
                    1.337
                    ],
                z = [
                    1.337
                    ]
            )
        else:
            return Plot(
                title = '',
                x = [
                    1.337
                    ],
                y = [
                    1.337
                    ],
        )
        """

    def testPlot(self):
        """Test Plot"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
