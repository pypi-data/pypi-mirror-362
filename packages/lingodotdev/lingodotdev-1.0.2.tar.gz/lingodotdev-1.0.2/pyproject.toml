[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lingodotdev"
version = "1.0.2"
description = "Lingo.dev Python SDK"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "Apache-2.0" }
authors = [
    { name = "Lingo.dev Team", email = "hi@lingo.dev" },
]
keywords = ["localization", "i18n", "translation", "lingo.dev"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Localization",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "requests>=2.25.0",
    "pydantic>=2.0.0",
    "nanoid>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "types-requests>=2.25.0",
    "python-semantic-release>=8.0.0",
]

[project.urls]
Homepage = "https://lingo.dev"
Documentation = "https://lingo.dev/docs"
Repository = "https://github.com/lingodotdev/sdk-python"
Issues = "https://github.com/lingodotdev/sdk-python/issues"


[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
]

[tool.hatch.build.targets.wheel]
packages = ["src/lingodotdev"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/lingodotdev --cov-report=term-missing --cov-report=html"

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version",
]
version_variables = [
    "src/lingodotdev/__init__.py:__version__",
]
build_command = "python -m build"
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
remove_dist = false

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.changelog]
template_dir = "templates"
exclude_commit_patterns = []

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false