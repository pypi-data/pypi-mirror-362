[metadata]
name = networkx-mcp-server
version = attr: networkx_mcp.__version__
description = NetworkX Model Context Protocol Server
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/brightliu/networkx-mcp-server
author = NetworkX MCP Team
license = MIT
license_files = LICENSE
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Developers
	License :: OSI Approved :: MIT License
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.11
	Programming Language :: Python :: 3.12
	Programming Language :: Python :: 3.13
	Topic :: Software Development :: Libraries :: Python Modules
	Topic :: Scientific/Engineering :: Information Analysis

[options]
packages = find:
package_dir = 
	= src
python_requires = >=3.11
install_requires = 
	networkx>=3.4.0
	numpy>=2.0.0
	scipy>=1.14.0
	pandas>=2.2.0
	redis>=5.2.0
	aiofiles>=24.1.0
	pyyaml>=6.0.2
	python-dotenv>=1.0.0
	pydantic>=2.10.0
	rich>=13.9.0
	fastmcp>=0.5.0

[options.packages.find]
where = src

[mutmut]
paths_to_mutate = src/networkx_mcp/
backup = False
runner = python -m pytest tests/unit/ tests/property/ tests/security/ -x --tb=short
tests_dir = tests/
dict_synonyms = Struct, NamedStruct
total = 500
simple_output = False
rerun_all = True

[mutmut:env]
PYTHONPATH = src
TESTING = 1

[flake8]
max-line-length = 88
select = E,W,F
exclude = 
	.git,
	__pycache__,
	.pytest_cache,
	.coverage,
	htmlcov,
	dist,
	build,
	*.egg-info

[coverage:run]
source = src/networkx_mcp
omit = 
	*/tests/*
	*/test_*
	*/__pycache__/*
	*/mcp_mock.py
parallel = true
branch = true

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = 
	pragma: no cover
	def __repr__
	if self.debug:
	if settings.DEBUG
	raise AssertionError
	raise NotImplementedError
	if 0:
	if __name__ == .__main__.:
	class .*\bProtocol\):
	@(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = NetworkX MCP Server Coverage Report

[mypy]
python_version = 3.11
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[mypy-tests.*]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool:pytest]
minversion = 6.0
addopts = 
	-ra
	--strict-markers
	--strict-config
	--cov=src/networkx_mcp
	--cov-report=term-missing:skip-covered
	--cov-report=html
	--cov-report=xml
	--cov-fail-under=85
testpaths = tests
markers = 
	slow: marks tests as slow (deselect with '-m "not slow"')
	benchmark: marks tests as benchmarks
	unit: marks tests as unit tests
	integration: marks tests as integration tests
	security: marks tests as security tests
	property: marks tests as property-based tests
	mutation: marks tests for mutation testing
filterwarnings = 
	error
	ignore::UserWarning
	ignore::DeprecationWarning

[egg_info]
tag_build = 
tag_date = 0

