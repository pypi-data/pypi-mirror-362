name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        name: Test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ["3.10", "3.11", "3.12", "3.13"]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true
                  components: rustfmt, clippy

            - name: Cache Rust dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade uv
                  uv venv
                  uv pip install maturin pytest pytest-cov pytest-xdist

            - name: Rust format check
              run: cargo fmt --all -- --check

            - name: Rust clippy
              run: cargo clippy --all-targets --all-features -- -D warnings

            - name: Run Rust tests
              run: cargo test --verbose

            - name: Build and install Python package
              run: uv run maturin develop

            - name: Run Python tests
              run: uv run pytest tests/ -v --cov=logxide --cov-report=xml

            - name: Upload coverage to Codecov
              if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: false

    lint:
        name: Lint
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade uv
                  uv venv
                  uv pip install ruff pyright

            - name: Run ruff
              run: uv run ruff check .

            - name: Run ruff format check
              run: uv run ruff format --check .

            - name: Run pyright
              run: uv run pyright logxide/

    build:
        name: Build
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true

            - name: Install maturin
              run: |
                  python -m pip install --upgrade uv
                  uv pip install --system maturin

            - name: Build wheels
              run: maturin build --release

            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-${{ matrix.os }}
                  path: target/wheels/

    security:
        name: Security audit
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true

            - name: Run security audit
              run: |
                  cargo install cargo-audit
                  cargo audit
