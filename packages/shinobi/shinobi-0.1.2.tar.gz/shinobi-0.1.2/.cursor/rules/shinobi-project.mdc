---
description:
globs:
alwaysApply: true
---
# Shinobi Project Overview

Shinobi is an enhanced Python project initialization tool built on top of `uv`. It provides a streamlined way to create new Python projects with modern best practices and tooling.

## Core Features

- **Project Initialization**: Creates a new Python project with a modern `src` layout
- **Dependency Management**: Uses `uv` for fast and reliable package management
- **Code Quality Tools**:
  - Ruff for linting and formatting
  - Pre-commit hooks for automated checks
- **Testing**: Built-in pytest setup
- **CI/CD**: GitHub Actions workflows for automated testing and linting
- **IDE Support**: VS Code and Cursor configuration

## Project Structure

```
project_name/
├── src/              # Source code directory
│   └── main.py      # Main application code
├── tests/           # Test directory
│   └── __init__.py
├── .github/         # GitHub Actions workflows
├── .vscode/         # VS Code settings
├── .cursor/         # Cursor rules
├── .pre-commit-config.yaml
├── pyproject.toml   # Project configuration
└── README.md
```

## Key Components

1. **CLI Interface**: Built with Typer for a user-friendly command-line experience
2. **Interactive Setup**: Uses questionary for interactive project configuration
3. **Modern Tooling**: Integrates with modern Python tools like Ruff and uv
4. **Best Practices**: Enforces Python project best practices and conventions

## Usage

To initialize a new project:

```bash
shinobi init
```

This will:
1. Prompt for project configuration
2. Set up the project structure
3. Configure development tools
4. Create necessary configuration files

## Development Guidelines

- Always use `uv` for package management
- Follow the established project structure
- Use pre-commit hooks for code quality
- Write tests for new features
- Keep the codebase clean and well-documented
