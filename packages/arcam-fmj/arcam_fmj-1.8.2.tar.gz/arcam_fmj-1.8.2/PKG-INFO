Metadata-Version: 2.4
Name: arcam-fmj
Version: 1.8.2
Summary: A python library for speaking to Arcam receivers
Home-page: https://github.com/elupus/arcam_fmj
Author: Joakim Plate
License: MIT
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: Plugins
Classifier: Framework :: AsyncIO
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: attrs>18.1
Provides-Extra: tests
Requires-Dist: pytest>3.6.4; extra == "tests"
Requires-Dist: pytest-asyncio==0.21.2; extra == "tests"
Requires-Dist: pytest-aiohttp>=1.0.0; extra == "tests"
Requires-Dist: pytest-cov>=3.0.0; extra == "tests"
Requires-Dist: coveralls; extra == "tests"
Requires-Dist: pytest-mock; extra == "tests"
Requires-Dist: aiohttp; extra == "tests"
Requires-Dist: defusedxml; extra == "tests"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

********************************
Arcam IP Control
********************************
This module supports controlling an Arcam FMJ receiver (as well as JBL and AudioControl processors) over the network.
It's built mainly for use with the Home Assistant project, but should work for other projects as well.

Status
______
.. image:: https://github.com/elupus/arcam_fmj/actions/workflows/python-package.yml/badge.svg
    :target: https://github.com/elupus/arcam_fmj/actions

Module
======

Code to set volume and source using library.

.. code-block:: python


    async def run():

        host = '192.168.0.2'
        port = '50000'
        zone = 1

        volume = 50
        source = SourceCodes.PVR

        client = Client(host, port)
        async with ClientContext(client):
            state = State(client, zone)

            await state.set_volume(volume)
            await state.set_source(source)

    loop = asyncio.get_event_loop()
    loop.run_until_complete (run())


Console
=======

The module contains a commandline utility to test and request data from
called ``arcam-fmj``.

Code to set volume and source using console.

.. code-block:: bash


    arcam-fmj state --host 192.168.0.2 --port 50000 --source 5 --volume 50
