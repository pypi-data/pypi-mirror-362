/****************************************************************************
*   Generated by ACUITY #ACUITY_VERSION#
*   Match timvx #TIMVX_VERSION#
*
*   Neural Network appliction customer header file
****************************************************************************/
#ifndef _UTILS_H
#define _UTILS_H

#include "vx_#NETWORK_NAME#.h"

#include <algorithm>
#include <iostream>
#include <iomanip>
#include <tuple>
#include <vector>

namespace utils
{
std::vector<std::vector<char>> load_input_data(char** argv, int input_count,
                                                   std::vector<uint32_t> input_size_bytes);
void load_input_tensor_data(char **argv, int input_count, std::vector<uint32_t> input_size_bytes,
                     std::vector<std::shared_ptr<tim::vx::Tensor>> inputs);
int postprocess();
bool show_top5();
bool get_top(float* pfProb, float* pfMaxProb, uint32_t* pMaxClass, uint32_t outputCount, uint32_t topNum);

}  // namespace utils

# endif
