import{s as U}from"./chunk-SKB7J2MH-B7Z1FsaJ.js";import{_ as d,s as X,g as Y,q as Z,p as tt,a as et,b as at,E as G,F as B,I as lt,d as st,l as R,a9 as C,aa as rt,y as nt,G as ot}from"./mermaid-DCMac0Ai.js";import{p as it}from"./chunk-353BL4L5-DBdJb07A.js";import{I as ct}from"./chunk-AACKK3MU-CDOdA9eC.js";import{p as dt}from"./treemap-FKARHQ26-AlpUch0p.js";import{s as W}from"./transform-CDNfLgV5.js";import{y as z}from"./index-_lj65MZR.js";import{o as V}from"./ordinal-DDUp3AbE.js";import{h as pt,t as mt}from"./index-BEQfoZiP.js";import"./step-BwsUM5iJ.js";import"./_baseEach-BjDLzUwG.js";import"./_baseUniq-DqHaT24V.js";import"./min-VDyC-auF.js";import"./_baseMap-CuZ-LBtv.js";import"./clone-DD3sG0_1.js";import"./_createAggregator-C_WhAECr.js";import"./timer-Bqd5yn_a.js";import"./init-DLRA0X12.js";var ht={nodes:[],levels:new Map,outerNodes:[],classes:new Map},x=new ct(()=>structuredClone(ht)),ft=d(()=>{const n=ot,a=B();return G({...n.treemap,...a.treemap??{}})},"getConfig"),yt=d(()=>x.records.nodes,"getNodes"),St=d((n,a)=>{const o=x.records;o.nodes.push(n),o.levels.set(n,a),a===0&&o.outerNodes.push(n),a!==0||o.root||(o.root=n)},"addNode"),gt=d(()=>({name:"",children:x.records.outerNodes}),"getRoot"),ut=d((n,a)=>{const o=x.records.classes,r=o.get(n)??{id:n,styles:[],textStyles:[]};o.set(n,r);const i=a.replace(/\\,/g,"\xA7\xA7\xA7").replace(/,/g,";").replace(/§§§/g,",").split(";");i&&i.forEach(s=>{rt(s)&&(r!=null&&r.textStyles?r.textStyles.push(s):r.textStyles=[s]),r!=null&&r.styles?r.styles.push(s):r.styles=[s]}),o.set(n,r)},"addClass"),xt=d(()=>x.records.classes,"getClasses"),Ct=d(n=>{var a;return((a=x.records.classes.get(n))==null?void 0:a.styles)??[]},"getStylesForClass"),F={getNodes:yt,addNode:St,getRoot:gt,getConfig:ft,clear:d(()=>{nt(),x.reset()},"clear"),setAccTitle:at,getAccTitle:et,setDiagramTitle:tt,getDiagramTitle:Z,getAccDescription:Y,setAccDescription:X,addClass:ut,getClasses:xt,getStylesForClass:Ct};function q(n){if(!n.length)return[];const a=[],o=[];return n.forEach(r=>{const i={name:r.name,children:r.type==="Leaf"?void 0:[]};for(i.classSelector=r==null?void 0:r.classSelector,r!=null&&r.cssCompiledStyles&&(i.cssCompiledStyles=[r.cssCompiledStyles]),r.type==="Leaf"&&r.value!==void 0&&(i.value=r.value);o.length>0&&o[o.length-1].level>=r.level;)o.pop();if(o.length===0)a.push(i);else{const s=o[o.length-1].node;s.children?s.children.push(i):s.children=[i]}r.type!=="Leaf"&&o.push({node:i,level:r.level})}),a}d(q,"buildHierarchy");var bt=d(n=>{it(n,F);const a=[];for(const i of n.TreemapRows??[])i.$type==="ClassDefStatement"&&F.addClass(i.className??"",i.styleText??"");for(const i of n.TreemapRows??[]){const s=i.item;if(!s)continue;const g=i.indent?parseInt(i.indent):0,b=vt(s),v=s.classSelector?F.getStylesForClass(s.classSelector):[],l=v.length>0?v.join(";"):void 0,$={level:g,name:b,type:s.$type,value:s.value,classSelector:s.classSelector,cssCompiledStyles:l};a.push($)}const o=q(a),r=d((i,s)=>{for(const g of i)F.addNode(g,s),g.children&&g.children.length>0&&r(g.children,s+1)},"addNodesRecursively");r(o,0)},"populate"),vt=d(n=>n.name?String(n.name):"","getItemName"),T=10,$t={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},wt={parser:{parse:d(async n=>{try{const a=dt,o=await a("treemap",n);R.debug("Treemap AST:",o),bt(o)}catch(a){throw R.error("Error parsing treemap:",a),a}},"parse")},db:F,renderer:{draw:d((n,a,o,r)=>{const i=r.db,s=i.getConfig(),g=s.padding??10,b=i.getDiagramTitle(),v=i.getRoot(),{themeVariables:l}=B();if(!v)return;const $=b?30:0,w=lt(a),D=s.nodeWidth?s.nodeWidth*T:960,E=s.nodeHeight?s.nodeHeight*T:500,A=D,I=E+$;let u;w.attr("viewBox",`0 0 ${A} ${I}`),st(w,I,A,s.useMaxWidth);try{const t=s.valueFormat||",";if(t==="$0,0")u=d(e=>"$"+z(",")(e),"valueFormat");else if(t.startsWith("$")&&t.includes(",")){const e=/\.\d+/.exec(t),p=e?e[0]:"";u=d(f=>"$"+z(","+p)(f),"valueFormat")}else if(t.startsWith("$")){const e=t.substring(1);u=d(p=>"$"+z(e||"")(p),"valueFormat")}else u=z(t)}catch(t){R.error("Error creating format function:",t),u=z(",")}const L=V().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),_=V().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),M=V().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);b&&w.append("text").attr("x",A/2).attr("y",$/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(b);const H=w.append("g").attr("transform",`translate(0, ${$})`).attr("class","treemapContainer"),J=pt(v).sum(t=>t.value??0).sort((t,e)=>(e.value??0)-(t.value??0)),j=mt().size([D,E]).paddingTop(t=>t.children&&t.children.length>0?35:0).paddingInner(g).paddingLeft(t=>t.children&&t.children.length>0?T:0).paddingRight(t=>t.children&&t.children.length>0?T:0).paddingBottom(t=>t.children&&t.children.length>0?T:0).round(!0)(J),K=j.descendants().filter(t=>t.children&&t.children.length>0),k=H.selectAll(".treemapSection").data(K).enter().append("g").attr("class","treemapSection").attr("transform",t=>`translate(${t.x0},${t.y0})`);k.append("rect").attr("width",t=>t.x1-t.x0).attr("height",25).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",t=>t.depth===0?"display: none;":""),k.append("clipPath").attr("id",(t,e)=>`clip-section-${a}-${e}`).append("rect").attr("width",t=>Math.max(0,t.x1-t.x0-12)).attr("height",25),k.append("rect").attr("width",t=>t.x1-t.x0).attr("height",t=>t.y1-t.y0).attr("class",(t,e)=>`treemapSection section${e}`).attr("fill",t=>L(t.data.name)).attr("fill-opacity",.6).attr("stroke",t=>_(t.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",t=>{if(t.depth===0)return"display: none;";const e=C({cssCompiledStyles:t.data.cssCompiledStyles});return e.nodeStyles+";"+e.borderStyles.join(";")}),k.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",12.5).attr("dominant-baseline","middle").text(t=>t.depth===0?"":t.data.name).attr("font-weight","bold").attr("style",t=>t.depth===0?"display: none;":"dominant-baseline: middle; font-size: 12px; fill:"+M(t.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).each(function(t){if(t.depth===0)return;const e=W(this),p=t.data.name;e.text(p);const f=t.x1-t.x0;let S;s.showValues!==!1&&t.value?S=f-10-30-10-6:S=f-6-6;const h=Math.max(15,S),y=e.node();if(y.getComputedTextLength()>h){const c="...";let m=p;for(;m.length>0;){if(m=p.substring(0,m.length-1),m.length===0){e.text(c),y.getComputedTextLength()>h&&e.text("");break}if(e.text(m+c),y.getComputedTextLength()<=h)break}}}),s.showValues!==!1&&k.append("text").attr("class","treemapSectionValue").attr("x",t=>t.x1-t.x0-10).attr("y",12.5).attr("text-anchor","end").attr("dominant-baseline","middle").text(t=>t.value?u(t.value):"").attr("font-style","italic").attr("style",t=>t.depth===0?"display: none;":"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+M(t.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:"));const O=j.leaves(),N=H.selectAll(".treemapLeafGroup").data(O).enter().append("g").attr("class",(t,e)=>`treemapNode treemapLeafGroup leaf${e}${t.data.classSelector?` ${t.data.classSelector}`:""}x`).attr("transform",t=>`translate(${t.x0},${t.y0})`);N.append("rect").attr("width",t=>t.x1-t.x0).attr("height",t=>t.y1-t.y0).attr("class","treemapLeaf").attr("fill",t=>t.parent?L(t.parent.data.name):L(t.data.name)).attr("style",t=>C({cssCompiledStyles:t.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",t=>t.parent?L(t.parent.data.name):L(t.data.name)).attr("stroke-width",3),N.append("clipPath").attr("id",(t,e)=>`clip-${a}-${e}`).append("rect").attr("width",t=>Math.max(0,t.x1-t.x0-4)).attr("height",t=>Math.max(0,t.y1-t.y0-4)),N.append("text").attr("class","treemapLabel").attr("x",t=>(t.x1-t.x0)/2).attr("y",t=>(t.y1-t.y0)/2).attr("style",t=>"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+M(t.data.name)+";"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(t,e)=>`url(#clip-${a}-${e})`).text(t=>t.data.name).each(function(t){const e=W(this),p=t.x1-t.x0,f=t.y1-t.y0,S=e.node(),h=p-8,y=f-8;if(h<10||y<10)return void e.style("display","none");let c=parseInt(e.style("font-size"),10);for(;S.getComputedTextLength()>h&&c>8;)c--,e.style("font-size",`${c}px`);let m=Math.max(6,Math.min(28,Math.round(.6*c))),P=c+2+m;for(;P>y&&c>8&&(c--,m=Math.max(6,Math.min(28,Math.round(.6*c))),!(m<6&&c===8));)e.style("font-size",`${c}px`),P=c+2+m;e.style("font-size",`${c}px`),(S.getComputedTextLength()>h||c<8||y<c)&&e.style("display","none")}),s.showValues!==!1&&N.append("text").attr("class","treemapValue").attr("x",t=>(t.x1-t.x0)/2).attr("y",function(t){return(t.y1-t.y0)/2}).attr("style",t=>"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+M(t.data.name)+";"+C({cssCompiledStyles:t.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(t,e)=>`url(#clip-${a}-${e})`).text(t=>t.value?u(t.value):"").each(function(t){const e=W(this),p=this.parentNode;if(!p)return void e.style("display","none");const f=W(p).select(".treemapLabel");if(f.empty()||f.style("display")==="none")return void e.style("display","none");const S=parseFloat(f.style("font-size")),h=Math.max(6,Math.min(28,Math.round(.6*S)));e.style("font-size",`${h}px`);const y=(t.y1-t.y0)/2+S/2+2;e.attr("y",y);const c=t.x1-t.x0,m=t.y1-t.y0-4,P=c-8;e.node().getComputedTextLength()>P||y+h>m||h<6?e.style("display","none"):e.style("display",null)});const Q=s.diagramPadding??8;U(w,Q,"flowchart",(s==null?void 0:s.useMaxWidth)||!1)},"draw"),getClasses:d(function(n,a){return a.db.getClasses()},"getClasses")},styles:d(({treemap:n}={})=>{const a=G($t,n);return`
  .treemapNode.section {
    stroke: ${a.sectionStrokeColor};
    stroke-width: ${a.sectionStrokeWidth};
    fill: ${a.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${a.leafStrokeColor};
    stroke-width: ${a.leafStrokeWidth};
    fill: ${a.leafFillColor};
  }
  .treemapLabel {
    fill: ${a.labelColor};
    font-size: ${a.labelFontSize};
  }
  .treemapValue {
    fill: ${a.valueColor};
    font-size: ${a.valueFontSize};
  }
  .treemapTitle {
    fill: ${a.titleColor};
    font-size: ${a.titleFontSize};
  }
  `},"getStyles")};export{wt as diagram};
