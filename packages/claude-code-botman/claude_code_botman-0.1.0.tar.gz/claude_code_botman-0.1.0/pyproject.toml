[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "claude-code-botman"
version = "0.1.0"
description = "A Python wrapper for Claude Code CLI"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Octavio Pavon", email = "octavio.pavon@botman-ai.com"},
]
maintainers = [
    {name = "Octavio Pavon", email = "octavio.pavon@botman-ai.com"},
]
keywords = [
    "claude",
    "ai",
    "cli",
    "wrapper",
    "anthropic",
    "code-generation",
    "automation",
    "subprocess",
    "bot",
    "mcp",
    "model-context-protocol",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Shells",
    "Topic :: Utilities",
]
dependencies = [
    "typing-extensions>=4.0.0; python_version<'3.9'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10.0",
    "black>=23.0",
    "flake8>=6.0; python_version>='3.8.1'",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "isort>=5.0",
    "bandit>=1.7",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
    "sphinx-autodoc-typehints>=1.0",
]
async = [
    "aiosubprocess>=2021.5.3",
]

[project.urls]
Homepage = "https://github.com/octavio-pavon/claude-code-botman"
Documentation = "https://claude-code-botman.readthedocs.io"
Repository = "https://github.com/octavio-pavon/claude-code-botman"
Issues = "https://github.com/octavio-pavon/claude-code-botman/issues"
Changelog = "https://github.com/octavio-pavon/claude-code-botman/blob/main/CHANGELOG.md"

[project.scripts]
claude-code-botman = "claude_code_botman.cli:main"

[tool.poetry]
packages = [{include = "claude_code_botman"}]
include = [
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["claude_code_botman"]
known_third_party = ["pytest", "setuptools"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "examples.*",
]
ignore_errors = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=claude_code_botman",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "cli: marks tests that require Claude CLI",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["claude_code_botman"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/build/*",
    "*/dist/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]

# Flake8 configuration (in setup.cfg format)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]
