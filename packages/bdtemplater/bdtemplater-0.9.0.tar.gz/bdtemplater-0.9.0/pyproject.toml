[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bdtemplater"
version = "0.9.0"
description = "A utility for generating templates in a mostly brain-dead way"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Mykel Alvis", email = "mykel.alvis@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.8"
dependencies = []

[dependency-groups]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
lint = [
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
dev = [
    {include-group = "test"},
    {include-group = "lint"},
]

[project.scripts]
bdtemplater = "bdtemplater.bdtemplatize:main"
bdt = "bdtemplater.bdtemplatize:main"

[project.urls]
Homepage = "https://github.com/infrastructurebuilder/bdtemplater"
Repository = "https://github.com/infrastructurebuilder/bdtemplater"
Issues = "https://github.com/infrastructurebuilder/bdtemplater/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/bdtemplater", "src/bdtemplaterpostprocessor", "src/bdtemplaterexample"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/pyproject.toml",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

[tool.coverage.run]
source = ["src"]
branch = true
include = ["src/*"]

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 95
include = ["src/*"]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
