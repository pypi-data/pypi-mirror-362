var R=Object.defineProperty;var L=(l,e,t)=>e in l?R(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var d=(l,e,t)=>L(l,typeof e!="symbol"?e+"":e,t);import{l as k,e as S,R as x,P as _,S as N}from"./monaco-core.js";import{l as H}from"./vendor.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const u of s.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&r(u)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();class O{constructor(e="localhost:1234"){d(this,"currentConnection",null);d(this,"reconnectAttempts",0);d(this,"baseReconnectDelay",1e3);d(this,"maxReconnectDelay",1e4);d(this,"providersRegistered",!1);d(this,"pylspUrl","localhost:1234");d(this,"providerDisposables",[]);d(this,"reconnectTimeoutId",null);d(this,"isDestroyed",!1);d(this,"healthCheckInterval",null);d(this,"webSocket",null);this.pylspUrl=e,this.connect()}connect(){if(this.isDestroyed){console.log("LSP client has been destroyed, skipping connection attempt");return}this.webSocket=new WebSocket("ws://"+this.pylspUrl);const e=this.webSocket;e.onopen=()=>{console.log("WebSocket connected"),this.reconnectAttempts=0},e.onerror=t=>{console.error("WebSocket error:",t)},e.onclose=t=>{if(console.log("WebSocket disconnected:",t.code,t.reason),this.currentConnection=null,this.stopHealthCheck(),this.isDestroyed){console.log("LSP client has been destroyed, skipping reconnection");return}this.reconnectTimeoutId!==null&&(clearTimeout(this.reconnectTimeoutId),this.reconnectTimeoutId=null);const r=Math.min(this.baseReconnectDelay*Math.min(Math.pow(1.5,this.reconnectAttempts),10),this.maxReconnectDelay);this.reconnectAttempts++,console.log(`Attempting to reconnect in ${r}ms (attempt ${this.reconnectAttempts})`),this.reconnectTimeoutId=window.setTimeout(()=>{this.reconnectTimeoutId=null,this.connect()},r)},H({webSocket:e,onConnection:t=>{this.currentConnection=t,t.listen();const r={processId:null,rootUri:null,capabilities:{}};t.sendRequest("initialize",r).then(()=>{t.sendNotification("initialized",{}),console.log("LSP connection initialized successfully"),this.startHealthCheck()}).catch(n=>{console.error("Failed to initialize LSP:",n),this.currentConnection===t&&(this.currentConnection=null,t.dispose(),e.close())}),this.registerMonacoProviders()}})}registerMonacoProviders(){this.providersRegistered&&(console.log("Disposing existing Monaco providers before re-registering"),this.providerDisposables.forEach(n=>n.dispose()),this.providerDisposables=[],this.providersRegistered=!1);const e=k.registerCompletionItemProvider("python",{triggerCharacters:["."],provideCompletionItems:async(n,s)=>{const u=this.currentConnection;if(!this.isConnectionValid(u))return console.warn("No valid LSP connection available for completion"),{suggestions:[]};const h=u,g=n.uri.toString(),m=s.lineNumber-1,c=s.column-1;h.sendNotification("textDocument/didOpen",{textDocument:{uri:g,languageId:"python",version:1,text:n.getValue()}});try{const o=await h.sendRequest("textDocument/completion",{textDocument:{uri:g},position:{line:m,character:c},context:{triggerKind:1}});return{suggestions:(Array.isArray(o)?o:o.items).map(i=>({label:i.label,kind:k.CompletionItemKind.Function,insertText:i.insertText??i.label,documentation:i.documentation?typeof i.documentation=="string"?{value:i.documentation}:i.documentation:void 0,range:i.range}))}}catch(o){return console.error("LSP completion failed:",o),o instanceof Error&&(o.message.includes("disposed")||o.message.includes("closed"))&&(console.warn("Connection was disposed during completion request, forcing reconnection"),this.currentConnection=null,this.forceReconnect()),{suggestions:[]}}}}),t=k.registerSignatureHelpProvider("python",{signatureHelpTriggerCharacters:["(",",","="],provideSignatureHelp:async(n,s,u,h)=>{var f;const g=this.currentConnection;if(!this.isConnectionValid(g))return console.warn("No valid LSP connection available for signature help"),{value:{signatures:[],activeSignature:0,activeParameter:0},dispose:()=>{}};const m=g,c=n.uri.toString(),o=s.lineNumber-1,p=s.column-1;m.sendNotification("textDocument/didOpen",{textDocument:{uri:c,languageId:"python",version:1,text:n.getValue()}});try{const i=await m.sendRequest("textDocument/signatureHelp",{textDocument:{uri:c},position:{line:o,character:p},context:{triggerKind:h.triggerKind,triggerCharacter:h.triggerCharacter}});return!i||!((f=i.signatures)!=null&&f.length)?{value:{signatures:[],activeSignature:0,activeParameter:0},dispose:()=>{}}:{value:{signatures:i.signatures.map(v=>{var I;return{label:v.label,documentation:v.documentation?typeof v.documentation=="string"?{value:v.documentation}:v.documentation:void 0,parameters:((I=v.parameters)==null?void 0:I.map(C=>({label:typeof C.label=="string"?C.label:C.label[0]+"-"+C.label[1],documentation:C.documentation?typeof C.documentation=="string"?{value:C.documentation}:C.documentation:void 0})))||[]}}),activeSignature:i.activeSignature??0,activeParameter:i.activeParameter??0},dispose:()=>{}}}catch(i){return console.error("LSP signature help failed:",i),i instanceof Error&&(i.message.includes("disposed")||i.message.includes("closed"))&&(console.warn("Connection was disposed during signature help request, forcing reconnection"),this.currentConnection=null,this.forceReconnect()),{value:{signatures:[],activeSignature:0,activeParameter:0},dispose:()=>{}}}}}),r=k.registerHoverProvider("python",{provideHover:async(n,s)=>{const u=this.currentConnection;if(!this.isConnectionValid(u))return console.warn("No valid LSP connection available for hover"),null;const h=u,g=n.uri.toString(),m=s.lineNumber-1,c=s.column-1;h.sendNotification("textDocument/didOpen",{textDocument:{uri:g,languageId:"python",version:1,text:n.getValue()}});try{const o=await h.sendRequest("textDocument/hover",{textDocument:{uri:g},position:{line:m,character:c}});if(o!=null&&o.contents)return{contents:Array.isArray(o.contents)?o.contents.map(p=>({value:p.value||p})):[{value:o.contents.value||o.contents}],range:o.range}}catch(o){console.error("LSP hover failed:",o),o instanceof Error&&(o.message.includes("disposed")||o.message.includes("closed"))&&(console.warn("Connection was disposed during hover request, forcing reconnection"),this.currentConnection=null,this.forceReconnect())}return null}});this.providerDisposables.push(e,t,r),this.providersRegistered=!0,console.log("Monaco language providers registered successfully")}isConnectionValid(e){var t;if(!e)return!1;try{if(e._disposed||(t=e.isDisposed)!=null&&t.call(e))return console.warn("Detected disposed connection via disposal flags"),this.currentConnection===e&&(this.currentConnection=null,this.forceReconnect()),!1;const r=e.state||e._state;return r==="closed"||r==="disposed"||r===3?(console.warn("Detected closed connection via state check"),this.currentConnection===e&&(this.currentConnection=null,this.forceReconnect()),!1):!0}catch(r){return console.warn("Error checking connection validity, treating as invalid:",r),this.currentConnection===e&&(this.currentConnection=null,this.forceReconnect()),!1}}forceReconnect(){this.isDestroyed||(console.log("Forcing reconnection due to disposed connection"),this.reconnectTimeoutId!==null&&(clearTimeout(this.reconnectTimeoutId),this.reconnectTimeoutId=null),this.reconnectTimeoutId=window.setTimeout(()=>{this.reconnectTimeoutId=null,this.connect()},100))}startHealthCheck(){this.stopHealthCheck(),this.healthCheckInterval=window.setInterval(async()=>{var e;if(this.isDestroyed){this.stopHealthCheck();return}if(console.log("Status of the current connection: ",this.isConnected()?"Connected":"Disconnected"),this.currentConnection&&!this.isConnectionValid(this.currentConnection)){console.log("Health check detected invalid connection via basic checks");return}if(((e=this.webSocket)==null?void 0:e.readyState)!==WebSocket.OPEN){console.log("Health check detected invalid connection via WebSocket state"),this.forceReconnect();return}},5e3)}stopHealthCheck(){this.healthCheckInterval!==null&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null)}isConnected(){return this.isConnectionValid(this.currentConnection)}getConnection(){return this.currentConnection}setLspUrl(e){if(this.isDestroyed){console.warn("Cannot change URL: LSP client has been destroyed");return}console.log(`Changing LSP URL from ${this.pylspUrl} to ${e}`),this.pylspUrl=e,this.reconnectTimeoutId!==null&&(clearTimeout(this.reconnectTimeoutId),this.reconnectTimeoutId=null),this.currentConnection&&(this.currentConnection.dispose(),this.currentConnection=null),this.reconnectAttempts=0,this.connect()}destroy(){this.isDestroyed=!0,this.stopHealthCheck(),this.reconnectTimeoutId!==null&&(clearTimeout(this.reconnectTimeoutId),this.reconnectTimeoutId=null),this.providerDisposables.forEach(e=>e.dispose()),this.providerDisposables=[],this.providersRegistered=!1,this.currentConnection&&(this.currentConnection.dispose(),this.currentConnection=null),console.log("LSP client destroyed")}}const T=document.getElementById("container");if(!T)throw new Error("Container element not found");const a=S.create(T,{value:"",language:"python",automaticLayout:!0,theme:"vs-dark"});let P=null,D=null,y=null;function M(){console.log("Editor initialized"),b("bridge_initialized",!0)}window.onload=function(){console.log("Window loaded, initializing QWebChannel"),new QWebChannel(window.qt.webChannelTransport,function(l){P=l.objects.connector,P?(P.javascript_data_sent.connect(A),console.log("Successfully connected to javascript_data signal")):console.warn("Bridge javascript_data_sent.connect not available"),a.onDidChangeModelContent(e=>{const t=a.getModel();if(t){const r=t.getValue();b("_current_text",r)}}),M()})};function b(l,e){P&&P._receive(l,JSON.stringify(e))}function A(l,e){const t=JSON.parse(e);switch(console.log(`Received update from Python: ${l} =`,t),l){case"set_text":const r=a.getModel();r&&r.setValue(t);break;case"read":const n=a.getValue();b("_current_text",n);break;case"minimap":const s=t===!0;console.log(`Setting minimap enabled: ${s}`),a.updateOptions({minimap:{enabled:s}});break;case"set_cursor":{const c=t;if(a.getModel()){const p=c.line||1,f=c.column||1,i=c.moveToPosition||"",w=new _(p,f),v=new N(p,f,p,f);a.setPosition(w),a.setSelection(v),typeof i=="string"&&i&&(i==="center"?a.revealPositionInCenter(w):i==="top"?a.revealPositionNearTop(w,S.ScrollType.Smooth):a.revealPosition(w)),b("_current_cursor",{line:p,column:f})}break}case"highlight_lines":const u=t,h=new x(u.start,1,u.end,1);y?y.clear():y=a.createDecorationsCollection();const g={range:h,options:{isWholeLine:!0,linesDecorationsClassName:"highlighted-line"}};y.set([g]);break;case"remove_highlight":y&&y.clear();break;case"readonly":const m=t===!0;a.updateOptions({readOnly:m});break;case"language":{const c=a.getModel();c&&S.setModelLanguage(c,t);break}case"theme":try{S.setTheme(t),console.log(`Applied theme: ${t}`),b("_theme",t)}catch(c){console.warn(`Failed to apply theme "${t}":`,c),S.setTheme("vs-dark"),b("_theme","vs-dark")}break;case"lsp_url":if(D&&(D.destroy(),D=null),t&&typeof t=="string"){const c=t;console.log(`Setting up LSP client with URL: ${c}`),D=new O(c)}break}}
