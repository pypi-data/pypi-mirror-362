[project]
name = "knowledge-mcp"
version = "0.4.1"
description = "A MCP server designed to bridge the gap between specialized knowledge domains and AI assistants."
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = { text = "MIT" }
authors = [
    { name = "Olaf Geibig", email = "olaf.geibig@gmail.com" },
]
keywords = ["knowledge", "mcp", "cli", "search", "fastmcp", "lightrag"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Indexing",
]

dependencies = [
    "fastmcp>=2.2.1",
    "graspologic>=3.4.1",
    "lightrag-hku[api]>=1.4.0",
    "markitdown[all,pdf]>=0.1.2",
    "mineru>=2.0.6",
    "nano-vectordb>=0.0.4.3",
    "networkx>=3.4.2",
    "openai>=1.75.0",
    "pipmaster>=0.5.4",
    "pydantic>=2.11.3",
    "pyyaml>=6.0",
    "raganything[all]>=1.0.4",
    "six>=1.16.0",
    "tenacity>=9.1.2",
    "tiktoken>=0.9.0",
]

[project.optional-dependencies]
dev = ["pytest>=7.4.0", "pip>=23.0.0"]

[project.urls]
Homepage = "https://github.com/olafgeibig/knowledge-mcp"
Repository = "https://github.com/olafgeibig/knowledge-mcp"

[project.scripts]
knowledge-mcp = "knowledge_mcp.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["knowledge_mcp"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.instructions",
    "/.kilocode",
    "/.windsurf",
    "/specs",
    "/tasks",
    "/scripts",
    "CLAUDE.md",
    "Makefile",
    "dev.py",
    ".python-version",
]

[dependency-groups]
dev = [
    "hatch>=1.14.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "twine>=6.1.0",
]

# Development scripts - not installed with the package
# Use 'make help' to see available development commands
# Or run directly:
#   make shell  - Run shell with config
#   make insp   - Run MCP inspector
#   make test   - Run pytest
#   make main   - Run CLI directly
