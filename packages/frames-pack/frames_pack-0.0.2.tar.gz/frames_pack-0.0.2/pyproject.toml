# https://learn.scientific-python.org/development/guides/packaging-simple/
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "frames_pack"
version = "0.0.2"
description = "frames pack compiler & viewer"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "district10", email = "dvorak4tzx@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "easydict",
  "fastapi",
  "fire",
  "loguru",
  "msgpack",
  "msgspec",
  "numpy",
  "pybind11-geobuf",
  "scipy",
  "tqdm",
  "uvicorn[standard]",
  "zstd",
]
[dependency-groups]
test = [
  "pytest >=6.0",
]
dev = [
  { include-group = "test" },
]

[project.optional-dependencies]
full = [
]

[project.urls]
Homepage = "https://github.com/cubao/frames-pack"

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "G004",     # Logging statement uses f-string
  "PLR09",    # Too many X
  "EM101",
  "PLR2004",  # Magic comparison
  "RUF001",   # Checks for ambiguous Unicode characters in strings
  "RUF002",   # Checks for ambiguous Unicode characters in docstrings
  "RUF003",   # Checks for ambiguous Unicode characters in comments
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
