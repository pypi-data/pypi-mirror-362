{
  "version": 3,
  "sources": ["../../geobuf/encode.js", "../../geobuf/decode.js", "../../geobuf/index.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = encode;\n\nvar keys, keysNum, keysArr, dim, e,\n    maxPrecision = 1e6;\n\nvar geometryTypes = {\n    'Point': 0,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 3,\n    'Polygon': 4,\n    'MultiPolygon': 5,\n    'GeometryCollection': 6\n};\n\nfunction encode(obj, pbf) {\n    keys = {};\n    keysArr = [];\n    keysNum = 0;\n    dim = 0;\n    e = 1;\n\n    analyze(obj);\n\n    e = Math.min(e, maxPrecision);\n    var precision = Math.ceil(Math.log(e) / Math.LN10);\n\n    for (var i = 0; i < keysArr.length; i++) pbf.writeStringField(1, keysArr[i]);\n    if (dim !== 2) pbf.writeVarintField(2, dim);\n    if (precision !== 6) pbf.writeVarintField(3, precision);\n\n    if (obj.type === 'FeatureCollection') pbf.writeMessage(4, writeFeatureCollection, obj);\n    else if (obj.type === 'Feature') pbf.writeMessage(5, writeFeature, obj);\n    else pbf.writeMessage(6, writeGeometry, obj);\n\n    keys = null;\n\n    return pbf.finish();\n}\n\nfunction analyze(obj) {\n    var i, key;\n\n    if (obj.type === 'FeatureCollection') {\n        for (i = 0; i < obj.features.length; i++) analyze(obj.features[i]);\n\n    } else if (obj.type === 'Feature') {\n        if (obj.geometry !== null) analyze(obj.geometry);\n        for (key in obj.properties) saveKey(key);\n\n    } else if (obj.type === 'Point') analyzePoint(obj.coordinates);\n    else if (obj.type === 'MultiPoint') analyzePoints(obj.coordinates);\n    else if (obj.type === 'GeometryCollection') {\n        for (i = 0; i < obj.geometries.length; i++) analyze(obj.geometries[i]);\n    }\n    else if (obj.type === 'LineString') analyzePoints(obj.coordinates);\n    else if (obj.type === 'Polygon' || obj.type === 'MultiLineString') analyzeMultiLine(obj.coordinates);\n    else if (obj.type === 'MultiPolygon') {\n        for (i = 0; i < obj.coordinates.length; i++) analyzeMultiLine(obj.coordinates[i]);\n    }\n\n    for (key in obj) {\n        if (!isSpecialKey(key, obj.type)) saveKey(key);\n    }\n}\n\nfunction analyzeMultiLine(coords) {\n    for (var i = 0; i < coords.length; i++) analyzePoints(coords[i]);\n}\n\nfunction analyzePoints(coords) {\n    for (var i = 0; i < coords.length; i++) analyzePoint(coords[i]);\n}\n\nfunction analyzePoint(point) {\n    dim = Math.max(dim, point.length);\n\n    // find max precision\n    for (var i = 0; i < point.length; i++) {\n        while (Math.round(point[i] * e) / e !== point[i] && e < maxPrecision) e *= 10;\n    }\n}\n\nfunction saveKey(key) {\n    if (keys[key] === undefined) {\n        keysArr.push(key);\n        keys[key] = keysNum++;\n    }\n}\n\nfunction writeFeatureCollection(obj, pbf) {\n    for (var i = 0; i < obj.features.length; i++) {\n        pbf.writeMessage(1, writeFeature, obj.features[i]);\n    }\n    writeProps(obj, pbf, true);\n}\n\nfunction writeFeature(feature, pbf) {\n    if (feature.geometry !== null) pbf.writeMessage(1, writeGeometry, feature.geometry);\n\n    if (feature.id !== undefined) {\n        if (typeof feature.id === 'number' && feature.id % 1 === 0) pbf.writeSVarintField(12, feature.id);\n        else pbf.writeStringField(11, feature.id);\n    }\n\n    if (feature.properties) writeProps(feature.properties, pbf);\n    writeProps(feature, pbf, true);\n}\n\nfunction writeGeometry(geom, pbf) {\n    pbf.writeVarintField(1, geometryTypes[geom.type]);\n\n    var coords = geom.coordinates;\n\n    if (geom.type === 'Point') writePoint(coords, pbf);\n    else if (geom.type === 'MultiPoint') writeLine(coords, pbf, true);\n    else if (geom.type === 'LineString') writeLine(coords, pbf);\n    else if (geom.type === 'MultiLineString') writeMultiLine(coords, pbf);\n    else if (geom.type === 'Polygon') writeMultiLine(coords, pbf, true);\n    else if (geom.type === 'MultiPolygon') writeMultiPolygon(coords, pbf);\n    else if (geom.type === 'GeometryCollection') {\n        for (var i = 0; i < geom.geometries.length; i++) pbf.writeMessage(4, writeGeometry, geom.geometries[i]);\n    }\n\n    writeProps(geom, pbf, true);\n}\n\nfunction writeProps(props, pbf, isCustom) {\n    var indexes = [],\n        valueIndex = 0;\n\n    for (var key in props) {\n        if (isCustom && isSpecialKey(key, props.type)) {\n            continue;\n        }\n        pbf.writeMessage(13, writeValue, props[key]);\n        indexes.push(keys[key]);\n        indexes.push(valueIndex++);\n    }\n    pbf.writePackedVarint(isCustom ? 15 : 14, indexes);\n}\n\nfunction writeValue(value, pbf) {\n    if (value === null) return;\n\n    var type = typeof value;\n\n    if (type === 'string') pbf.writeStringField(1, value);\n    else if (type === 'boolean') pbf.writeBooleanField(5, value);\n    else if (type === 'object') pbf.writeStringField(6, JSON.stringify(value));\n    else if (type === 'number') {\n        if (value % 1 !== 0) pbf.writeDoubleField(2, value);\n        else if (value >= 0) pbf.writeVarintField(3, value);\n        else pbf.writeVarintField(4, -value);\n    }\n}\n\nfunction writePoint(point, pbf) {\n    var coords = [];\n    for (var i = 0; i < dim; i++) coords.push(Math.round(point[i] * e));\n    pbf.writePackedSVarint(3, coords);\n}\n\nfunction writeLine(line, pbf) {\n    var coords = [];\n    populateLine(coords, line);\n    pbf.writePackedSVarint(3, coords);\n}\n\nfunction writeMultiLine(lines, pbf, closed) {\n    var len = lines.length,\n        i;\n    if (len !== 1) {\n        var lengths = [];\n        for (i = 0; i < len; i++) lengths.push(lines[i].length - (closed ? 1 : 0));\n        pbf.writePackedVarint(2, lengths);\n        // TODO faster with custom writeMessage?\n    }\n    var coords = [];\n    for (i = 0; i < len; i++) populateLine(coords, lines[i], closed);\n    pbf.writePackedSVarint(3, coords);\n}\n\nfunction writeMultiPolygon(polygons, pbf) {\n    var len = polygons.length,\n        i, j;\n    if (len !== 1 || polygons[0].length !== 1) {\n        var lengths = [len];\n        for (i = 0; i < len; i++) {\n            lengths.push(polygons[i].length);\n            for (j = 0; j < polygons[i].length; j++) lengths.push(polygons[i][j].length - 1);\n        }\n        pbf.writePackedVarint(2, lengths);\n    }\n\n    var coords = [];\n    for (i = 0; i < len; i++) {\n        for (j = 0; j < polygons[i].length; j++) populateLine(coords, polygons[i][j], true);\n    }\n    pbf.writePackedSVarint(3, coords);\n}\n\nfunction populateLine(coords, line, closed) {\n    var i, j,\n        len = line.length - (closed ? 1 : 0),\n        sum = new Array(dim);\n    for (j = 0; j < dim; j++) sum[j] = 0;\n    for (i = 0; i < len; i++) {\n        for (j = 0; j < dim; j++) {\n            var n = Math.round(line[i][j] * e) - sum[j];\n            coords.push(n);\n            sum[j] += n;\n        }\n    }\n}\n\nfunction isSpecialKey(key, type) {\n    if (key === 'type') return true;\n    else if (type === 'FeatureCollection') {\n        if (key === 'features') return true;\n    } else if (type === 'Feature') {\n        if (key === 'id' || key === 'properties' || key === 'geometry') return true;\n    } else if (type === 'GeometryCollection') {\n        if (key === 'geometries') return true;\n    } else if (key === 'coordinates') return true;\n    return false;\n}\n", "'use strict';\n\nmodule.exports = decode;\n\nvar keys, values, lengths, dim, e;\n\nvar geometryTypes = [\n    'Point', 'MultiPoint', 'LineString', 'MultiLineString',\n    'Polygon', 'MultiPolygon', 'GeometryCollection'];\n\nfunction decode(pbf) {\n    dim = 2;\n    e = Math.pow(10, 6);\n    lengths = null;\n\n    keys = [];\n    values = [];\n    var obj = pbf.readFields(readDataField, {});\n    keys = null;\n\n    return obj;\n}\n\nfunction readDataField(tag, obj, pbf) {\n    if (tag === 1) keys.push(pbf.readString());\n    else if (tag === 2) dim = pbf.readVarint();\n    else if (tag === 3) e = Math.pow(10, pbf.readVarint());\n\n    else if (tag === 4) readFeatureCollection(pbf, obj);\n    else if (tag === 5) readFeature(pbf, obj);\n    else if (tag === 6) readGeometry(pbf, obj);\n}\n\nfunction readFeatureCollection(pbf, obj) {\n    obj.type = 'FeatureCollection';\n    obj.features = [];\n    return pbf.readMessage(readFeatureCollectionField, obj);\n}\n\nfunction readFeature(pbf, feature) {\n    feature.type = 'Feature';\n    var f = pbf.readMessage(readFeatureField, feature);\n    if (!('geometry' in f)) f.geometry = null;\n    return f;\n}\n\nfunction readGeometry(pbf, geom) {\n    geom.type = 'Point';\n    return pbf.readMessage(readGeometryField, geom);\n}\n\nfunction readFeatureCollectionField(tag, obj, pbf) {\n    if (tag === 1) obj.features.push(readFeature(pbf, {}));\n\n    else if (tag === 13) values.push(readValue(pbf));\n    else if (tag === 15) readProps(pbf, obj);\n}\n\nfunction readFeatureField(tag, feature, pbf) {\n    if (tag === 1) feature.geometry = readGeometry(pbf, {});\n\n    else if (tag === 11) feature.id = pbf.readString();\n    else if (tag === 12) feature.id = pbf.readSVarint();\n\n    else if (tag === 13) values.push(readValue(pbf));\n    else if (tag === 14) feature.properties = readProps(pbf, {});\n    else if (tag === 15) readProps(pbf, feature);\n}\n\nfunction readGeometryField(tag, geom, pbf) {\n    if (tag === 1) geom.type = geometryTypes[pbf.readVarint()];\n\n    else if (tag === 2) lengths = pbf.readPackedVarint();\n    else if (tag === 3) readCoords(geom, pbf, geom.type);\n    else if (tag === 4) {\n        geom.geometries = geom.geometries || [];\n        geom.geometries.push(readGeometry(pbf, {}));\n    }\n    else if (tag === 13) values.push(readValue(pbf));\n    else if (tag === 15) readProps(pbf, geom);\n}\n\nfunction readCoords(geom, pbf, type) {\n    if (type === 'Point') geom.coordinates = readPoint(pbf);\n    else if (type === 'MultiPoint') geom.coordinates = readLine(pbf, true);\n    else if (type === 'LineString') geom.coordinates = readLine(pbf);\n    else if (type === 'MultiLineString') geom.coordinates = readMultiLine(pbf);\n    else if (type === 'Polygon') geom.coordinates = readMultiLine(pbf, true);\n    else if (type === 'MultiPolygon') geom.coordinates = readMultiPolygon(pbf);\n}\n\nfunction readValue(pbf) {\n    var end = pbf.readVarint() + pbf.pos,\n        value = null;\n\n    while (pbf.pos < end) {\n        var val = pbf.readVarint(),\n            tag = val >> 3;\n\n        if (tag === 1) value = pbf.readString();\n        else if (tag === 2) value = pbf.readDouble();\n        else if (tag === 3) value = pbf.readVarint();\n        else if (tag === 4) value = -pbf.readVarint();\n        else if (tag === 5) value = pbf.readBoolean();\n        else if (tag === 6) value = JSON.parse(pbf.readString());\n    }\n    return value;\n}\n\nfunction readProps(pbf, props) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) props[keys[pbf.readVarint()]] = values[pbf.readVarint()];\n    values = [];\n    return props;\n}\n\nfunction readPoint(pbf) {\n    var end = pbf.readVarint() + pbf.pos,\n        coords = [];\n    while (pbf.pos < end) coords.push(pbf.readSVarint() / e);\n    return coords;\n}\n\nfunction readLinePart(pbf, end, len, closed) {\n    var i = 0,\n        coords = [],\n        p, d;\n\n    var prevP = [];\n    for (d = 0; d < dim; d++) prevP[d] = 0;\n\n    while (len ? i < len : pbf.pos < end) {\n        p = [];\n        for (d = 0; d < dim; d++) {\n            prevP[d] += pbf.readSVarint();\n            p[d] = prevP[d] / e;\n        }\n        coords.push(p);\n        i++;\n    }\n    if (closed) coords.push(coords[0]);\n\n    return coords;\n}\n\nfunction readLine(pbf) {\n    return readLinePart(pbf, pbf.readVarint() + pbf.pos);\n}\n\nfunction readMultiLine(pbf, closed) {\n    var end = pbf.readVarint() + pbf.pos;\n    if (!lengths) return [readLinePart(pbf, end, null, closed)];\n\n    var coords = [];\n    for (var i = 0; i < lengths.length; i++) coords.push(readLinePart(pbf, end, lengths[i], closed));\n    lengths = null;\n    return coords;\n}\n\nfunction readMultiPolygon(pbf) {\n    var end = pbf.readVarint() + pbf.pos;\n    if (!lengths) return [[readLinePart(pbf, end, null, true)]];\n\n    var coords = [];\n    var j = 1;\n    for (var i = 0; i < lengths[0]; i++) {\n        var rings = [];\n        for (var k = 0; k < lengths[j]; k++) rings.push(readLinePart(pbf, end, lengths[j + 1 + k], true));\n        j += lengths[j] + 1;\n        coords.push(rings);\n    }\n    lengths = null;\n    return coords;\n}\n", "'use strict';\n\nexports.encode = require('./encode');\nexports.decode = require('./decode');\n"],
  "mappings": "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",
  "names": []
}
