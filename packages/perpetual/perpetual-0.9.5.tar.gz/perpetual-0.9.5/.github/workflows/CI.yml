name: Test and Deploy
on: [pull_request]

jobs:
  windows-build-test:
    strategy:
      matrix:
        pyversion: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Install latests stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyversion }}
          architecture: x64
      - name: Install deps
        run: pip install numpy pandas seaborn scikit-learn toml
      - run: |
          cp README.md python-package/README.md
          cp LICENSE python-package/LICENSE
      - name: Build test data
        run: |
          cd python-package
          python -m pip install -e .[dev]
          cd ..
          python scripts/make_resources.py
      - name: Build wheels with maturin
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          command: build
          args: --release --strip --interpreter python --manifest-path python-package/Cargo.toml --out dist --sdist
      - name: Install wheel
        run: pip install perpetual --no-index --find-links dist --no-deps --force-reinstall
      - name: Run Package Tests
        run: |
          pip install pytest pytest-cov black ruff setuptools --upgrade
          cd python-package
          ruff check .
          black --check .
          pytest --cov-fail-under=90 tests
          cd ..
      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows-${{ matrix.pyversion }}
          path: dist

  macos-build-test:
    strategy:
      matrix:
        pyversion: ["3.11", "3.12", "3.13"]
        os: [macos-latest, macos-latest-large]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install latest stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Install deps
        run: pip install numpy pandas seaborn scikit-learn toml
      - run: |
          cp README.md python-package/README.md
          cp LICENSE python-package/LICENSE
      - name: Build test data
        run: |
          cd python-package
          python -m pip install -e .[dev]
          cd ..
          python scripts/make_resources.py
      - name: Build wheels with maturin
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --strip --interpreter python --manifest-path python-package/Cargo.toml --out dist --sdist
      - name: Install wheel
        run: pip install perpetual --no-index --find-links dist --no-deps --force-reinstall
      - name: Run Package Tests
        run: |
          pip install pytest pytest-cov black ruff setuptools --upgrade
          cd python-package
          ruff check .
          black --check .
          pytest --cov-fail-under=90 tests
          cd ..
      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.pyversion }}
          path: dist

  linux-build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyversion: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Install latests stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyversion }}
          architecture: x64
      - name: Install deps
        run: pip install numpy pandas seaborn scikit-learn toml
      - run: |
          cp README.md python-package/README.md
          cp LICENSE python-package/LICENSE
      - name: Build test data
        run: |
          cd python-package
          python -m pip install -e .[dev]
          cd ..
          python scripts/make_resources.py
      - name: Build wheels with maturin
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          manylinux: auto
          command: build
          args: --release --strip --interpreter python${{ matrix.pyversion }} --manifest-path python-package/Cargo.toml --out dist --sdist
      - name: Install wheel
        run: pip install perpetual --no-index --find-links dist --no-deps --force-reinstall
      - name: Run Package Tests
        run: |
          pip install pytest pytest-cov black ruff setuptools --upgrade
          cd python-package
          ruff check .
          black --check .
          pytest --cov-fail-under=90 tests
          cd ..
      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-linux-${{ matrix.pyversion }}
          path: dist

  linux-arm-build-test:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        pyversion: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Install latests stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyversion }}
          architecture: arm64
      - name: Install deps
        run: pip install numpy pandas seaborn scikit-learn toml
      - run: |
          cp README.md python-package/README.md
          cp LICENSE python-package/LICENSE
      - name: Build test data
        run: |
          cd python-package
          python -m pip install -e .[dev]
          cd ..
          python scripts/make_resources.py
      - name: Build wheels with maturin
        uses: PyO3/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release --strip --interpreter python${{ matrix.pyversion }} --manifest-path python-package/Cargo.toml --out dist --sdist
      - name: Install wheel
        run: pip install perpetual --no-index --find-links dist --no-deps --force-reinstall
      - name: Run Package Tests
        run: |
          pip install pytest pytest-cov black ruff setuptools --upgrade
          cd python-package
          ruff check .
          black --check .
          pytest --cov-fail-under=90 tests
          cd ..
      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-linux-arm-${{ matrix.pyversion }}
          path: dist

  cargo-build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: x64
      - name: Install deps
        run: pip install numpy pandas seaborn scikit-learn toml
      - run: |
          cp README.md python-package/README.md
          cp LICENSE python-package/LICENSE
      - name: Build test data
        run: |
          cd python-package
          python -m pip install -e .[dev]
          cd ..
          python scripts/make_resources.py
      - name: Run tests
        run: cargo test --verbose
