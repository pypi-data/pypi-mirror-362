# coding: utf-8

"""
    API Docs

    API Documentation to interact with

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odin_sdk.models.get_chat_analytics_response import GetChatAnalyticsResponse

class TestGetChatAnalyticsResponse(unittest.TestCase):
    """GetChatAnalyticsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetChatAnalyticsResponse:
        """Test GetChatAnalyticsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetChatAnalyticsResponse`
        """
        model = GetChatAnalyticsResponse()
        if include_optional:
            return GetChatAnalyticsResponse(
                metrics = odin_sdk.models.get_chat_analytics_response_metrics.GetChatAnalyticsResponseMetrics(
                    average_response_time = 1.337, 
                    average_queries_per_chat = 1.337, 
                    average_query_token_count = 1.337, 
                    average_response_token_count = 1.337, 
                    total_upvotes = 56, 
                    total_downvotes = 56, 
                    total_messages = 56, 
                    average_images_generated = 56, 
                    total_document_usage = 56, 
                    total_kb_search = 56, 
                    total_images_generated = 56, 
                    top_keywords = [
                        null
                        ], 
                    top_questions = [
                        null
                        ], 
                    regenerated_requests = 56, 
                    users_message_counts = odin_sdk.models.users_message_counts.Users Message Counts(), 
                    top_documents = [
                        odin_sdk.models.document_analytic.DocumentAnalytic(
                            url = '', 
                            count = 56, 
                            size = 56, 
                            word_count = 56, 
                            resource_type = '', )
                        ], ),
                time_series = [
                    odin_sdk.models.daily_query_and_feedback_count.DailyQueryAndFeedbackCount(
                        day = 56, 
                        month = 56, 
                        year = 56, 
                        query_count = 56, 
                        upvoted_count = 56, 
                        downvoted_count = 56, 
                        feedbacks_stats = odin_sdk.models.daily_feedback_stat.DailyFeedbackStat(
                            correct_answer_option_count = 56, 
                            incorrect_answer_option_count = 56, 
                            incorrect_source_url_option_count = 56, ), )
                    ],
                nlp_metrics = odin_sdk.models.get_chat_analytics_response_nlp_metrics.GetChatAnalyticsResponseNLPMetrics(
                    overall_keywords = [
                        odin_sdk.models.keyword.Keyword(
                            word = '', 
                            score = 1.337, )
                        ], 
                    upvoted_keywords = [
                        odin_sdk.models.keyword.Keyword(
                            word = '', 
                            score = 1.337, )
                        ], 
                    downvoted_keywords = [
                        
                        ], ),
                categories = [
                    odin_sdk.models.category.Category(
                        category = '', 
                        keywords = [
                            odin_sdk.models.keyword.Keyword(
                                word = '', 
                                score = 1.337, )
                            ], 
                        common_questions = [
                            ''
                            ], )
                    ]
            )
        else:
            return GetChatAnalyticsResponse(
                metrics = odin_sdk.models.get_chat_analytics_response_metrics.GetChatAnalyticsResponseMetrics(
                    average_response_time = 1.337, 
                    average_queries_per_chat = 1.337, 
                    average_query_token_count = 1.337, 
                    average_response_token_count = 1.337, 
                    total_upvotes = 56, 
                    total_downvotes = 56, 
                    total_messages = 56, 
                    average_images_generated = 56, 
                    total_document_usage = 56, 
                    total_kb_search = 56, 
                    total_images_generated = 56, 
                    top_keywords = [
                        null
                        ], 
                    top_questions = [
                        null
                        ], 
                    regenerated_requests = 56, 
                    users_message_counts = odin_sdk.models.users_message_counts.Users Message Counts(), 
                    top_documents = [
                        odin_sdk.models.document_analytic.DocumentAnalytic(
                            url = '', 
                            count = 56, 
                            size = 56, 
                            word_count = 56, 
                            resource_type = '', )
                        ], ),
                time_series = [
                    odin_sdk.models.daily_query_and_feedback_count.DailyQueryAndFeedbackCount(
                        day = 56, 
                        month = 56, 
                        year = 56, 
                        query_count = 56, 
                        upvoted_count = 56, 
                        downvoted_count = 56, 
                        feedbacks_stats = odin_sdk.models.daily_feedback_stat.DailyFeedbackStat(
                            correct_answer_option_count = 56, 
                            incorrect_answer_option_count = 56, 
                            incorrect_source_url_option_count = 56, ), )
                    ],
                nlp_metrics = odin_sdk.models.get_chat_analytics_response_nlp_metrics.GetChatAnalyticsResponseNLPMetrics(
                    overall_keywords = [
                        odin_sdk.models.keyword.Keyword(
                            word = '', 
                            score = 1.337, )
                        ], 
                    upvoted_keywords = [
                        odin_sdk.models.keyword.Keyword(
                            word = '', 
                            score = 1.337, )
                        ], 
                    downvoted_keywords = [
                        
                        ], ),
                categories = [
                    odin_sdk.models.category.Category(
                        category = '', 
                        keywords = [
                            odin_sdk.models.keyword.Keyword(
                                word = '', 
                                score = 1.337, )
                            ], 
                        common_questions = [
                            ''
                            ], )
                    ],
        )
        """

    def testGetChatAnalyticsResponse(self):
        """Test GetChatAnalyticsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
