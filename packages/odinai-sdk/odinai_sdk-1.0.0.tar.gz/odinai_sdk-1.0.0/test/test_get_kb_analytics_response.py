# coding: utf-8

"""
    API Docs

    API Documentation to interact with

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odin_sdk.models.get_kb_analytics_response import GetKbAnalyticsResponse

class TestGetKbAnalyticsResponse(unittest.TestCase):
    """GetKbAnalyticsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetKbAnalyticsResponse:
        """Test GetKbAnalyticsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetKbAnalyticsResponse`
        """
        model = GetKbAnalyticsResponse()
        if include_optional:
            return GetKbAnalyticsResponse(
                doc_type_count = [
                    odin_sdk.models.doc_type_count.DocTypeCount(
                        doc_type = '', 
                        count = 56, )
                    ],
                average_word_count_per_doc = 1.337,
                words_and_docs_added_per_day = [
                    odin_sdk.models.daily_words_docs_added.DailyWordsDocsAdded(
                        day = 56, 
                        month = 56, 
                        year = 56, 
                        words_added = 56, 
                        docs_added = 56, )
                    ],
                categories = [
                    odin_sdk.models.kb_category.KBCategory(
                        category = '', 
                        keywords = [
                            odin_sdk.models.keyword.Keyword(
                                word = '', 
                                score = 1.337, )
                            ], )
                    ],
                sources_info = [
                    odin_sdk.models.source_info.SourceInfo(
                        source = '', 
                        usage_percentage = 1.337, 
                        faqs = [
                            ''
                            ], )
                    ]
            )
        else:
            return GetKbAnalyticsResponse(
                doc_type_count = [
                    odin_sdk.models.doc_type_count.DocTypeCount(
                        doc_type = '', 
                        count = 56, )
                    ],
                average_word_count_per_doc = 1.337,
                words_and_docs_added_per_day = [
                    odin_sdk.models.daily_words_docs_added.DailyWordsDocsAdded(
                        day = 56, 
                        month = 56, 
                        year = 56, 
                        words_added = 56, 
                        docs_added = 56, )
                    ],
                categories = [
                    odin_sdk.models.kb_category.KBCategory(
                        category = '', 
                        keywords = [
                            odin_sdk.models.keyword.Keyword(
                                word = '', 
                                score = 1.337, )
                            ], )
                    ],
                sources_info = [
                    odin_sdk.models.source_info.SourceInfo(
                        source = '', 
                        usage_percentage = 1.337, 
                        faqs = [
                            ''
                            ], )
                    ],
        )
        """

    def testGetKbAnalyticsResponse(self):
        """Test GetKbAnalyticsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
