# coding: utf-8

"""
    API Docs

    API Documentation to interact with

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odin_sdk.models.meeting_data import MeetingData

class TestMeetingData(unittest.TestCase):
    """MeetingData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeetingData:
        """Test MeetingData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeetingData`
        """
        model = MeetingData()
        if include_optional:
            return MeetingData(
                audio_size = 1.337,
                credits_used = 56,
                odin_attendees = [
                    null
                    ],
                is_calendar_meeting = True,
                meeting_url = odin_sdk.models.meeting_url.meeting_url(),
                media_retention_end = '',
                attendee_emails = [
                    ''
                    ],
                status_code = '',
                video_url = '',
                meeting_info = odin_sdk.models.meeting_info.MeetingInfo(
                    title = '', 
                    ical_uid = '', 
                    is_recurring = True, 
                    visibility = '', 
                    webex_invite = '', 
                    override_should_record = True, 
                    end_time = '', 
                    id = '', 
                    meeting_platform = '', 
                    calendar_platform = '', 
                    is_hosted_by_me = True, 
                    attendees_emails = [
                        ''
                        ], 
                    attendees = [
                        odin_sdk.models.attendee.Attendee(
                            name = '', 
                            email = '', 
                            is_organizer = True, 
                            status = '', )
                        ], 
                    organizer_email = '', 
                    teams_invite = '', 
                    bot_id = '', 
                    platform = '', 
                    meet_invite = odin_sdk.models.meet_invite.Meet Invite(), 
                    is_external = True, 
                    zoom_invite = '', 
                    will_record_reason = '', 
                    will_record = True, 
                    start_time = '', ),
                join_at = '',
                video_size = 1.337,
                calendar_meetings = [
                    None
                    ],
                timestamp = 1.337,
                meeting_participants = [
                    null
                    ],
                recording = '',
                meeting_duration = 1.337,
                meeting_metadata = '',
                status_changes = [
                    odin_sdk.models.status_change.StatusChange(
                        sub_code = '', 
                        created_at = '', 
                        code = '', 
                        message = '', )
                    ],
                id = ''
            )
        else:
            return MeetingData(
                audio_size = 1.337,
                credits_used = 56,
                is_calendar_meeting = True,
                attendee_emails = [
                    ''
                    ],
                status_code = '',
                video_url = '',
                meeting_info = odin_sdk.models.meeting_info.MeetingInfo(
                    title = '', 
                    ical_uid = '', 
                    is_recurring = True, 
                    visibility = '', 
                    webex_invite = '', 
                    override_should_record = True, 
                    end_time = '', 
                    id = '', 
                    meeting_platform = '', 
                    calendar_platform = '', 
                    is_hosted_by_me = True, 
                    attendees_emails = [
                        ''
                        ], 
                    attendees = [
                        odin_sdk.models.attendee.Attendee(
                            name = '', 
                            email = '', 
                            is_organizer = True, 
                            status = '', )
                        ], 
                    organizer_email = '', 
                    teams_invite = '', 
                    bot_id = '', 
                    platform = '', 
                    meet_invite = odin_sdk.models.meet_invite.Meet Invite(), 
                    is_external = True, 
                    zoom_invite = '', 
                    will_record_reason = '', 
                    will_record = True, 
                    start_time = '', ),
                video_size = 1.337,
                calendar_meetings = [
                    None
                    ],
                timestamp = 1.337,
                meeting_participants = [
                    null
                    ],
                meeting_duration = 1.337,
                status_changes = [
                    odin_sdk.models.status_change.StatusChange(
                        sub_code = '', 
                        created_at = '', 
                        code = '', 
                        message = '', )
                    ],
                id = '',
        )
        """

    def testMeetingData(self):
        """Test MeetingData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
