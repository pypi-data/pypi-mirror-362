name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.1, v1.0.2, etc.
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # Required for creating GitHub releases
  id-token: write  # Required for PyPI trusted publishing

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run tests
      run: |
        uv run python tests/test_validation.py
        uv run python -m pytest tests/ -v --timeout=300 --tb=short
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      timeout-minutes: 15
    
    - name: Run linting
      run: |
        uvx ruff check claude_code_adk_validator/
        uvx mypy claude_code_adk_validator/
        uvx black --check claude_code_adk_validator/

  publish:
    needs: test
    runs-on: ubuntu-latest
    environment: release  # Protect with environment approval if desired
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: uv sync
    
    - name: Build package
      run: uv build
    
    - name: Publish to PyPI (Token Auth)
      run: uv publish
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        UV_PUBLISH_URL: https://upload.pypi.org/legacy/
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}