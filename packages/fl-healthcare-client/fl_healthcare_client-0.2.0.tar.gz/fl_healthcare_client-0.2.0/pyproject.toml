[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fl-healthcare-client"
version = "0.2.0"
description = "A self-contained CLI tool for federated learning with healthcare data - works out of the box without external service setup"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Znaxh", email = "znaxh@gmail.com"}
]
maintainers = [
    {name = "Znaxh", email = "znaxh@gmail.com"}
]
keywords = ["federated-learning", "machine-learning", "healthcare", "cli", "privacy"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "typer>=0.9.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "rich>=13.0.0",
    "requests>=2.28.0",
    "numpy>=1.24.0",
    "joblib>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
external-services = [
    "supabase>=2.0.0",
    "firebase-admin>=6.0.0",
    "python-dotenv>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/federated-learning-client"
Documentation = "https://github.com/yourusername/federated-learning-client#readme"
Repository = "https://github.com/yourusername/federated-learning-client"
"Bug Tracker" = "https://github.com/yourusername/federated-learning-client/issues"

[project.scripts]
fl-client = "fl_client.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
fl_client = ["data/*.csv", "config/*.json"]
