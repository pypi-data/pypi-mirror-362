# coding: utf-8

"""
    Open Agent API

    An API for creating and interacting with AI agents, including chat completions, autonomous agents with tool usage, multi-agent teams, knowledge base search, and optional billing integration. Clients can authenticate via magic link or OAuth2 to obtain a token, or use API keys. 

    The version of the OpenAPI document: 0.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from open_agent_api.models.account_subscription_info import AccountSubscriptionInfo

class TestAccountSubscriptionInfo(unittest.TestCase):
    """AccountSubscriptionInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountSubscriptionInfo:
        """Test AccountSubscriptionInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountSubscriptionInfo`
        """
        model = AccountSubscriptionInfo()
        if include_optional:
            return AccountSubscriptionInfo(
                id = '',
                user_id = '',
                plan_id = '',
                status = 'trialing',
                stripe_customer_id = '',
                stripe_subscription_id = '',
                current_period_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                current_period_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                balance = 56,
                usage_quota = open_agent_api.models.usage_quota.Usage Quota(),
                payment_method_id = '',
                cancel_at_period_end = True,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AccountSubscriptionInfo(
                id = '',
                user_id = '',
                status = 'trialing',
        )
        """

    def testAccountSubscriptionInfo(self):
        """Test AccountSubscriptionInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
