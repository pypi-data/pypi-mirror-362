name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Lint and format with ruff
      run: |
        uv run ruff check mchextract tests
        uv run ruff format --check mchextract tests
    
    - name: Type check with mypy
      run: |
        uv run mypy mchextract
    
    - name: Test with pytest
      run: |
        uv run pytest tests/ --cov=mchextract --cov-report=xml --cov-report=term

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: "3.10"
    
    - name: Security scan with bandit
      run: |
        uv run --with bandit -- bandit -r mchextract/ -f json -o bandit-report.json || true
        uv run --with bandit -- bandit -r mchextract/

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: "3.10"
    
    - name: Build package
      run: |
        uv build
    
    - name: Check package
      run: |
        uv run --with twine -- twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 7
