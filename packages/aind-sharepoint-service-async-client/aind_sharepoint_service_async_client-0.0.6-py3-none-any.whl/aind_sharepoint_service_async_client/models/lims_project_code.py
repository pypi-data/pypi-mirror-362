# coding: utf-8

"""
    aind-sharepoint-service

     ## aind-sharepoint-service  Service to pull data from Sharepoint.  

    The version of the OpenAPI document: 0.0.6
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class LimsProjectCode(str, Enum):
    """
    Enum class for LimsProjectCode
    """

    """
    allowed enum values
    """
    AIND_MINUS_DISCOVERY = 'aind-discovery'
    AIND_MINUS_EPHYS = 'aind-ephys'
    AIND_MINUS_MSMA = 'aind-msma'
    AIND_MINUS_OPHYS = 'aind-ophys'
    BRAINTVVIRALSTRATEGIES = 'BraintvViralStrategies'
    CELLTYPESTRANSGENICCHARACTERIZATIONGCAMP = 'CelltypesTransgenicCharacterizationGCaMP'
    CITRICACIDPILOT = 'Citricacidpilot'
    DYNAMICROUTINGBEHAVIORDEV = 'DynamicRoutingBehaviorDev'
    DYNAMICROUTINGSURGICALDEVELOPMENT = 'DynamicRoutingSurgicalDevelopment'
    DYNAMICROUTINGTASK1PRODUCTION = 'DynamicRoutingTask1Production'
    DYNAMICROUTINGULTRAOPTOTAGGINGBEHAVIOR = 'DynamicRoutingUltraOptotaggingBehavior'
    ISIX = 'ISIx'
    LEARNINGMFISHDEVELOPMENT = 'LearningmFISHDevelopment'
    LEARNINGMFISHTASK1A = 'LearningmFISHTask1A'
    MINDSCOPETRANSGENICCHARACTERIZATIONGCAMP = 'MindscopeTransgenicCharacterizationGCaMP'
    MOUSEBRAINCELLATLASTRANSSYNAPTIC = 'MouseBrainCellAtlasTranssynaptic'
    MOUSEGENETICTOOLSPROJECTIONMAPPING = 'MouseGeneticToolsProjectionMapping'
    M_IVSCC_MINUS_MET = 'mIVSCC-MET'
    M_IVSCC_MINUS_METX = 'mIVSCC-METx'
    MMPATCHX = 'mMPATCHx'
    MMPATCH = 'mMPatch'
    OMFISHROBINJECTIONVIRUSPILOT = 'omFISHROBinjectionviruspilot'
    OMFISHCUX2MESO = 'omFISHCux2Meso'
    OMFISHGAD2MESO = 'omFISHGad2Meso'
    OMFISHGAD2PILOT = 'omFISHGad2Pilot'
    OMFISHRORBPILOT = 'omFISHRorbPilot'
    OMFISHCOREGISTRATIONPILOT = 'omFISHcoregistrationpilot'
    OPENSCOPEDEVELOPMENT = 'OpenscopeDevelopment'
    OPENSCOPEDENDRITECOUPLING = 'OpenScopeDendriteCoupling'
    OPENSCOPEGLOBALLOCALODDBALL = 'OpenScopeGlobalLocalOddball'
    OPENSCOPEILLUSION = 'OpenScopeIllusion'
    OPENSCOPEINJECTIONPILOT = 'OpenScopeInjectionPilot'
    SELECT_DOT_DOT_DOT = 'Select...'
    SURGERYX = 'SurgeryX'
    T301T = 'T301t'
    TASKTRAINEDNETWORKSMULTISCOPE = 'TaskTrainedNetworksMultiscope'
    TASKTRAINEDNETWORKSNEUROPIXEL = 'TaskTrainedNetworksNeuropixel'
    TINYBLUEDOTBEHAVIOR = 'TinyBlueDotBehavior'
    VARIABILITYAIM1 = 'VariabilityAim1'
    VARIABILITYAIM1PILOT = 'VariabilityAim1Pilot'
    VARIABILITYSPONTANEOUS = 'VariabilitySpontaneous'
    VIPAXONALV1PHASE1 = 'VipAxonalV1Phase1'
    VIPSOMATICV1MESO = 'VIPSomaticV1Meso'
    VIPSOMATICV1PHASE1 = 'VipSomaticV1Phase1'
    VIPSOMATICV1PHASE2 = 'VipSomaticV1Phase2'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of LimsProjectCode from a JSON string"""
        return cls(json.loads(json_str))


