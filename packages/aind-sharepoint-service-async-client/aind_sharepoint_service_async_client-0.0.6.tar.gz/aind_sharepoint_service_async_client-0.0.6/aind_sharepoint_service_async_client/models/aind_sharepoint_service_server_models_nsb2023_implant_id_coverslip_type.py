# coding: utf-8

"""
    aind-sharepoint-service

     ## aind-sharepoint-service  Service to pull data from Sharepoint.  

    The version of the OpenAPI document: 0.0.6
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class AindSharepointServiceServerModelsNsb2023ImplantIdCoverslipType(str, Enum):
    """
    Enum class for Implant ID/Coverslip type.
    """

    """
    allowed enum values
    """
    SELECT_DOT_DOT_DOT = 'Select...'
    ENUM_2002 = '2002'
    ENUM_2005 = '2005'
    ENUM_2006 = '2006'
    ENUM_2011 = '2011'
    ENUM_2013 = '2013'
    ENUM_2014 = '2014'
    ENUM_2015 = '2015'
    ENUM_3003 = '3003'
    ENUM_3004 = '3004'
    ENUM_3004_LEFT_PARENTHESIS_25_PERCENT__PURALUBE_SLASH_SYSTANE_RIGHT_PARENTHESIS = '3004 (25% puralube/systane)'
    ENUM_3005 = '3005'
    ENUM_3006 = '3006'
    ENUM_3007 = '3007'
    ENUM_3008 = '3008'
    WHC_2_P_CURVED_GLASS_LEFT_PARENTHESIS_WITH_WINDOW_FRAME_RIGHT_PARENTHESIS = 'WHC 2P curved glass (with window frame)'
    ENUM_3MM_STACKED_COVERSLIP = '3mm stacked coverslip'
    ENUM_5MM_STACKED_COVERSLIP = '5mm stacked coverslip'
    ENUM_5MM_STACKED_COVERSLIP_LEFT_PARENTHESIS_WITH_SILICONE_COATING_FOR_NEUROPIXEL_RIGHT_PARENTHESIS = '5mm stacked coverslip (with silicone coating for Neuropixel)'
    ENUM_2001 = '2001'
    ENUM_2004 = '2004'
    ENUM_2010 = '2010'
    ENUM_3001 = '3001'
    ENUM_3004_LEFT_PARENTHESIS_25_PERCENT__PURALUBE_SLASH_SYSTANE_RIGHT_PARENTHESIS = '3004 (25% puralube/systane)'
    ENUM_2007 = '2007'
    ENUM_2008 = '2008'
    ENUM_2009 = '2009'
    ENUM_3002 = '3002'
    ENUM_3002_LEFT_PARENTHESIS_25_PERCENT__PURALUBE_SLASH_SYSTANE_RIGHT_PARENTHESIS = '3002 (25% puralube/systane)'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of AindSharepointServiceServerModelsNsb2023ImplantIdCoverslipType from a JSON string"""
        return cls(json.loads(json_str))


