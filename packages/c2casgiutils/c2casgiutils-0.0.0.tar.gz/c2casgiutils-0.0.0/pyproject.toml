[tool.ruff]
target-version = "py310"
line-length = 110

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poetry]
version = "0.0.0"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
fastapi = {extras = ["standard"], version = "0.115.14", optional=true}
pydantic-settings = "2.10.1"
aiofile = "3.9.0"
prometheus-client = "0.22.1"
prometheus-fastapi-instrumentator = {version="7.1.0", optional=true}
redis = "6.2.0"
aiohttp = "3.12.14"
pyjwt = "2.10.1"
sqlalchemy = { version = "2.0.41", optional = true }
alembic = { version = "1.16.2", optional = true }
sentry-sdk = {version = "2.32.0", extras = ["fastapi"], optional = true}

[tool.poetry.extras]
fastapi = ["fastapi"]
sqlalchemy = ["sqlalchemy"]
alembic = ["alembic", "sqlalchemy"]
all = ["fastapi", "sqlalchemy", "alembic"]

[tool.poetry.group.dev.dependencies]
prospector = { version = "1.17.2", extras = ["with_bandit", "with_mypy", "with_pyroma", "with_ruff"] }
prospector-profile-duplicated = "1.10.5"
prospector-profile-utils = "1.25.0"
pytest-asyncio = "1.0.0"
pytest = "8.4.1"
types-pyyaml = "6.0.12.20250516"
types-requests = "2.32.4.20250611"
types-aiofiles = "24.1.0.20250708"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[project]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Plugins',
    'Framework :: Pyramid',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Topic :: Internet :: WWW/HTTP :: WSGI :: Application',
    'Typing :: Typed',
]
dynamic = ["dependencies", "version"]
name = "c2casgiutils"
description = "Common utilities for Camptocamp ASGI applications"
readme = "README.md"
keywords = ["sqlalchemy", "asgi", "fastapi"]
license = "BSD-2-Clause"
authors = [{name = "Camptocamp",email = "info@camptocamp.com"}]
packages = [{ include = "c2casgiutils" }]
include = [
  "c2casgiutils/py.typed",
  "c2casgiutils/tools/static/*",
  "c2casgiutils/tools/templates/*",
]
requires-python = ">=3.10"
dependencies = ["pydantic-settings", "aiofile", "prometheus-client", "prometheus-fastapi-instrumentator", "redis", "aiohttp", "pyjwt", "aiofiles<25.0.0,>=24.1.0", "sentry-sdk[fastapi]"]

[project.urls]
repository = "https://github.com/camptocamp/c2casgiutils"
"Bug Tracker" = "https://github.com/camptocamp/c2casgiutils/issues"

[project.scripts]
c2casgiutils-genversion = "c2casgiutils.scripts.genversion:main"

[project.optional-dependencies]
fastapi = ["fastapi[standard]"]
sqlalchemy = ["sqlalchemy"]
alembic = ["alembic", "sqlalchemy"]
prometheus = ["prometheus-fastapi-instrumentator"]
sentry = ["sentry-sdk[fastapi]"]
all = ["fastapi[standard]", "alembic", "sqlalchemy", "prometheus-fastapi-instrumentator", "sentry-sdk[fastapi]"]

[build-system]
requires = [
  "poetry-core==2.1.3",
  "poetry-dynamic-versioning[plugin]==1.8.2",
  "poetry-plugin-tweak-dependencies-version==1.5.2",
  "poetry-plugin-drop-python-upper-constraint==1.0.0",
]
build-backend = "poetry.core.masonry.api"
