[project]
name = "ddeutil-io"
description = "Input/Output transport objects"
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "MIT"}
authors = [{ name = "ddeutils", email = "korawich.anu@gmail.com" }]
keywords = [ 'io', 'utility' ]
classifiers = [
    "Topic :: Utilities",
    "Natural Language :: English",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9.13"
dependencies = [
    "ddeutil>=0.4.7",
    "tzdata>=2025.2",
]
dynamic = [ "version" ]

[project.optional-dependencies]
test = [
    "ddeutil-io[all]",
    "typing-extensions",
]
all = [
    "msgpack>=1.1.0",
    "pyyaml>=6.0.2",
    "rtoml>=0.12.0",
    "fmtutil==1.0.15",
    "deepdiff>=8.5.0",
    "python-dateutil>=2.9.0.post0",
    "types-python-dateutil>=2.9.0.20250516",
]
register = [
    "fmtutil==1.0.15",
    "deepdiff>=8.5.0",
    "python-dateutil>=2.9.0.post0",
    "types-python-dateutil>=2.9.0.20250516",
]
yaml = [ "pyyaml>=6.0.2" ]
toml = [ "rtoml>=0.12.0" ]
msgpack = [ "msgpack>=1.1.0" ]

[project.urls]
Homepage = "https://github.com/korawica/ddeutil-io/"
"Source Code" = "https://github.com/korawica/ddeutil-io/"

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "ddeutil.io.__about__.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.shelf.version]
version = "./src/ddeutil/io/__about__.py"
changelog = "CHANGELOG.md"
commit_msg_format = "- {subject}"

[tool.shelf.git]
commit_prefix_force_fix = true

[tool.coverage.run]
branch = true
concurrency = ["thread", "multiprocessing"]
source = ["ddeutil.io"]
omit = [
    "scripts/",
    "src/ddeutil/io/__about__.py",
    "src/ddeutil/io/models/examples/",
]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError",
    "raise AssertionError",
    "pragma: no cov",
    "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
console_output_style = "count"
addopts = [
    "--strict-config",
    "--strict-markers",
]
filterwarnings = [
    "error",
]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)-7s] %(message)-120s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y%m%d %H:%M:%S"

[tool.mypy]
python_version = "3.9"
files = ["ddeutil"]
show_error_codes = true
pretty = true
strict = true
local_partial_types = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "ddeutil.io"
warn_unused_ignores = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.black]
line-length = 80
preview = true
target-version = ['py39']
exclude = """
/(
    \\.git
    | \\.__pycache__
    | \\.idea
    | \\.ruff_cache
    | \\.mypy_cache
    | \\.pytest_cache
    | \\.venv
    | _build
    | buck-out
    | build
    | dist
)/
"""

[tool.ruff]
line-length = 80
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
