# coding: utf-8

"""
    Robust Intelligence Firewall REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` header. Your AI Firewall Agent domain forms the base of the URL for REST API calls. To find the Agent domain in the Robust Intelligence UI, click AI Firewall: Settings icon: Firewall Settings. Find your agent in the Firewall Agent Status: Agents Setup page, and copy its URL from the table.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501
import warnings
from datetime import datetime
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Any, Dict, Optional
from typing_extensions import Annotated
from ri.fwclient.models.create_firewall_instance_request import CreateFirewallInstanceRequest
from ri.fwclient.models.create_firewall_instance_response import CreateFirewallInstanceResponse
from ri.fwclient.models.get_firewall_instance_response import GetFirewallInstanceResponse
from ri.fwclient.models.list_firewall_instances_response import ListFirewallInstancesResponse
from ri.fwclient.models.update_firewall_instance_response import UpdateFirewallInstanceResponse
from ri.fwclient.models.update_instance_request import UpdateInstanceRequest

from ri.fwclient.models import *
from ri.fwclient.api_client import ApiClient, RequestSerialized
from ri.fwclient.api_response import ApiResponse
from ri.fwclient.rest import RESTResponseType


class FirewallInstanceManagerApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client

    @validate_call
    def create_instance(
        self,
        config: Optional[FirewallRuleConfig] = None,
        description: Optional[str] = None,
        firewall_instance_id: Optional[ID] = None,
        spec: Optional[FirewallInstanceDeploymentConfig] = None,
    ) -> CreateFirewallInstanceResponse:
        """CreateFirewallInstance

        This creates a new Firewall Instance with the desired user configuration. It will take time for the new instance to become available; use the `GetFirewallInstance` API to track the status of the deployment.

        :param config:
        :type config: FirewallRuleConfig
        :param description: Optional human-readable description of the firewall instance.
        :type description: str
        :param firewall_instance_id:
        :type firewall_instance_id: ID
        :param spec:
        :type spec: FirewallInstanceDeploymentConfig
        :return: Returns the result object.
        """ # noqa: E501

        body = CreateFirewallInstanceRequest(
          config=config,
          description=description,
          firewall_instance_id=firewall_instance_id,
          spec=spec,
        )

        _param = self._create_instance_serialize(
            body=body,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CreateFirewallInstanceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    def _create_instance_serialize(
        self,
        body,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        if body is not None:
            _body_params = body
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        _default_content_type = (
            self.api_client.select_header_content_type(
                [
                    'application/json'
                ]
            )
        )
        if _default_content_type is not None:
            _header_params['Content-Type'] = _default_content_type

        _auth_settings: List[str] = [
            'X-Firewall-Auth-Token'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/v1-beta/firewall-instance',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
        )

    @validate_call
    def delete_instance(
        self,
        firewall_instance_id_uuid: str,
    ) -> object:
        """DeleteFirewallInstance

        This hard-deletes a Firewall Instance from the cluster. Be careful with this API because it will interrupt in-flight validation.

        :param firewall_instance_id_uuid: Unique object ID. (required)
        :type firewall_instance_id_uuid: str
        :return: Returns the result object.
        """ # noqa: E501


        _param = self._delete_instance_serialize(
            firewall_instance_id_uuid=firewall_instance_id_uuid,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "object",
        }
        response_data = self.api_client.call_api(
            *_param,
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    def _delete_instance_serialize(
        self,
        firewall_instance_id_uuid,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        if firewall_instance_id_uuid is not None:
            _path_params['firewallInstanceId.uuid'] = firewall_instance_id_uuid
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        _auth_settings: List[str] = [
            'X-Firewall-Auth-Token'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/v1-beta/firewall-instance/{firewallInstanceId.uuid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
        )

    @validate_call
    def get_instance(
        self,
        firewall_instance_id_uuid: str,
    ) -> GetFirewallInstanceResponse:
        """GetFirewallInstance

        This retrieves information about a single Firewall Instance.

        :param firewall_instance_id_uuid: Unique object ID. (required)
        :type firewall_instance_id_uuid: str
        :return: Returns the result object.
        """ # noqa: E501


        _param = self._get_instance_serialize(
            firewall_instance_id_uuid=firewall_instance_id_uuid,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetFirewallInstanceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    def _get_instance_serialize(
        self,
        firewall_instance_id_uuid,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        if firewall_instance_id_uuid is not None:
            _path_params['firewallInstanceId.uuid'] = firewall_instance_id_uuid
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        _auth_settings: List[str] = [
            'X-Firewall-Auth-Token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1-beta/firewall-instance/{firewallInstanceId.uuid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
        )

    @validate_call
    def list_instances(
        self,
    ) -> ListFirewallInstancesResponse:
        """ListFirewallInstances

        This lists the Firewall Instances on the cluster.

        :return: Returns the result object.
        """ # noqa: E501


        _param = self._list_instances_serialize(
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ListFirewallInstancesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    def _list_instances_serialize(
        self,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        _auth_settings: List[str] = [
            'X-Firewall-Auth-Token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1-beta/firewall-instance',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
        )

    @validate_call
    def update_instance(
        self,
        firewall_instance_firewall_instance_id_uuid: str,
        agent_id: Optional[ID] = None,
        config: Optional[FirewallRuleConfig] = None,
        deployment_status: Optional[FirewallInstanceStatus] = None,
        description: Optional[str] = None,
        firewall_instance_id: Optional[object] = None,
        last_heartbeat_time: Optional[datetime] = None,
        spec: Optional[FirewallInstanceDeploymentConfig] = None,
        mask: Optional[str] = None,
    ) -> UpdateFirewallInstanceResponse:
        """UpdateFirewallInstance

        Update an existing FirewallInstance. This redeploys the firewall instance. The status will be REDEPLOYING until the new version of the firewall instance reaches READY.

        :param firewall_instance_firewall_instance_id_uuid: Unique object ID. (required)
        :type firewall_instance_firewall_instance_id_uuid: str
        :param agent_id:
        :type agent_id: ID
        :param config:
        :type config: FirewallRuleConfig
        :param deployment_status:
        :type deployment_status: FirewallInstanceStatus
        :param description: Optional human-readable description of the firewall instance.
        :type description: str
        :param firewall_instance_id: Unique ID of an object in RIME.
        :type firewall_instance_id: object
        :param last_heartbeat_time: Last time the control plan received a heartbeat from the firewall instance.
        :type last_heartbeat_time: datetime
        :param spec:
        :type spec: FirewallInstanceDeploymentConfig
        :param mask:
        :type mask: str
        :return: Returns the result object.
        """ # noqa: E501

        firewall_instance = UpdateInstanceRequest(
          agent_id=agent_id,
          config=config,
          deployment_status=deployment_status,
          description=description,
          firewall_instance_id=firewall_instance_id,
          last_heartbeat_time=last_heartbeat_time,
          spec=spec,
        )

        _param = self._update_instance_serialize(
            firewall_instance_firewall_instance_id_uuid=firewall_instance_firewall_instance_id_uuid,
            firewall_instance=firewall_instance,
            mask=mask,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UpdateFirewallInstanceResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    def _update_instance_serialize(
        self,
        firewall_instance_firewall_instance_id_uuid,
        firewall_instance,
        mask,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        if firewall_instance_firewall_instance_id_uuid is not None:
            _path_params['firewallInstance.firewallInstanceId.uuid'] = firewall_instance_firewall_instance_id_uuid
        if mask is not None:
            
            _query_params.append(('mask', mask))
            
        if firewall_instance is not None:
            _body_params = firewall_instance
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        _default_content_type = (
            self.api_client.select_header_content_type(
                [
                    'application/json'
                ]
            )
        )
        if _default_content_type is not None:
            _header_params['Content-Type'] = _default_content_type

        _auth_settings: List[str] = [
            'X-Firewall-Auth-Token'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/v1-beta/firewall-instance/{firewallInstance.firewallInstanceId.uuid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
        )
