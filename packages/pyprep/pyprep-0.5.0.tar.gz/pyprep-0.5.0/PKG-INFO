Metadata-Version: 2.4
Name: pyprep
Version: 0.5.0
Summary: PyPREP: A Python implementation of the preprocessing pipeline (PREP) for EEG data.
Project-URL: Bug Tracker, https://github.com/sappelhoff/pyprep/issues/
Project-URL: Documentation, https://pyprep.readthedocs.io/en/latest
Project-URL: Homepage, https://pyprep.readthedocs.io/en/latest
Project-URL: Source Code, https://github.com/sappelhoff/pyprep
Author: PyPREP developers
Maintainer-email: Stefan Appelhoff <stefan.appelhoff@mailbox.org>
License: MIT License
        
        Copyright (c) 2018 PyPREP developers
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: EEG,artifact,data,electroencephalography,mne,neuroimaging,neuroscience,preprocessing,python
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.9
Requires-Dist: mne>=1.3.0
Requires-Dist: numpy>=1.20.2
Requires-Dist: psutil>=5.4.3
Requires-Dist: scipy>=1.6.3
Provides-Extra: dev
Requires-Dist: build; extra == 'dev'
Requires-Dist: intersphinx-registry; extra == 'dev'
Requires-Dist: ipykernel; extra == 'dev'
Requires-Dist: ipython; extra == 'dev'
Requires-Dist: matplotlib; extra == 'dev'
Requires-Dist: numpydoc; extra == 'dev'
Requires-Dist: pre-commit; extra == 'dev'
Requires-Dist: pydata-sphinx-theme; extra == 'dev'
Requires-Dist: pytest; extra == 'dev'
Requires-Dist: pytest-cov; extra == 'dev'
Requires-Dist: pytest-sugar; extra == 'dev'
Requires-Dist: ruff; extra == 'dev'
Requires-Dist: sphinx; extra == 'dev'
Requires-Dist: sphinx-copybutton; extra == 'dev'
Requires-Dist: sphinx-gallery; extra == 'dev'
Requires-Dist: twine; extra == 'dev'
Provides-Extra: docs
Requires-Dist: intersphinx-registry; extra == 'docs'
Requires-Dist: matplotlib; extra == 'docs'
Requires-Dist: numpydoc; extra == 'docs'
Requires-Dist: pydata-sphinx-theme; extra == 'docs'
Requires-Dist: sphinx; extra == 'docs'
Requires-Dist: sphinx-copybutton; extra == 'docs'
Requires-Dist: sphinx-gallery; extra == 'docs'
Provides-Extra: test
Requires-Dist: build; extra == 'test'
Requires-Dist: matplotlib; extra == 'test'
Requires-Dist: pre-commit; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: pytest-sugar; extra == 'test'
Requires-Dist: ruff; extra == 'test'
Requires-Dist: twine; extra == 'test'
Description-Content-Type: text/x-rst



.. image:: https://github.com/sappelhoff/pyprep/workflows/Python%20build/badge.svg
   :target: https://github.com/sappelhoff/pyprep/actions?query=workflow%3A%22Python+build%22
   :alt: Python build


.. image:: https://github.com/sappelhoff/pyprep/workflows/Python%20tests/badge.svg
   :target: https://github.com/sappelhoff/pyprep/actions?query=workflow%3A%22Python+tests%22
   :alt: Python tests


.. image:: https://codecov.io/gh/sappelhoff/pyprep/branch/main/graph/badge.svg
   :target: https://codecov.io/gh/sappelhoff/pyprep
   :alt: Test coverage

.. image:: https://readthedocs.org/projects/pyprep/badge/?version=latest
   :target: https://pyprep.readthedocs.io/en/latest/?badge=latest
   :alt: Documentation Status


.. image:: https://badge.fury.io/py/pyprep.svg
   :target: https://badge.fury.io/py/pyprep
   :alt: PyPI version

.. image:: https://img.shields.io/conda/vn/conda-forge/pyprep.svg
   :target: https://anaconda.org/conda-forge/pyprep
   :alt: Conda version

.. image:: https://zenodo.org/badge/129240824.svg
   :target: https://zenodo.org/badge/latestdoi/129240824
   :alt: Zenodo archive

PyPREP
======

For documentation, see the:

- `stable documentation <https://pyprep.readthedocs.io/en/stable/>`_
- `latest (development) documentation <https://pyprep.readthedocs.io/en/latest/>`_

.. docs_readme_include_label

``pyprep`` is a Python implementation of the
`Preprocessing Pipeline (PREP) <https://doi.org/10.3389/fninf.2015.00016>`_
for EEG data, working with `MNE-Python <https://mne.tools>`_.

Installation
============

``pyprep`` runs on Python version 3.9 or higher.

We recommend to run ``pyprep`` in a dedicated virtual environment
(for example using `conda <https://docs.conda.io/en/latest/miniconda.html>`_).

For installing the **stable** version of ``pyprep``, call:

.. code-block:: Text

   python -m pip install --upgrade pyprep

or if you use `conda <https://docs.conda.io/en/latest/miniconda.html>`_:

.. code-block:: Text

   conda install --channel conda-forge pyprep

For installing the **latest (development)** version of ``pyprep``, call:

.. code-block:: Text

   python -m pip install --upgrade https://github.com/sappelhoff/pyprep/archive/refs/heads/main.zip

Both the *stable* and the *latest* installation will additionally install
all required dependencies automatically.
The dependencies are defined in the ``pyproject.toml`` file under the
``dependencies`` and ``project.optional-dependencies`` sections.

Contributing
============

The development of ``pyprep`` is taking place on
`GitHub <https://github.com/sappelhoff/pyprep>`_.

For more information, please see
`CONTRIBUTING.md <https://github.com/sappelhoff/pyprep/blob/main/.github/CONTRIBUTING.md>`_.

Citing
======

If you use this software in academic work, please cite it using the `Zenodo entry <https://zenodo.org/badge/latestdoi/129240824>`_.
Please also consider citing the original publication on PREP (see "References" below).
Metadata is encoded in the `CITATION.cff` file.

References
==========

1. Bigdely-Shamlo, N., Mullen, T., Kothe, C., Su, K.-M., & Robbins, K. A.
   (2015). The PREP pipeline: standardized preprocessing for large-scale EEG
   analysis. Frontiers in Neuroinformatics, 9, 16. doi:
   `10.3389/fninf.2015.00016 <https://doi.org/10.3389/fninf.2015.00016>`_
