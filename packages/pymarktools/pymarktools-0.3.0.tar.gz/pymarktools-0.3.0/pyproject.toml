[project]
name = "pymarktools"
version = "0.3.0"
description = "A set of markdown utilities for Python, designed to simplify the manipulation and parsing of markdown text. This project leverages Typer for a user-friendly command line interface and is built with a solid codebase structure to facilitate easy development and testing."
authors = [
    {name = 'Jan SchÃ¤fer', email = 'jan@schae.fr'},
]
readme = "README.md"
requires-python = ">=3.12"

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]

dependencies = [
    "gitignore-parser>=0.1.12",
    "httpx>=0.28.1",
    "typer>=0.16.0",
]
scripts = { pymarktools = "pymarktools.cli:app", pymd = "pymarktools.cli:app" }
license ="MIT"
license-files = ["LICENSE"]

[project.urls]
Homepage = "https://github.com/jancschaefer/pymarktools"
Documentation = "https://github.com/jancschaefer/pymarktools/blob/main/README.md"
Repository = "https://github.com/jancschaefer/pymarktools"
Issues = "https://github.com/jancschaefer/pymarktools/issues"
Changelog = "https://github.com/jancschaefer/pymarktools/blob/main/CHANGELOG.md"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/pymarktools",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = [
    "tests",
]
pythonpath = [
    "src",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-xdist>=3.8.0",
    "ruff>=0.12.2",
    "ty>=0.0.1a13",
]

[tool.ruff]
line-length = 120
target-version = 'py312'

[tool.ruff.lint]
select = [
    'F',      # Pyflakes
    'E',      # pycodestyle (Error)
    'I',      # isort
    'D',      # pydocstyle
    'UP',     # pyupgrade
    'YTT',    # flake8-2020
    'B',      # flake8-bugbear
    'T10',    # flake8-debugger
    'T20',    # flake8-print
    'C4',     # flake8-comprehensions
    'PIE',    # flake8-pie
    'PYI006', # flake8-pyi
    'PYI062', # flake8-pyi
    'PYI063', # flake8-pyi
    'PYI066', # flake8-pyi
]
ignore = ['D105', 'D107', 'D205', 'D415', 'E501', 'B011', 'B028', 'B904', 'PIE804']
flake8-quotes = {inline-quotes = 'double', multiline-quotes = 'double'}
isort = { known-first-party = ['tests'] }
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'google' }

[tool.ruff.lint.per-file-ignores]
'docs/*' = ['D']
'tests/*' = ['D100','D101','D102',"D103", "D104"]
'src/pymarktools/commands/**/*.py' = ['B008']

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = ['T', 'E721', 'F811']
