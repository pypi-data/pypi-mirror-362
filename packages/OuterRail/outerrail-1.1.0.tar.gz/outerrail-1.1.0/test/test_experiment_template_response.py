# coding: utf-8

"""
    AIoD - RAIL

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.20240209-beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from aiod_rail_sdk.models.experiment_template_response import ExperimentTemplateResponse


class TestExperimentTemplateResponse(unittest.TestCase):
    """ExperimentTemplateResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExperimentTemplateResponse:
        """Test ExperimentTemplateResponse
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ExperimentTemplateResponse`
        """
        model = ExperimentTemplateResponse()
        if include_optional:
            return ExperimentTemplateResponse(
                name = '',
                description = '',
                task = 'IMAGE_CLASSIFICATION',
                datasets_schema = aiod_rail_sdk.models.asset_schema.AssetSchema(
                    cardinality = '0-N', ),
                models_schema = aiod_rail_sdk.models.asset_schema.AssetSchema(
                    cardinality = '0-N', ),
                envs_required = [
                    aiod_rail_sdk.models.environment_var_def.EnvironmentVarDef(
                        name = '',
                        description = '', )
                    ],
                envs_optional = [
                    aiod_rail_sdk.models.environment_var_def.EnvironmentVarDef(
                        name = '',
                        description = '', )
                    ],
                available_metrics = [
                    ''
                    ],
                script = '',
                pip_requirements = '',
                id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                state = 'CREATED',
                dockerfile = '',
                approved = True
            )
        else:
            return ExperimentTemplateResponse(
                name = '',
                description = '',
                task = 'IMAGE_CLASSIFICATION',
                datasets_schema = aiod_rail_sdk.models.asset_schema.AssetSchema(
                    cardinality = '0-N', ),
                models_schema = aiod_rail_sdk.models.asset_schema.AssetSchema(
                    cardinality = '0-N', ),
                envs_required = [
                    aiod_rail_sdk.models.environment_var_def.EnvironmentVarDef(
                        name = '',
                        description = '', )
                    ],
                envs_optional = [
                    aiod_rail_sdk.models.environment_var_def.EnvironmentVarDef(
                        name = '',
                        description = '', )
                    ],
                available_metrics = [
                    ''
                    ],
                script = '',
                pip_requirements = '',
                id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                state = 'CREATED',
                dockerfile = '',
                approved = True,
        )
        """

    def testExperimentTemplateResponse(self):
        """Test ExperimentTemplateResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
