"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


PendleBuyPtParamsAmountTypedDict = TypeAliasType(
    "PendleBuyPtParamsAmountTypedDict", Union[float, str]
)
r"""The amount of market's Underlying Token you would like to sell for market's Principal Token (PT)."""


PendleBuyPtParamsAmount = TypeAliasType("PendleBuyPtParamsAmount", Union[float, str])
r"""The amount of market's Underlying Token you would like to sell for market's Principal Token (PT)."""


class PendleBuyPtParamsTypedDict(TypedDict):
    market_address: str
    r"""The address of the market identifying which Principal Token (PT) you would like to buy."""
    amount: PendleBuyPtParamsAmountTypedDict
    r"""The amount of market's Underlying Token you would like to sell for market's Principal Token (PT)."""
    max_slippage_percent: float
    r"""The maximum slippage allowed in percent. e.g. `1` means `1%` slippage allowed."""
    action_type: Literal["PENDLE_BUY_PT"]


class PendleBuyPtParams(BaseModel):
    market_address: str
    r"""The address of the market identifying which Principal Token (PT) you would like to buy."""

    amount: PendleBuyPtParamsAmount
    r"""The amount of market's Underlying Token you would like to sell for market's Principal Token (PT)."""

    max_slippage_percent: float
    r"""The maximum slippage allowed in percent. e.g. `1` means `1%` slippage allowed."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["PENDLE_BUY_PT"]],
            AfterValidator(validate_const("PENDLE_BUY_PT")),
        ],
        pydantic.Field(alias="action_type"),
    ] = "PENDLE_BUY_PT"
