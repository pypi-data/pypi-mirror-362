"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AaveHistoricalTransactionsChain(str, Enum):
    r"""The chain to use."""

    BASE_MAINNET = "base:mainnet"
    ETHEREUM_MAINNET = "ethereum:mainnet"
    ARBITRUM_MAINNET = "arbitrum:mainnet"


class AaveHistoricalTransactionsRequestTypedDict(TypedDict):
    offset: NotRequired[int]
    r"""The offset of the first item to return."""
    limit: NotRequired[int]
    r"""The number of items to return."""
    chain: AaveHistoricalTransactionsChain
    r"""The chain to use."""
    user_address: str
    r"""The address of the user to get historical transactions for."""


class AaveHistoricalTransactionsRequest(BaseModel):
    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 0
    r"""The offset of the first item to return."""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 100
    r"""The number of items to return."""

    chain: Annotated[
        AaveHistoricalTransactionsChain,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = AaveHistoricalTransactionsChain.BASE_MAINNET
    r"""The chain to use."""

    user_address: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ] = "0x3254f3b1918637ba924e3F18968Cb74219974b63"
    r"""The address of the user to get historical transactions for."""
