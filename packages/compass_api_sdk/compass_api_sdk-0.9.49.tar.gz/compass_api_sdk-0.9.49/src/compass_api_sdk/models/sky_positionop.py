"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import FieldMetadata, QueryParamMetadata, validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional
from typing_extensions import Annotated, TypedDict


class SkyPositionRequestTypedDict(TypedDict):
    chain: Literal["ethereum:mainnet"]
    user_address: str
    r"""The user address of the desired position."""


class SkyPositionRequest(BaseModel):
    CHAIN: Annotated[
        Annotated[
            Optional[Literal["ethereum:mainnet"]],
            AfterValidator(validate_const("ethereum:mainnet")),
        ],
        pydantic.Field(alias="chain"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "ethereum:mainnet"

    user_address: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ] = "0xa829B388A3DF7f581cE957a95edbe419dd146d1B"
    r"""The user address of the desired position."""
