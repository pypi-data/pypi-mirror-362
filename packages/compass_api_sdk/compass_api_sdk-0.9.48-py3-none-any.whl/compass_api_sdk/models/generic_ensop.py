"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GenericEnsChain(str, Enum):
    r"""The chain to use."""

    BASE_MAINNET = "base:mainnet"
    ETHEREUM_MAINNET = "ethereum:mainnet"
    ARBITRUM_MAINNET = "arbitrum:mainnet"


class GenericEnsRequestTypedDict(TypedDict):
    chain: GenericEnsChain
    r"""The chain to use."""
    ens_name: NotRequired[str]
    r"""The ENS name to resolve."""


class GenericEnsRequest(BaseModel):
    chain: Annotated[
        GenericEnsChain,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = GenericEnsChain.ETHEREUM_MAINNET
    r"""The chain to use."""

    ens_name: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "vitalik.eth"
    r"""The ENS name to resolve."""
