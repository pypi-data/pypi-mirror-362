{"version":3,"file":"dash_kline_charts.min.js","mappings":"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","sources":["webpack://dash_kline_charts/./node_modules/prop-types/index.js","webpack://dash_kline_charts/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://dash_kline_charts/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://dash_kline_charts/webpack/bootstrap","webpack://dash_kline_charts/webpack/runtime/compat get default export","webpack://dash_kline_charts/webpack/runtime/define property getters","webpack://dash_kline_charts/webpack/runtime/hasOwnProperty shorthand","webpack://dash_kline_charts/webpack/runtime/make namespace object","webpack://dash_kline_charts/external window \"React\"","webpack://dash_kline_charts/./src/lib/components/DashKLineChart.react.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","import React, { useMemo, useCallback, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n// 使用全局的klinecharts对象（通过UMD加载）\n// const getKlineCharts = () => {\n//     if (typeof window !== 'undefined' && window.klinecharts) {\n//         return window.klinecharts;\n//     }\n//     console.error('KLineCharts not found. Make sure klinecharts.min.js is loaded.');\n//     return null;\n// };\n\n// 延迟获取klinecharts，因为它可能还没有加载\n// const getInit = () => {\n//     const lib = getKlineCharts();\n//     return lib ? lib.init : null;\n// };\n\n// const getDispose = () => {\n//     const lib = getKlineCharts();\n//     return lib ? lib.dispose : null;\n// };\n\n// 深度比较工具函数 - 暂时注释，未来可能使用\n// const deepEqual = (obj1, obj2) => {\n//     if (obj1 === obj2) return true;\n//\n//     if (obj1 == null || obj2 == null) return obj1 === obj2;\n//\n//     if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return obj1 === obj2;\n//\n//     if (Array.isArray(obj1) !== Array.isArray(obj2)) return false;\n//\n//     const keys1 = Object.keys(obj1);\n//     const keys2 = Object.keys(obj2);\n//\n//     if (keys1.length !== keys2.length) return false;\n//\n//     for (let key of keys1) {\n//         if (!keys2.includes(key)) return false;\n//         if (!deepEqual(obj1[key], obj2[key])) return false;\n//     }\n//\n//     return true;\n// };\n\n// 防抖函数 - 暂时注释，未来可能使用\n// const debounce = (func, wait) => {\n//     let timeout;\n//     return function executedFunction(...args) {\n//         const later = () => {\n//             clearTimeout(timeout);\n//             func(...args);\n//         };\n//         clearTimeout(timeout);\n//         timeout = setTimeout(later, wait);\n//     };\n// };\n\n// 节流函数 - 暂时注释，未来可能使用\n// const throttle = (func, limit) => {\n//     let inThrottle;\n//     return function executedFunction(...args) {\n//         if (!inThrottle) {\n//             func.apply(this, args);\n//             inThrottle = true;\n//             setTimeout(() => inThrottle = false, limit);\n//         }\n//     };\n// };\n\n// 工具函数：数据验证\nconst validateKLineData = (data, chartType = 'candle') => {\n    if (!Array.isArray(data)) return false;\n\n    // 允许空数组\n    if (data.length === 0) return true;\n\n    // 获取图表类型，支持通过 config.candle.type 传递\n    const type = typeof chartType === 'object' && chartType.candle?.type ? chartType.candle.type : chartType;\n\n    return data.every(item => {\n        if (item === null || typeof item !== 'object' || !('timestamp' in item) || typeof item.timestamp !== 'number') {\n            return false;\n        }\n\n        // 对于面积图（area），只需要 timestamp 和 close\n        if (type === 'area') {\n            return 'close' in item && typeof item.close === 'number';\n        }\n\n        // 对于蜡烛图（candle）和其他类型，需要完整的 OHLC 数据\n        return 'open' in item &&\n            'high' in item &&\n            'low' in item &&\n            'close' in item &&\n            typeof item.open === 'number' &&\n            typeof item.high === 'number' &&\n            typeof item.low === 'number' &&\n            typeof item.close === 'number' &&\n            item.high >= item.low &&\n            item.open >= item.low && item.open <= item.high &&\n            item.close >= item.low && item.close <= item.high &&\n            (!('volume' in item) || typeof item.volume === 'number');\n    });\n};\n\n// 工具函数：获取主题配置\nconst getThemeConfig = (theme) => {\n    const themes = {\n        light: {\n            background: '#ffffff',\n            text: '#333333',\n            grid: '#e0e0e0',\n            candle: {\n                up: '#26A69A',\n                down: '#EF5350',\n                noChange: '#888888',\n            },\n        },\n        dark: {\n            background: '#1e1e1e',\n            text: '#ffffff',\n            grid: '#444444',\n            candle: {\n                up: '#4caf50',\n                down: '#f44336',\n                noChange: '#888888',\n            },\n        },\n    };\n    return themes[theme] || themes.light;\n};\n\n// 工具函数：合并配置\nconst mergeConfig = (defaultConfig, userConfig) => {\n    return { ...defaultConfig, ...userConfig };\n};\n\n// ResizeObserver Hook\nconst useResizeObserver = (callback) => {\n    const ref = useRef(null);\n\n    useEffect(() => {\n        if (!ref.current) return;\n\n        const observer = new ResizeObserver(callback);\n        observer.observe(ref.current);\n\n        return () => observer.disconnect();\n    }, [callback]);\n\n    return ref;\n};\n\n/**\n * DashKLineChart is a Dash component for displaying financial charts using KLineChart v10.\n * It takes data in OHLC format and renders a beautiful, interactive candlestick chart.\n *\n * Performance optimizations:\n * - useMemo and useCallback for performance optimization\n * - Separated initialization, data updates, config updates, and indicator updates\n * - ResizeObserver for responsive design\n * - Improved error handling and lifecycle management\n * - Better memory management and resource cleanup\n */\nconst DashKLineChart = ({\n    id,\n    data = [],\n    config = {},\n    indicators = [],\n    style = {},\n    className = '',\n    responsive = true,\n    symbol\n}) => {\n    const containerRef = useRef(null);\n    const chartRef = useRef(null);\n\n    // 规范化数据：确保 null 和 undefined 被转换为空数组\n    const normalizedData = useMemo(() => {\n        if (data === null || data === undefined) {\n            return [];\n        }\n        return Array.isArray(data) ? data : [];\n    }, [data]);\n\n    // 默认配置\n    const defaultConfig = useMemo(() => ({\n        theme: 'light',\n        grid: {\n            show: true,\n            horizontal: { show: true },\n            vertical: { show: true },\n        },\n        candle: {\n            type: 'candle_solid',\n        },\n        crosshair: {\n            show: true,\n            horizontal: { show: true },\n            vertical: { show: true },\n        },\n        yAxis: {\n            show: true,\n            position: 'right',\n        },\n        xAxis: {\n            show: true,\n            position: 'bottom',\n        },\n    }), []);\n\n    // 合并配置\n    const mergedConfig = useMemo(\n        () => mergeConfig(defaultConfig, config),\n        [defaultConfig, config]\n    );\n\n    // 获取主题\n    const theme = useMemo(\n        () => getThemeConfig(mergedConfig.theme),\n        [mergedConfig.theme]\n    );\n\n    // 验证数据（使用规范化后的数据）\n    const isValidData = useMemo(() => validateKLineData(normalizedData, mergedConfig), [normalizedData, mergedConfig]);\n\n    // 初始化图表\n    const initializeChart = useCallback(() => {\n        if (!containerRef.current || !isValidData) return;\n\n        try {\n            // 检查klinecharts是否可用\n            if (!window.klinecharts) {\n                console.error('KLineCharts library not available');\n                return;\n            }\n\n            // 销毁旧图表\n            if (chartRef.current) {\n                klinecharts.dispose(containerRef.current);\n                chartRef.current = null;\n            }\n\n            // 创建新图表\n            const chartInstance = klinecharts.init(containerRef.current);\n\n            if (!chartInstance) {\n                console.error('Failed to initialize chart instance');\n                return;\n            }\n\n            chartRef.current = chartInstance;\n\n            // 设置Symbol和Period（v10必需配置）\n            chartInstance.setSymbol({\n                ticker: symbol || 'DASH-KLINE',\n                pricePrecision: 2,\n                volumePrecision: 0,\n            });\n\n            chartInstance.setPeriod({\n                type: 'day',\n                span: 1,\n            });\n\n            // 设置数据加载器（v10新API）\n            chartInstance.setDataLoader({\n                getBars: (params) => {\n                    // 根据参数类型处理数据\n                    if (params.type === 'init' || params.type === 'update') {\n                        params.callback(normalizedData, false);\n                    } else if (params.type === 'forward' || params.type === 'backward') {\n                        // 对于前向/后向加载，返回空数组表示没有更多数据\n                        params.callback([], false);\n                    }\n                },\n            });\n\n            // 应用样式配置\n            updateChartStyles(chartInstance, mergedConfig, theme);\n\n            // 添加技术指标\n            updateChartIndicators(chartInstance, indicators);\n\n        } catch (error) {\n            console.error('Failed to initialize chart:', error);\n        }\n    }, [normalizedData, mergedConfig, indicators, isValidData, theme, symbol, updateChartStyles, updateChartIndicators]);\n\n    // 更新图表数据\n    const updateChartData = useCallback(() => {\n        if (!chartRef.current || !isValidData) return;\n\n        try {\n            // 使用v10新API更新数据\n            chartRef.current.setDataLoader({\n                getBars: (params) => {\n                    if (params.type === 'init' || params.type === 'update') {\n                        params.callback(normalizedData, false);\n                    } else if (params.type === 'forward' || params.type === 'backward') {\n                        params.callback([], false);\n                    }\n                },\n            });\n        } catch (error) {\n            console.error('Failed to update chart data:', error);\n        }\n    }, [normalizedData, isValidData]);\n\n    // 更新图表样式\n    const updateChartStyles = useCallback((chartInstance, config, themeConfig) => {\n        if (!chartInstance) return;\n\n        try {\n            const styles = {\n                grid: {\n                    show: config.grid?.show ?? true,\n                    horizontal: {\n                        show: config.grid?.horizontal?.show ?? true,\n                        color: themeConfig.grid,\n                        style: 'dash'\n                    },\n                    vertical: {\n                        show: config.grid?.vertical?.show ?? true,\n                        color: themeConfig.grid,\n                        style: 'dash'\n                    }\n                },\n                candle: {\n                    type: config.candle?.type ?? 'candle_solid',\n                    bar: {\n                        upColor: themeConfig.candle.up,\n                        downColor: themeConfig.candle.down,\n                        noChangeColor: themeConfig.candle.noChange,\n                        upBorderColor: themeConfig.candle.up,\n                        downBorderColor: themeConfig.candle.down,\n                        noChangeBorderColor: themeConfig.candle.noChange,\n                        upWickColor: themeConfig.candle.up,\n                        downWickColor: themeConfig.candle.down,\n                        noChangeWickColor: themeConfig.candle.noChange\n                    }\n                },\n                crosshair: {\n                    show: config.crosshair?.show ?? true,\n                    horizontal: {\n                        show: config.crosshair?.horizontal?.show ?? true,\n                        line: {\n                            color: themeConfig.text,\n                            style: 'dash'\n                        }\n                    },\n                    vertical: {\n                        show: config.crosshair?.vertical?.show ?? true,\n                        line: {\n                            color: themeConfig.text,\n                            style: 'dash'\n                        }\n                    }\n                },\n                yAxis: {\n                    show: config.yAxis?.show ?? true,\n                    position: config.yAxis?.position ?? 'right',\n                    axisLine: {\n                        show: true,\n                        color: themeConfig.grid\n                    },\n                    tickLine: {\n                        show: true,\n                        color: themeConfig.grid\n                    },\n                    tickText: {\n                        show: true,\n                        color: themeConfig.text\n                    }\n                },\n                xAxis: {\n                    show: config.xAxis?.show ?? true,\n                    position: config.xAxis?.position ?? 'bottom',\n                    axisLine: {\n                        show: true,\n                        color: themeConfig.grid\n                    },\n                    tickLine: {\n                        show: true,\n                        color: themeConfig.grid\n                    },\n                    tickText: {\n                        show: true,\n                        color: themeConfig.text\n                    }\n                }\n            };\n\n            chartInstance.setStyles(styles);\n\n            // 设置容器背景色\n            if (containerRef.current) {\n                containerRef.current.style.backgroundColor = themeConfig.background;\n            }\n        } catch (error) {\n            console.error('Failed to update chart styles:', error);\n        }\n    }, []);\n\n    // 更新技术指标\n    const updateChartIndicators = useCallback((chartInstance, indicatorList) => {\n        if (!chartInstance) return;\n\n        try {\n            // 清除现有指标\n            chartInstance.removeIndicator();\n\n            // 添加新指标\n            if (indicatorList && indicatorList.length > 0) {\n                indicatorList.forEach((indicator) => {\n                    if (indicator.visible !== false) {\n                        try {\n                            chartInstance.createIndicator(\n                                indicator.name,\n                                true,\n                                { params: indicator.params }\n                            );\n                        } catch (error) {\n                            console.warn(`Failed to create indicator ${indicator.name}:`, error);\n                        }\n                    }\n                });\n            }\n        } catch (error) {\n            console.error('Failed to update indicators:', error);\n        }\n    }, []);\n\n    // 更新主题样式\n    const updateTheme = useCallback(() => {\n        if (!chartRef.current) return;\n\n        updateChartStyles(chartRef.current, mergedConfig, theme);\n    }, [mergedConfig, theme, updateChartStyles]);\n\n    // 更新指标\n    const updateIndicators = useCallback(() => {\n        if (!chartRef.current) return;\n\n        updateChartIndicators(chartRef.current, indicators);\n    }, [indicators, updateChartIndicators]);\n\n    // 初始化图表\n    useEffect(() => {\n        if (!isValidData || normalizedData.length === 0) {\n            return;\n        }\n\n        const timer = setTimeout(() => {\n            initializeChart();\n        }, 100);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [initializeChart, isValidData, normalizedData.length]);\n\n    // 更新数据\n    useEffect(() => {\n        updateChartData();\n    }, [updateChartData]);\n\n    // 更新主题\n    useEffect(() => {\n        updateTheme();\n    }, [updateTheme]);\n\n    // 更新指标\n    useEffect(() => {\n        updateIndicators();\n    }, [updateIndicators]);\n\n    // 组件卸载时清理\n    useEffect(() => {\n        const container = containerRef.current; // 在 effect 中保存 ref 值\n        return () => {\n            if (chartRef.current && container) {\n                try {\n                    klinecharts.dispose(container);\n                    chartRef.current = null;\n                } catch (error) {\n                    console.error('Failed to dispose chart:', error);\n                }\n            }\n        };\n    }, []);\n\n    // 响应式处理\n    const handleResize = useCallback(() => {\n        if (!chartRef.current || !responsive) return;\n\n        try {\n            // 重新调整图表大小\n            chartRef.current.resize();\n        } catch (error) {\n            console.error('Failed to resize chart:', error);\n        }\n    }, [responsive]);\n\n    const resizeRef = useResizeObserver(handleResize);\n\n    // 错误处理：数据格式错误\n    if (!isValidData && normalizedData.length > 0) {\n        return (\n            <div\n                id={id}\n                className={`dash-kline-chart-error ${className}`}\n                style={{\n                    ...style,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: theme.background,\n                    color: theme.text,\n                    border: `1px solid ${theme.grid}`,\n                    borderRadius: '4px',\n                    padding: '20px',\n                    minHeight: '400px',\n                }}\n            >\n                <div style={{ textAlign: 'center' }}>\n                    <h3>数据格式错误</h3>\n                    <p>\n                        请确保数据格式正确，包含 timestamp、open、high、low、close 字段\n                    </p>\n                    <p style={{ fontSize: '14px', color: '#666' }}>\n                        数据验证失败：请检查价格关系 (high ≥ low, open/close 在 high-low 范围内)\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n    // 空数据状态\n    if (!normalizedData || normalizedData.length === 0) {\n        return (\n            <div\n                id={id}\n                className={`dash-kline-chart-empty ${className}`}\n                style={{\n                    ...style,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: '#fafafa',\n                    color: '#999',\n                    border: '1px dashed #ccc',\n                    borderRadius: '4px',\n                    padding: '20px',\n                    minHeight: '400px',\n                }}\n            >\n                <div style={{ textAlign: 'center' }}>\n                    <div style={{ fontSize: '48px', marginBottom: '10px' }}>📈</div>\n                    <h3 style={{ margin: '0 0 10px 0', color: '#666' }}>暂无数据</h3>\n                    <p style={{ margin: 0, fontSize: '14px' }}>请提供K线数据以显示图表</p>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div\n            id={id}\n            className={`dash-kline-chart ${className}`}\n            style={{\n                ...style,\n                backgroundColor: theme.background,\n                minHeight: '400px'\n            }}\n            ref={responsive ? resizeRef : undefined}\n        >\n            <div\n                ref={containerRef}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '400px',\n                }}\n            />\n        </div>\n    );\n};\n\nDashKLineChart.defaultProps = {\n    data: [],\n    config: {},\n    indicators: [],\n    style: {},\n    className: '',\n    responsive: true\n};\n\nDashKLineChart.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * The K-line data in OHLC format. Each item should be an object with:\n     * - timestamp (number): Timestamp in milliseconds\n     * - open (number): Opening price\n     * - high (number): Highest price\n     * - low (number): Lowest price\n     * - close (number): Closing price\n     * - volume (number, optional): Trading volume\n     */\n    data: PropTypes.arrayOf(PropTypes.shape({\n        timestamp: PropTypes.number.isRequired,\n        open: PropTypes.number.isRequired,\n        high: PropTypes.number.isRequired,\n        low: PropTypes.number.isRequired,\n        close: PropTypes.number.isRequired,\n        volume: PropTypes.number\n    })),\n\n    /**\n     * Chart configuration options including:\n     * - theme (string): Chart theme ('light' or 'dark')\n     * - grid (object): Grid configuration\n     * - candle (object): Candle configuration\n     * - crosshair (object): Crosshair configuration\n     * - yAxis (object): Y-axis configuration\n     * - xAxis (object): X-axis configuration\n     */\n    config: PropTypes.object,\n\n    /**\n     * Technical indicators configuration. Each item should be an object with:\n     * - name (string): Indicator name (e.g., 'MA', 'RSI', 'MACD')\n     * - params (array): Indicator parameters\n     * - visible (boolean, optional): Whether the indicator is visible\n     */\n    indicators: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        params: PropTypes.array,\n        visible: PropTypes.bool\n    })),\n\n    /**\n     * Symbol information for the chart\n     */\n    symbol: PropTypes.string,\n\n    /**\n     * CSS style properties\n     */\n    style: PropTypes.object,\n\n    /**\n     * CSS class name\n     */\n    className: PropTypes.string,\n\n    /**\n     * Whether to enable responsive design\n     */\n    responsive: PropTypes.bool\n};\n\nexport default DashKLineChart;"],"names":["module","exports","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","window","DashKLineChart","_ref","id","_ref$data","data","_ref$config","config","_ref$indicators","indicators","_ref$style","style","_ref$className","className","_ref$responsive","responsive","containerRef","useRef","chartRef","normalizedData","useMemo","Array","isArray","defaultConfig","theme","grid","show","horizontal","vertical","candle","type","crosshair","yAxis","position","xAxis","mergedConfig","userConfig","_objectSpread","mergeConfig","themes","light","background","text","up","down","noChange","dark","getThemeConfig","isValidData","_chartType$candle","chartType","arguments","length","_typeof","every","item","timestamp","close","open","high","low","volume","validateKLineData","initializeChart","useCallback","current","klinecharts","console","error","dispose","chartInstance","init","setSymbol","ticker","pricePrecision","volumePrecision","setPeriod","span","setDataLoader","getBars","params","callback","updateChartStyles","updateChartIndicators","updateChartData","themeConfig","_config$grid$show","_config$grid","_config$grid$horizont","_config$grid2","_config$grid$vertical","_config$grid3","_config$candle$type","_config$candle","_config$crosshair$sho","_config$crosshair","_config$crosshair$hor","_config$crosshair2","_config$crosshair$ver","_config$crosshair3","_config$yAxis$show","_config$yAxis","_config$yAxis$positio","_config$yAxis2","_config$xAxis$show","_config$xAxis","_config$xAxis$positio","_config$xAxis2","styles","color","bar","upColor","downColor","noChangeColor","upBorderColor","downBorderColor","noChangeBorderColor","upWickColor","downWickColor","noChangeWickColor","line","axisLine","tickLine","tickText","setStyles","backgroundColor","indicatorList","removeIndicator","forEach","indicator","visible","createIndicator","warn","concat","updateTheme","updateIndicators","useEffect","timer","setTimeout","clearTimeout","container","ref","handleResize","resize","resizeRef","observer","ResizeObserver","observe","disconnect","React","display","alignItems","justifyContent","border","borderRadius","padding","minHeight","textAlign","fontSize","width","height","marginBottom","margin","defaultProps","propTypes"],"sourceRoot":""}