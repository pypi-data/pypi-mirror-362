[tool.poetry]
name = "flask-mvc2"
version = "0.1.0"
description = "Transform Flask into a structured MVC architecture with powerful CLI tools"
authors = ["Marcus Pereira <marcus@negros.dev>"]
maintainers = ["Marcus Pereira <marcus@negros.dev>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/marcuxyz/flask-mvc"
repository = "https://github.com/marcuxyz/flask-mvc"
documentation = "https://marcuxyz.github.io/flask-mvc"
keywords = [
    "flask",
    "mvc",
    "web-framework",
    "cli",
    "generator",
    "architecture",
    "flask-extension",
    "scaffold",
    "crud",
    "rest-api"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Environment :: Web Environment",
    "Operating System :: OS Independent",
]
packages = [{include = "flask_mvc"}]
include = [
    "flask_mvc/templates/**/*",
    "CHANGELOG.md",
    "LICENSE",
]
exclude = [
    "tests/**/*",
    "docs/**/*",
    "site/**/*",
    "**/__pycache__",
    "**/*.pyc",
]


[tool.poetry.dependencies]
python = "^3.10"
Flask = "^3.0.0"
click = "^8.0.0"
Jinja2 = "^3.1.0"
method-override = "^0.3.0"

[tool.poetry.group.dev.dependencies]

# Testing
pytest = "^8.4.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
flask-sqlalchemy = "^3.0.5"

# Code Quality
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"

# Documentation
mkdocs-material = "^9.4.8"
mkdocs-mermaid2-plugin = "^1.1.1"

# Testing Tools
splinter = {version = "^0.19.0", extras = ["flask"]}
urllib3 = "^1.26.18"

# Development Tools
ipython = "^8.15.0"
rich = "^13.5.0"
bandit = "^1.8.6"
black = "^25.1.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"
mkdocs-mermaid2-plugin = "^1.1.1"
markdown-include = "^0.8.1"

[tool.poetry.scripts]
flask-mvc = "flask_mvc.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | site
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["flask_mvc"]
known_third_party = ["flask", "click", "jinja2"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=flask_mvc",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["flask_mvc"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
max-complexity = 10
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.commitizen]
name = "cz_conventional_commits"
version = "2.9.0"
tag_format = "v$version"
version_files = [
    "flask_mvc/__version__.py",
    "pyproject.toml:version"
]
