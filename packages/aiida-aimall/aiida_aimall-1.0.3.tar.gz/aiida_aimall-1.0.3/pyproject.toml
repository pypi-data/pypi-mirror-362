[build-system]
# build the package with [flit](https://flit.readthedocs.io)
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = "aiida-aimall"
dynamic = ["version"]  # read from aiida_aimall/__init__.py
description = "A plugin to interface AIMAll with AiiDA"
authors = [{name = "Kevin Lefrancois-Gagnon", email = "kgagnon@lakeheadu.ca"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
    "Framework :: AiiDA"
]
keywords = ["aiida", "plugin"]
requires-python = ">=3.10"
dependencies = [
    "aiida-core>=2.0,<3",
    "pandas<2.2",
    "voluptuous",
    "aiida-submission-controller<0.2",
    "pydantic",
    "ase",
    "cclib",
    "multiprocess",
    "subproptools",
    "aiida-gaussian",
    "pymatgen",
    "aiida-shell",
    "qc-iodata",
    "numpy",
]

[project.urls]
Source = "https://github.com/kmlefran/aiida-aimall"
Documentation = "https://aiida-aimall.readthedocs.io"
Home = "https://aiida-aimall.readthedocs.io"

[project.optional-dependencies]
testing = [
    "pgtest~=1.3.1",
    'pytest~=6.0',
    "pytest-cov",
    'pytest-regressions~=2.3',
    "coveralls",
    "group_decomposition"
]
pre-commit = [
    "pre-commit~=2.2",
    "pylint"
]
docs = [
    "sphinx",
    "sphinxcontrib-contentui",
    "sphinxcontrib-details-directive",
    "sphinx-copybutton~=0.5.2",
    "sphinx-autoapi~=3.0.0",
    "sphinx-design~=0.4.1",
    "sphinx-click~=4.4.0",
    "myst-parser~=1.0.0",
    "sphinx-book-theme~=1.0.1",
    'sphinxcontrib-details-directive~=0.1.0',
    "nbsphinx",
    "sphinx-gallery",
    "ipykernel"
]

[project.entry-points."aiida.data"]
"aimall.aimqb" = "aiida_aimall.data:AimqbParameters"

[project.entry-points."aiida.calculations"]
"aimall.aimqb" = "aiida_aimall.calculations:AimqbCalculation"

[project.entry-points."aiida.parsers"]
"aimall.base" = "aiida_aimall.parsers:AimqbBaseParser"
"aimall.group" = "aiida_aimall.parsers:AimqbGroupParser"

[project.entry-points."aiida.workflows"]
"aimall.aimreor" = "aiida_aimall.workchains.param_parts:AIMAllReorWorkChain"
"aimall.subparam" = "aiida_aimall.workchains.subparam:SubstituentParameterWorkChain"
"aimall.smitogauss" = "aiida_aimall.workchains.param_parts:SmilesToGaussianWorkChain"
"aimall.qmtoaim" = "aiida_aimall.workchains.qc_programs:QMToAIMWorkChain"
"aimall.gausstoaim" = "aiida_aimall.workchains.qc_programs:GaussianToAIMWorkChain"
"aimall.wfxtoaim" = "aiida_aimall.workchains.qc_programs:GenerateWFXToAIMWorkChain"

[tool.flit.module]
name = "aiida_aimall"

[tool.flit.sdist]
exclude = [
    'docs/',
    'tests/',
]

[tool.pylint.format]
max-line-length = 125

[tool.pylint.messages_control]
disable = [
    "too-many-ancestors",
    "invalid-name",
    "duplicate-code",
    "import-error",
    "import-outside-toplevel"
]

[tool.pylint.basic]
good-names = [
    'SinglefileData',
    'FromGroupSubmissionController'
]

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
minversion = '6.0'
testpaths = [
    'tests',
]
python_files = "test_*.py"
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore:Creating AiiDA configuration folder:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:yaml:",
    'ignore:Creating AiiDA configuration folder.*:UserWarning',
    'ignore::DeprecationWarning:frozendict:',
    'ignore::DeprecationWarning:pkg_resources:',
    'ignore::DeprecationWarning:sqlalchemy_utils:',
]

[tool.isort]
# Configuration of [isort](https://isort.readthedocs.io)
line_length = 120
force_sort_within_sections = true
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'AIIDA', 'FIRSTPARTY', 'LOCALFOLDER']
known_aiida = ['aiida']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    py311
    py311-pre-commit

[testenv]
description = Run the pytest tests
usedevelop=True
extras = tests
commands = pytest {posargs}

[testenv:py311-pre-commit]
description = Run the pre-commit checks
extras =
    tests
    pre-commit
commands = pre-commit run {posargs}

[testenv:docs]
description = Build the documentation
extras = docs
commands = sphinx-build -nW --keep-going -b html {posargs} docs/source docs/build/html
commands_post = echo "open file://{toxinidir}/docs/build/html/index.html"
"""
