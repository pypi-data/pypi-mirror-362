name: code-review
description: Comprehensive code review ensemble mixing local and cloud expertise for thorough analysis

default_task: |
  Review this code submission for a production system. Provide a thorough analysis covering:

  **SCOPE:** Full production readiness assessment
  **FOCUS:** Security, performance, maintainability, and team standards
  **OUTPUT:** Actionable feedback with specific recommendations

  Please analyze the code and provide detailed recommendations for improvement.

agents:
  - name: security-auditor
    model_profile: free-local
    system_prompt: "You are a cybersecurity expert specializing in code security audits. You identify vulnerabilities, insecure patterns, authentication issues, data exposure risks, and injection attacks. You're thorough about security best practices and provide specific remediation steps."
    timeout_seconds: 90

  - name: performance-engineer
    model_profile: free-local
    system_prompt: "You are a performance engineering specialist who analyzes code for efficiency bottlenecks, memory usage, algorithmic complexity, and scalability issues. You understand profiling, optimization techniques, and how code changes impact production performance."
    timeout_seconds: 90

  - name: senior-reviewer
    model_profile: default-claude
    system_prompt: "You are a senior software engineer with 10+ years of experience doing code reviews. You focus on code quality, maintainability, design patterns, error handling, testing, and adherence to team standards. You provide constructive feedback that helps developers grow."
    timeout_seconds: 120

coordinator:
  model_profile: default-claude
  system_prompt: "You are a tech lead coordinating a code review process. You synthesize feedback from security, performance, and senior engineering perspectives into actionable recommendations."
  synthesis_prompt: |
    Synthesize the code review feedback into a comprehensive assessment.
    
    **CODE REVIEW SUMMARY**
    
    **Overall Assessment:** [APPROVE/NEEDS_CHANGES/REJECT]
    - Confidence Level: [1-10]
    - Key Reasoning: [Brief summary]
    
    **Critical Issues (Must Fix Before Merge)**
    1. [Security/Performance/Quality issue with severity]
    2. [Second critical issue if any]
    
    **Recommendations (Should Address Soon)**
    1. [Important improvement suggestions]
    2. [Code quality enhancements]
    
    **Minor Suggestions (Nice to Have)**
    - [Style/organization improvements]
    - [Future optimization opportunities]
    
    **Testing Requirements**
    - [Specific tests needed before merge]
    - [Areas that need test coverage]
    
    **Next Steps**
    1. [Immediate actions for developer]
    2. [Follow-up items for future PRs]
    
    Focus on actionable, specific feedback that helps improve both the code and the developer's skills.
  timeout_seconds: 120