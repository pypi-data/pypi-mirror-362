[build-system]
requires = ["setuptools>=59.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gst"
version = "0.1.11"
description = "Git status tool"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Chris Gravel", email = "cpagravel@gmail.com"}
]
keywords = ["git", "git status", "git workflow"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Version Control :: Git",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.6"

[project.urls]
Homepage = "https://github.com/cpagravel/gst-python"
Repository = "https://github.com/cpagravel/gst-python"
Download = "https://github.com/cpagravel/gst-python/archive/0.1.11.tar.gz"

[project.scripts]
gst = "gst:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.setuptools]
py-modules = ["gst"]

# Using ruff for both formatting and linting with 2-space indentation

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Assume Python 3.8+ (minimum supported version)
target-version = "py38"
indent-width = 2  # ‚Üê Change from default 4 to 2

[tool.ruff.format]
indent-style = "space"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Also enable pep8-naming (`N`) for naming conventions
select = ["E", "F", "N"]

# Ignore some common issues
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Per-file configuration
[tool.ruff.lint.per-file-ignores]
"scripts/generate_svg_examples.py" = ["E501"]  # Ignore line length for SVG generation script

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10