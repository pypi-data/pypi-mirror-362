name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest

    - name: Install dependencies
      run: |
        uv pip install -e ".[dev]" --system

    - name: Install type stubs
      run: |
        uv pip install types-requests --system

    - name: Generate credentials file
      env:
        BICAM_SECRET_KEY: ${{ secrets.BICAM_SECRET_KEY }}
        BICAM_CREDENTIAL_ENDPOINT: ${{ secrets.BICAM_CREDENTIAL_ENDPOINT }}
      run: |
        python scripts/credentials/3_build_credentials.py
        uv run ruff format bicam/_auth.py

    # - name: Verify dataset checksums
    #   env:
    #     BICAM_SECRET_KEY: ${{ secrets.BICAM_SECRET_KEY }}
    #     BICAM_CREDENTIAL_ENDPOINT: ${{ secrets.BICAM_CREDENTIAL_ENDPOINT }}
    #   run: |
    #     python scripts/verify_checksums.py
    #   continue-on-error: true

    - name: Run linting
      run: |
        uv run ruff check bicam/ tests/ scripts/*.py
        uv run ruff format --check bicam/ tests/ scripts/*.py

    - name: Run type checking
      run: |
        uv run mypy bicam/

    - name: Run tests
      run: |
        uv run pytest tests/ -v --cov=bicam --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest

    - name: Install dependencies
      run: |
        uv pip install -e ".[dev]" --system

    - name: Install type stubs
      run: |
        uv pip install types-requests --system

    - name: Build package
      env:
        BICAM_SECRET_KEY: dummy_secret
        BICAM_CREDENTIAL_ENDPOINT: https://dummy.execute-api.region.amazonaws.com/prod/get-credentials
        PYPI_API_TOKEN: dummy_token
      run: |
        python scripts/credentials/3_build_credentials.py
        uv build
        rm -f bicam/_auth.py
      continue-on-error: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
