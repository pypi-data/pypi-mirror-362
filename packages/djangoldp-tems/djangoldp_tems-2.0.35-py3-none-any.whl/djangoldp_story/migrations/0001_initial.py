# Generated by Django 4.2.16 on 2025-03-17 11:22

from django.db import migrations, models
import django.db.models.deletion
import djangoldp.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("djangoldp_mediaobject", "0001_initial"),
        (
            "djangoldp_tems",
            "0004_temsimage_temslocation_temsoffer_delete_temsimages_and_more",
        ),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="StoryType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
            ],
            options={
                "verbose_name": "TEMS Type",
                "verbose_name_plural": "TEMS Types",
                "abstract": False,
                "default_permissions": {"add", "change", "view", "control", "delete"},
                "rdf_type": "tems:Type",
                "container_path": "/objects/types/mediaobjects/stories/",
                "serializer_fields": ["@id", "creation_date", "update_date", "name"],
                "nested_fields": [],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="StoryObject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
                ("description", models.TextField(blank=True, default="", null=True)),
                (
                    "copyright",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
                (
                    "website",
                    models.CharField(
                        blank=True, default="", max_length=2000, null=True
                    ),
                ),
                ("publication_date", models.DateTimeField(null=True)),
                (
                    "editor",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "original_languages",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "contributors",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "publication_service",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "assets",
                    models.ManyToManyField(
                        blank=True, to="djangoldp_mediaobject.mediaobjectasset"
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(blank=True, to="djangoldp_tems.temsimage"),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True, to="djangoldp_mediaobject.mediaobjectkeyword"
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="djangoldp_mediaobject.mediaobjectlanguage",
                    ),
                ),
                (
                    "licences",
                    models.ManyToManyField(blank=True, to="djangoldp_tems.temslicence"),
                ),
                (
                    "owners",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_story",
                        to="auth.group",
                    ),
                ),
                (
                    "providers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="catalog_story",
                        to="djangoldp_tems.temsprovider",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="djangoldp_story.storytype",
                    ),
                ),
            ],
            options={
                "verbose_name": "TEMS Story",
                "verbose_name_plural": "TEMS Stories",
                "abstract": False,
                "default_permissions": {"add", "change", "view", "control", "delete"},
                "rdf_type": ["tems:Object", "tems:MediaObject", "tems:Story"],
                "container_path": "/objects/mediaobjects/stories/",
                "serializer_fields": [
                    "@id",
                    "creation_date",
                    "update_date",
                    "title",
                    "description",
                    "copyright",
                    "website",
                    "licences",
                    "images",
                    "keywords",
                    "publication_date",
                    "language",
                    "assets",
                    "editor",
                    "original_languages",
                    "contributors",
                    "publication_service",
                    "type",
                    "providers",
                    "owners",
                ],
                "nested_fields": [
                    "licences",
                    "assets",
                    "images",
                    "keywords",
                    "language",
                    "type",
                    "providers",
                ],
                "depth": 0,
            },
        ),
    ]
