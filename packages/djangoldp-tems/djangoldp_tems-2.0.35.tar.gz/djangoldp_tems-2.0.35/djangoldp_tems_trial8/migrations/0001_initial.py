# Generated by Django 4.2.16 on 2024-11-11 11:39

import django.db.models.deletion
import djangoldp.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("djangoldp_tems", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Trial8Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
            ],
            options={
                "verbose_name": "TEMS Category",
                "verbose_name_plural": "TEMS Categories",
                "abstract": False,
                "default_permissions": {"add", "view", "delete", "control", "change"},
                "rdf_type": "tems:Category",
                "serializer_fields": ["@id", "creation_date", "update_date", "name"],
                "nested_fields": [],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Trial8Compatibility",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
            ],
            options={
                "verbose_name": "TEMS Compatibility",
                "verbose_name_plural": "TEMS Compatibilities",
                "abstract": False,
                "default_permissions": {"add", "view", "delete", "control", "change"},
                "rdf_type": "tems:Compatibility",
                "serializer_fields": ["@id", "creation_date", "update_date", "name"],
                "nested_fields": [],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Trial8Format",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
            ],
            options={
                "verbose_name": "TEMS Format",
                "verbose_name_plural": "TEMS Formats",
                "abstract": False,
                "default_permissions": {"add", "view", "delete", "control", "change"},
                "rdf_type": "tems:Format",
                "serializer_fields": ["@id", "creation_date", "update_date", "name"],
                "nested_fields": [],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Trial8Keyword",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
            ],
            options={
                "verbose_name": "TEMS Keyword",
                "verbose_name_plural": "TEMS Keywords",
                "abstract": False,
                "default_permissions": {"add", "view", "delete", "control", "change"},
                "rdf_type": "tems:Keyword",
                "serializer_fields": ["@id", "creation_date", "update_date", "name"],
                "nested_fields": [],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Trial8Location",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
                (
                    "address",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
                (
                    "city",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                (
                    "state",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                (
                    "country",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "elevation",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        help_text="Elevation in meters",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "TEMS Location",
                "verbose_name_plural": "TEMS Locations",
                "abstract": False,
                "default_permissions": {"add", "view", "delete", "control", "change"},
                "rdf_type": "tems:Location",
                "serializer_fields": [
                    "@id",
                    "creation_date",
                    "update_date",
                    "name",
                    "address",
                    "city",
                    "state",
                    "country",
                    "latitude",
                    "longitude",
                    "elevation",
                ],
                "nested_fields": [],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Trial8Object",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
                ("description", models.TextField(blank=True, default="", null=True)),
                (
                    "copyright",
                    models.CharField(blank=True, default="", max_length=254, null=True),
                ),
                (
                    "website",
                    models.CharField(
                        blank=True, default="", max_length=2000, null=True
                    ),
                ),
                (
                    "identifier",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "historical_period",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                ("polygons", models.IntegerField(blank=True, default=0, null=True)),
                ("summits", models.IntegerField(blank=True, default=0, null=True)),
                ("geometry", models.TextField(blank=True, default="", null=True)),
                ("uv_layers", models.BooleanField(default=False)),
                ("vertex_colors", models.BooleanField(default=False)),
                ("rigged_geometry", models.BooleanField(default=False)),
                (
                    "file_size",
                    models.PositiveBigIntegerField(blank=True, default=0, null=True),
                ),
                ("vertives", models.IntegerField(blank=True, default=0, null=True)),
                ("textures", models.IntegerField(blank=True, default=0, null=True)),
                ("materials", models.IntegerField(blank=True, default=0, null=True)),
                ("animations", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "original_material",
                    models.TextField(blank=True, default="", null=True),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="djangoldp_tems_trial8.trial8category",
                    ),
                ),
                (
                    "compatibilities",
                    models.ManyToManyField(
                        blank=True, to="djangoldp_tems_trial8.trial8compatibility"
                    ),
                ),
                (
                    "format",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="djangoldp_tems_trial8.trial8format",
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(blank=True, to="djangoldp_tems.temsimages"),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True, to="djangoldp_tems_trial8.trial8keyword"
                    ),
                ),
                (
                    "licences",
                    models.ManyToManyField(blank=True, to="djangoldp_tems.temslicence"),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="djangoldp_tems_trial8.trial8location",
                    ),
                ),
            ],
            options={
                "verbose_name": "TEMS Trial 8 Object",
                "verbose_name_plural": "TEMS Trial 8 Objects",
                "abstract": False,
                "default_permissions": {"add", "view", "delete", "control", "change"},
                "rdf_type": "tems:Object",
                "serializer_fields": [
                    "@id",
                    "creation_date",
                    "update_date",
                    "title",
                    "description",
                    "copyright",
                    "website",
                    "licences",
                    "images",
                    "identifier",
                    "historical_period",
                    "polygons",
                    "summits",
                    "geometry",
                    "uv_layers",
                    "vertex_colors",
                    "rigged_geometry",
                    "file_size",
                    "vertives",
                    "textures",
                    "materials",
                    "animations",
                    "original_material",
                    "format",
                    "category",
                    "location",
                    "keywords",
                    "compatibilities",
                ],
                "nested_fields": [
                    "licences",
                    "images",
                    "format",
                    "category",
                    "location",
                    "keywords",
                    "compatibilities",
                ],
                "depth": 0,
            },
        ),
    ]
