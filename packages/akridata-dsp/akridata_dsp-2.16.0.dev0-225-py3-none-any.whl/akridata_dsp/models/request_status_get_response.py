# coding: utf-8

"""
    DSP Backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from akridata_dsp.configuration import Configuration


class RequestStatusGetResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'reference_pf_create': 'ReferencePfCreateStatus',
        'pf_create': 'PfCreateStatus',
        'train_coreset': 'TrainCoresetStatus',
        'featurization': 'FeaturizationStatus',
        'embed': 'EmbedderStatus',
        'cluster': 'ClusterStatus',
        'merge_pf': 'MergePFStatus',
        'statistics': 'StatisticsStatus',
        'saliency_map': 'SaliencyMapGenerationStatus'
    }

    attribute_map = {
        'reference_pf_create': 'reference_pf_create',
        'pf_create': 'pf_create',
        'train_coreset': 'train_coreset',
        'featurization': 'featurization',
        'embed': 'embed',
        'cluster': 'cluster',
        'merge_pf': 'merge_pf',
        'statistics': 'statistics',
        'saliency_map': 'saliency_map'
    }

    def __init__(self, reference_pf_create=None, pf_create=None, train_coreset=None, featurization=None, embed=None, cluster=None, merge_pf=None, statistics=None, saliency_map=None, local_vars_configuration=None):  # noqa: E501
        """RequestStatusGetResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._reference_pf_create = None
        self._pf_create = None
        self._train_coreset = None
        self._featurization = None
        self._embed = None
        self._cluster = None
        self._merge_pf = None
        self._statistics = None
        self._saliency_map = None
        self.discriminator = None

        if reference_pf_create is not None:
            self.reference_pf_create = reference_pf_create
        if pf_create is not None:
            self.pf_create = pf_create
        if train_coreset is not None:
            self.train_coreset = train_coreset
        if featurization is not None:
            self.featurization = featurization
        if embed is not None:
            self.embed = embed
        if cluster is not None:
            self.cluster = cluster
        if merge_pf is not None:
            self.merge_pf = merge_pf
        if statistics is not None:
            self.statistics = statistics
        if saliency_map is not None:
            self.saliency_map = saliency_map

    @property
    def reference_pf_create(self):
        """Gets the reference_pf_create of this RequestStatusGetResponse.  # noqa: E501


        :return: The reference_pf_create of this RequestStatusGetResponse.  # noqa: E501
        :rtype: ReferencePfCreateStatus
        """
        return self._reference_pf_create

    @reference_pf_create.setter
    def reference_pf_create(self, reference_pf_create):
        """Sets the reference_pf_create of this RequestStatusGetResponse.


        :param reference_pf_create: The reference_pf_create of this RequestStatusGetResponse.  # noqa: E501
        :type reference_pf_create: ReferencePfCreateStatus
        """

        self._reference_pf_create = reference_pf_create

    @property
    def pf_create(self):
        """Gets the pf_create of this RequestStatusGetResponse.  # noqa: E501


        :return: The pf_create of this RequestStatusGetResponse.  # noqa: E501
        :rtype: PfCreateStatus
        """
        return self._pf_create

    @pf_create.setter
    def pf_create(self, pf_create):
        """Sets the pf_create of this RequestStatusGetResponse.


        :param pf_create: The pf_create of this RequestStatusGetResponse.  # noqa: E501
        :type pf_create: PfCreateStatus
        """

        self._pf_create = pf_create

    @property
    def train_coreset(self):
        """Gets the train_coreset of this RequestStatusGetResponse.  # noqa: E501


        :return: The train_coreset of this RequestStatusGetResponse.  # noqa: E501
        :rtype: TrainCoresetStatus
        """
        return self._train_coreset

    @train_coreset.setter
    def train_coreset(self, train_coreset):
        """Sets the train_coreset of this RequestStatusGetResponse.


        :param train_coreset: The train_coreset of this RequestStatusGetResponse.  # noqa: E501
        :type train_coreset: TrainCoresetStatus
        """

        self._train_coreset = train_coreset

    @property
    def featurization(self):
        """Gets the featurization of this RequestStatusGetResponse.  # noqa: E501


        :return: The featurization of this RequestStatusGetResponse.  # noqa: E501
        :rtype: FeaturizationStatus
        """
        return self._featurization

    @featurization.setter
    def featurization(self, featurization):
        """Sets the featurization of this RequestStatusGetResponse.


        :param featurization: The featurization of this RequestStatusGetResponse.  # noqa: E501
        :type featurization: FeaturizationStatus
        """

        self._featurization = featurization

    @property
    def embed(self):
        """Gets the embed of this RequestStatusGetResponse.  # noqa: E501


        :return: The embed of this RequestStatusGetResponse.  # noqa: E501
        :rtype: EmbedderStatus
        """
        return self._embed

    @embed.setter
    def embed(self, embed):
        """Sets the embed of this RequestStatusGetResponse.


        :param embed: The embed of this RequestStatusGetResponse.  # noqa: E501
        :type embed: EmbedderStatus
        """

        self._embed = embed

    @property
    def cluster(self):
        """Gets the cluster of this RequestStatusGetResponse.  # noqa: E501


        :return: The cluster of this RequestStatusGetResponse.  # noqa: E501
        :rtype: ClusterStatus
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this RequestStatusGetResponse.


        :param cluster: The cluster of this RequestStatusGetResponse.  # noqa: E501
        :type cluster: ClusterStatus
        """

        self._cluster = cluster

    @property
    def merge_pf(self):
        """Gets the merge_pf of this RequestStatusGetResponse.  # noqa: E501


        :return: The merge_pf of this RequestStatusGetResponse.  # noqa: E501
        :rtype: MergePFStatus
        """
        return self._merge_pf

    @merge_pf.setter
    def merge_pf(self, merge_pf):
        """Sets the merge_pf of this RequestStatusGetResponse.


        :param merge_pf: The merge_pf of this RequestStatusGetResponse.  # noqa: E501
        :type merge_pf: MergePFStatus
        """

        self._merge_pf = merge_pf

    @property
    def statistics(self):
        """Gets the statistics of this RequestStatusGetResponse.  # noqa: E501


        :return: The statistics of this RequestStatusGetResponse.  # noqa: E501
        :rtype: StatisticsStatus
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this RequestStatusGetResponse.


        :param statistics: The statistics of this RequestStatusGetResponse.  # noqa: E501
        :type statistics: StatisticsStatus
        """

        self._statistics = statistics

    @property
    def saliency_map(self):
        """Gets the saliency_map of this RequestStatusGetResponse.  # noqa: E501


        :return: The saliency_map of this RequestStatusGetResponse.  # noqa: E501
        :rtype: SaliencyMapGenerationStatus
        """
        return self._saliency_map

    @saliency_map.setter
    def saliency_map(self, saliency_map):
        """Sets the saliency_map of this RequestStatusGetResponse.


        :param saliency_map: The saliency_map of this RequestStatusGetResponse.  # noqa: E501
        :type saliency_map: SaliencyMapGenerationStatus
        """

        self._saliency_map = saliency_map

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RequestStatusGetResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RequestStatusGetResponse):
            return True

        return self.to_dict() != other.to_dict()
