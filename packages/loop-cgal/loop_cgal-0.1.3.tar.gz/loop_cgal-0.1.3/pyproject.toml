[build-system]
requires = [
    "scikit-build-core>=0.3.3",
    "pybind11>=2.10.0",
    "oldest-supported-numpy",
]
build-backend = "scikit_build_core.build"


[project]
authors = [{ name = "Lachlan Grose", email = "lachlan.grose@monash.edu" }]
name = "loop_cgal"
version = "0.1.3"
description = "python bindings for cgal for implicit model meshing"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = ['pyvista']

[tool.scikit-build]
wheel.expand-macos-universal-tags = true



[tool.cibuildwheel.pyodide]
environment.CFLAGS = "-fexceptions"
environment.LDFLAGS = "-fexceptions"
build-frontend = { name = "build", args = ["--exports", "whole_archive"] }

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
ignore = [
    "PLR09",   # Too many X
    "PLR2004", # Magic comparison
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[tool.cibuildwheel]
build = "cp39-* cp310-* cp311-* cp312-* cp313-*"
skip = "*-win32 *-manylinux_i686 *-musllinux_*"

[tool.cibuildwheel.linux]
before-all = "yum install python3-devel -y"
manylinux-x86_64-image = "lachlangrose/manylinuxeigencgal"
[tool.cibuildwheel.macos]
archs = ["x86_64","arm64"] 