[tool.poetry]
name = "eodm"
version = "0.2.0"
description = "Library and extensible CLI application for ETL (extract, transform, load) operations on EO data."
authors = ["Nikola Jankovic <jankovic.gd@gmail.com>"]
readme = "README.md"
packages = [{include = "eodm", from="src"}]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.27.0"
typer = "^0.12.3"
python-dotenv = "^1.0.1"
fsspec = "^2024.3.1"
s3fs = "^2024.3.1"
pystac = "^1.10.0"
pystac-client = "^0.7.7"
python-dateutil = "^2.9.0.post0"
lxml = "^5.3.0"
geojson-pydantic = "^1.1.2"
rio-stac = "^0.10.1"
rasterio = "^1.4.3"
owslib = "^0.34.1"
python-json-logger = "^3.3.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
mkdocs = "^1.6.0"
mypy = "^1.10.0"
ruff = "^0.4.4"
mkdocs-material = "^9.5.23"
mkdocstrings = {extras = ["python"], version = "^0.25.1"}
types-python-dateutil = "^2.9.0.20240316"
commitizen = "^3.30.1"
pre-commit = "^4.0.1"
mkdocs-get-deps = "^0.2.0"
mkdocs-autorefs = "^1.2.0"
mkdocs-material-extensions = "^1.3.1"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
respx = "^0.21.1"
types-lxml = "^2024.12.13"
pipdeptree = "^2.26.1"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
eodm = "eodm.__main__:app"

[tool.ruff]
line-length = 90
indent-width = 4

target-version = "py310"


[tool.mypy]
ignore_missing_imports = true
exclude = [
    ".tox",
    "build",
    "dist",
    ".eggs",
    ".venv",
    "tests",
    "__main__.py"
]

[[tool.mypy.overrides]]
module = ["pkg_resources"]
ignore_missing_imports = true


[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    ]

[tool.coverage.run]
omit = [
    "*/__init__.py",
    "*/__main__.py",
    "src/eodm/cli/_errors.py",
    "src/eodm/cli/_globals.py",
    ]
