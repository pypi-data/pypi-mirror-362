name: "Release"

permissions:
  contents: write    # create release + upload assets

concurrency:
  group: release
  cancel-in-progress: false   # let releases finish

env:
  PYTHON_VERSION: "3.13"

on:
  push:
    tags:
      - 'v[0-9]*'          # semver tags
  workflow_dispatch:

jobs:
  build-release-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true

      - name: "Install dependencies"
        run: uv sync --frozen

      - name: "Build package"
        run: uv build

      - name: Determine version (git tag)
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME}" >>"$GITHUB_OUTPUT"

      - name: "Verify build artifacts"
        run: ls -la dist/

      - name: "Create GitHub Release"
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "Release ${{ steps.version.outputs.version }}"
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            dist/*.whl

      - name: "Publish to PyPI"
        run: uv publish --token ${{ secrets.AIND_PYPI_TOKEN }}
