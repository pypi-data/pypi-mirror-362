Metadata-Version: 2.4
Name: kiara_plugin.dev
Version: 0.1.0
Summary: A kiara plugin to help with development related tasks (modules, pipelines, widgets,...).
Project-URL: homepage, https://github.com/DHARPA-Project/kiara_plugin.dev
Project-URL: documentation, https://DHARPA-Project.github.io/kiara_plugin.dev
Project-URL: repository, https://github.com/DHARPA-Project/kiara_plugin.dev
Author-email: Markus Binsteiner <markus@frkl.dev>
License: MPL-2.0
License-File: LICENSE
Keywords: kiara,kiara-plugin
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9
Requires-Dist: build>=1.2.2.post1
Requires-Dist: diskcache>=5.6.3
Requires-Dist: kiara-plugin-core-types<0.6.0,>=0.5.2
Requires-Dist: kiara<0.6.0,>=0.5.15
Requires-Dist: license-expression>=30.4.3
Provides-Extra: jupyter
Requires-Dist: kiara[jupyter]; extra == 'jupyter'
Provides-Extra: marimo
Requires-Dist: kiara[marimo]; extra == 'marimo'
Description-Content-Type: text/markdown

[![PyPI status](https://img.shields.io/pypi/status/kiara_plugin.dev.svg)](https://pypi.python.org/pypi/kiara_plugin.dev/)
[![PyPI version](https://img.shields.io/pypi/v/kiara_plugin.dev.svg)](https://pypi.python.org/pypi/kiara_plugin.dev/)
[![PyPI pyversions](https://img.shields.io/pypi/pyversions/kiara_plugin.dev.svg)](https://pypi.python.org/pypi/kiara_plugin.dev/)
[![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FDHARPA-Project%2Fkiara%2Fbadge%3Fref%3Ddevelop&style=flat)](https://actions-badge.atrox.dev/DHARPA-Project/kiara_plugin.dev/goto?ref=develop)
[![Coverage Status](https://coveralls.io/repos/github/DHARPA-Project/kiara_plugin.dev/badge.svg?branch=develop)](https://coveralls.io/github/DHARPA-Project/kiara_plugin.dev?branch=develop)
[![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)

# [**kiara**](https://dharpa.org/kiara.documentation) plugin: (dev)

A kiara plugin to help with development related tasks (modules, pipelines, widgets,...).

 - Documentation: [https://DHARPA-Project.github.io/kiara_plugin.dev](https://DHARPA-Project.github.io/kiara_plugin.dev)
 - Code: [https://github.com/DHARPA-Project/kiara_plugin.dev](https://github.com/DHARPA-Project/kiara_plugin.dev)
 - `kiara`: [https://docs.dharpa.org](https://docs.dharpa.org)

## Description

TODO

## Development

### Requirements

- uv ( https://docs.astral.sh/uv/ )
- git
- make (on Linux / Mac OS X -- optional)

### Check out the source code & enter the project directory

```
git clone https://github.com/DHARPA-Project/kiara_plugin.dev
cd kiara_plugin.dev
```

### Prepare development environment

The recommended way to setup a development environment is to use [uv](https://docs.astral.sh/uv/). Check out [their install instructions](https://docs.astral.sh/uv/getting-started/installation/).

Once you have `uv` installed, you can either run `kiara` using the `uv run` command:

```
uv run kiara module list
```

or, activate the virtual environment and run `kiara` directly:

```
uv sync  # to make sure the virtualenv exists (and is up to date)
source .venv/bin/activate
kiara module list
```

### Running pre-defined development-related tasks

The included `Makefile` file includes some useful tasks that help with development. This requires `uv` and the `make` tool to be
installed, which should be the case for Linux & Mac OS X systems.

- `make test`: runs the unit tests
- `make mypy`: run mypy checks
- `make lint`: run the `ruff` linter on the source code
- `make format`: run the `ruff` formatter on the source code (similar to `black`)

Alternatively, if you don't have the `make` command available, you can use `uv` directly to run those tasks:

- `uv run pytest tests`
- `uv run mypy src/`
- `uv run ruff check --fix src/`
- `uv run ruff format src/`

## Copyright & license

This project is MPL v2.0 licensed, for the license text please check the [LICENSE](/LICENSE) file in this repository.
