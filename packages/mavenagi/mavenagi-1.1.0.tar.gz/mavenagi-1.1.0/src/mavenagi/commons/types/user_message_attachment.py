# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class UserMessageAttachment(UniversalBaseModel):
    type: str = pydantic.Field()
    """
    The mime-type of the attachment. Supported types are:
    - image/jpeg
    - image/jpg
    - image/png
    - image/gif
    - image/webp
    - application/pdf
    - audio/aac
    - audio/mpeg
    - audio/mp4
    - video/mp4
    """

    url: str = pydantic.Field()
    """
    The URL to access the attachment, The URL will be valid for 20 minutes.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    An optional name for the attachment.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
