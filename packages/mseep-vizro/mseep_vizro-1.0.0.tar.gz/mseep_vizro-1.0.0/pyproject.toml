[tool.bandit]
exclude_dirs = [
    "tests",
]

[tool.codespell]
builtin = "clear,rare,en-GB_to_en-US"
ignore-words-list = "grey,ned,sav,Thur"
skip = "*.min.css.map,*.min.css,.vale/*, *assets/*,.github/*"

[tool.mypy]
check_untyped_defs = true
disable_error_code = "call-arg"
disallow_any_generics = true
disallow_incomplete_defs = false
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
disallow_untyped_defs = false
no_implicit_optional = true
no_implicit_reexport = false
plugins = [
    "pydantic.mypy",
]
strict_equality = true
warn_redundant_casts = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true
overrides = [
    { disable_error_code = "name-defined", module = "vizro.models.types" },
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = [
    "D104",
    "D401",
    "D407",
    "PD901",
    "PLC0415",
]
select = [
    "E",
    "W",
    "F",
    "I",
    "D",
    "T201",
    "C4",
    "RUF",
    "PL",
    "PD",
    "UP",
    "PERF",
    "FURB",
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
    "PLR2004",
    "S101",
    "TID252",
    "D100",
    "D101",
    "D102",
    "D103",
    "PLC1901",
    "RUF012",
]
"__init__.py" = [
    "E402",
    "F401",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 6

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[build-system]
requires = [
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"
