# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from frequenz.api.weather.v1 import weather_pb2 as frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2


class WeatherForecastServiceStub(object):
    """Service provides operations related to retrieving weather forecasts for
    locations.

    The forecasts are updated regularly, and the service will stream the latest
    available data unless a specific time range is requested.
    !!! note
    Weather forecasts are inherently uncertain and actual conditions may
    vary. Use the data responsibly.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReceiveHistoricalWeatherForecast = channel.unary_stream(
                '/frequenz.api.weather.v1.WeatherForecastService/ReceiveHistoricalWeatherForecast',
                request_serializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveHistoricalWeatherForecastRequest.SerializeToString,
                response_deserializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveHistoricalWeatherForecastResponse.FromString,
                )
        self.ReceiveLiveWeatherForecast = channel.unary_stream(
                '/frequenz.api.weather.v1.WeatherForecastService/ReceiveLiveWeatherForecast',
                request_serializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveLiveWeatherForecastRequest.SerializeToString,
                response_deserializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveLiveWeatherForecastResponse.FromString,
                )


class WeatherForecastServiceServicer(object):
    """Service provides operations related to retrieving weather forecasts for
    locations.

    The forecasts are updated regularly, and the service will stream the latest
    available data unless a specific time range is requested.
    !!! note
    Weather forecasts are inherently uncertain and actual conditions may
    vary. Use the data responsibly.
    """

    def ReceiveHistoricalWeatherForecast(self, request, context):
        """Returns historical weather forecast features for a geo location for a
        specified time range.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveLiveWeatherForecast(self, request, context):
        """Streams live weather forecast features for a geo location as they become
        available. Initially, the most recent forecast will be streamed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WeatherForecastServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReceiveHistoricalWeatherForecast': grpc.unary_stream_rpc_method_handler(
                    servicer.ReceiveHistoricalWeatherForecast,
                    request_deserializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveHistoricalWeatherForecastRequest.FromString,
                    response_serializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveHistoricalWeatherForecastResponse.SerializeToString,
            ),
            'ReceiveLiveWeatherForecast': grpc.unary_stream_rpc_method_handler(
                    servicer.ReceiveLiveWeatherForecast,
                    request_deserializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveLiveWeatherForecastRequest.FromString,
                    response_serializer=frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveLiveWeatherForecastResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'frequenz.api.weather.v1.WeatherForecastService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WeatherForecastService(object):
    """Service provides operations related to retrieving weather forecasts for
    locations.

    The forecasts are updated regularly, and the service will stream the latest
    available data unless a specific time range is requested.
    !!! note
    Weather forecasts are inherently uncertain and actual conditions may
    vary. Use the data responsibly.
    """

    @staticmethod
    def ReceiveHistoricalWeatherForecast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/frequenz.api.weather.v1.WeatherForecastService/ReceiveHistoricalWeatherForecast',
            frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveHistoricalWeatherForecastRequest.SerializeToString,
            frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveHistoricalWeatherForecastResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveLiveWeatherForecast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/frequenz.api.weather.v1.WeatherForecastService/ReceiveLiveWeatherForecast',
            frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveLiveWeatherForecastRequest.SerializeToString,
            frequenz_dot_api_dot_weather_dot_v1_dot_weather__pb2.ReceiveLiveWeatherForecastResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
