# This file was autogenerated by uv via the following command:
#    uv pip compile pyproject.toml -o requirements.txt
certifi==2025.7.14
    # via requests
charset-normalizer==3.4.2
    # via requests
clusterscope==0.0.9
    # via torchtel (pyproject.toml)
filelock==3.18.0
    # via torch
fsspec==2025.5.1
    # via torch
googleapis-common-protos==1.70.0
    # via
    #   opentelemetry-exporter-otlp-proto-grpc
    #   opentelemetry-exporter-otlp-proto-http
grpcio==1.73.1
    # via opentelemetry-exporter-otlp-proto-grpc
idna==3.10
    # via requests
importlib-metadata==8.7.0
    # via opentelemetry-api
jinja2==3.1.6
    # via torch
markupsafe==3.0.2
    # via jinja2
mpmath==1.3.0
    # via sympy
networkx==3.4.2
    # via torch
nvidia-cublas-cu12==12.6.4.1
    # via
    #   nvidia-cudnn-cu12
    #   nvidia-cusolver-cu12
    #   torch
nvidia-cuda-cupti-cu12==12.6.80
    # via torch
nvidia-cuda-nvrtc-cu12==12.6.77
    # via torch
nvidia-cuda-runtime-cu12==12.6.77
    # via torch
nvidia-cudnn-cu12==9.5.1.17
    # via torch
nvidia-cufft-cu12==11.3.0.4
    # via torch
nvidia-cufile-cu12==1.11.1.6
    # via torch
nvidia-curand-cu12==10.3.7.77
    # via torch
nvidia-cusolver-cu12==11.7.1.2
    # via torch
nvidia-cusparse-cu12==12.5.4.2
    # via
    #   nvidia-cusolver-cu12
    #   torch
nvidia-cusparselt-cu12==0.6.3
    # via torch
nvidia-nccl-cu12==2.26.2
    # via torch
nvidia-nvjitlink-cu12==12.6.85
    # via
    #   nvidia-cufft-cu12
    #   nvidia-cusolver-cu12
    #   nvidia-cusparse-cu12
    #   torch
nvidia-nvtx-cu12==12.6.77
    # via torch
opentelemetry-api==1.35.0
    # via
    #   torchtel (pyproject.toml)
    #   opentelemetry-exporter-otlp-proto-grpc
    #   opentelemetry-exporter-otlp-proto-http
    #   opentelemetry-instrumentation
    #   opentelemetry-sdk
    #   opentelemetry-semantic-conventions
opentelemetry-exporter-otlp==1.35.0
    # via torchtel (pyproject.toml)
opentelemetry-exporter-otlp-proto-common==1.35.0
    # via
    #   opentelemetry-exporter-otlp-proto-grpc
    #   opentelemetry-exporter-otlp-proto-http
opentelemetry-exporter-otlp-proto-grpc==1.35.0
    # via opentelemetry-exporter-otlp
opentelemetry-exporter-otlp-proto-http==1.35.0
    # via opentelemetry-exporter-otlp
opentelemetry-instrumentation==0.56b0
    # via torchtel (pyproject.toml)
opentelemetry-proto==1.35.0
    # via
    #   opentelemetry-exporter-otlp-proto-common
    #   opentelemetry-exporter-otlp-proto-grpc
    #   opentelemetry-exporter-otlp-proto-http
opentelemetry-sdk==1.35.0
    # via
    #   torchtel (pyproject.toml)
    #   opentelemetry-exporter-otlp-proto-grpc
    #   opentelemetry-exporter-otlp-proto-http
opentelemetry-semantic-conventions==0.56b0
    # via
    #   opentelemetry-instrumentation
    #   opentelemetry-sdk
packaging==25.0
    # via opentelemetry-instrumentation
protobuf==6.31.1
    # via
    #   googleapis-common-protos
    #   opentelemetry-proto
requests==2.32.4
    # via opentelemetry-exporter-otlp-proto-http
setuptools==80.9.0
    # via triton
sympy==1.14.0
    # via torch
torch==2.7.1
    # via torchtel (pyproject.toml)
triton==3.3.1
    # via torch
typing-extensions==4.14.1
    # via
    #   opentelemetry-api
    #   opentelemetry-exporter-otlp-proto-grpc
    #   opentelemetry-exporter-otlp-proto-http
    #   opentelemetry-sdk
    #   opentelemetry-semantic-conventions
    #   torch
urllib3==2.5.0
    # via requests
wrapt==1.17.2
    # via opentelemetry-instrumentation
zipp==3.23.0
    # via importlib-metadata
