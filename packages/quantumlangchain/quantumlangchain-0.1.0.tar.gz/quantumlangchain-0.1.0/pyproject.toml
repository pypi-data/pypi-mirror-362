[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quantumlangchain"
version = "0.1.0"
description = "🔐 LICENSED: A composable framework for quantum-inspired reasoning, entangled memory systems, and multi-agent cooperation"
readme = "README.md"
license = { text = "Commercial License" }
authors = [
    { name = "Krishna Bajpai", email = "bajpaikrishna715@gmail.com" }
]
maintainers = [
    { name = "Krishna Bajpai", email = "bajpaikrishna715@gmail.com" }
]
keywords = ["quantum", "langchain", "ai", "quantum-computing", "agents", "memory", "entanglement", "licensed", "commercial"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "qiskit>=0.45.0",
    "pennylane>=0.32.0",
    "amazon-braket-sdk>=1.65.0",
    "cirq>=1.2.0",
    "qulacs>=0.6.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "langchain>=0.1.0",
    "langgraph>=0.0.40",
    "chromadb>=0.4.0",
    "faiss-cpu>=1.7.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "networkx>=3.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0",
    "asyncio-pool>=0.6.0",
    "matplotlib>=3.7.0",
    "plotly>=5.15.0",
    "jupyter>=1.0.0",
    "rich>=13.0.0",
    "tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.0.280",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings[python]>=0.22.0",
    "mkdocs-jupyter>=0.24.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]
all = [
    "quantumlangchain[dev,docs]",
    "pinecone-client>=2.2.0",
    "qdrant-client>=1.4.0",
    "autogen-agentchat>=0.2.0",
    "crewai>=0.1.0",
    "haystack-ai>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/krish567366/Quantum-Langchain"
Documentation = "https://krish567366.github.io/Quantum-Langchain"
Repository = "https://github.com/krish567366/Quantum-Langchain"
Issues = "https://github.com/krish567366/Quantum-Langchain/issues"

[project.scripts]
qlchain = "quantumlangchain.cli:main"
quantum-license = "quantumlangchain.cli.license_cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["quantumlangchain*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=quantumlangchain",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "quantum: marks tests that require quantum backends",
]
