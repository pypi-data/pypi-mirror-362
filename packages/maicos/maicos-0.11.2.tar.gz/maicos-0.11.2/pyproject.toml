[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = [
    "cython>=0.28",
    "packaging",
    # numpy requirement for wheel builds for distribution on PyPI - building
    # against 2.x yields wheels that are also compatible with numpy 1.x at
    # runtime.
    # Note that building against numpy 1.x works fine too - users and
    # redistributors can do this by installing the numpy version they like and
    # disabling build isolation.
    "numpy>=2.0.0",
    # Set to minimum version of setuptools that allows pyproject.toml
    "setuptools>=77",
    "setuptools-git-versioning<2",
    "versioneer[toml]",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
authors = [{name = "MAICoS Developer Team"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Shells",
]
description = "Analyse molecular dynamics simulations of interfacial and confined systems."
dynamic = ["version"]
keywords = [
    "Science",
    "Molecular Dynamics",
    "Confined Systems",
    "MDAnalysis",
]
license = "GPL-3.0-or-later"
maintainers = [
    {name = "Philip Loche"},
    {name = "Henrik StooÃŸ"},
    {name = "Alexander Schlaich"}
]
name = "maicos"
readme = "README.rst"
requires-python = ">=3.10"
dependencies = [
    "mdacli>=0.1.28",
    "MDAnalysis>=2.8.0",
    "typing_extensions",
]

[project.optional-dependencies]
examples = ["matplotlib"]

[project.urls]
homepage = "https://www.maicos-analysis.org"
documentation = "https://maicos-analysis.org"
repository = "https://github.com/maicos-devel/maicos"
changelog = "https://maicos-analysis.org/stable/get-started/changelog.html"
issues = "https://github.com/maicos-devel/maicos/issues"
discord = "https://discord.gg/mnrEQWVAed"
twitter = "https://twitter.com/maicos_analysis"

[project.scripts]
maicos = "maicos.__main__:main"

[tool.check-manifest]
# ignore files missing in VCS
ignore = ["src/maicos/lib/_cmath.c"]

[tool.mypy]
exclude = ["docs/src/examples"]
follow_imports = 'skip'
ignore_missing_imports = true

[tool.coverage.paths]
source = ["src/maicos", "*/site-packages"]

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = ["if __name__ == .__main__.:"]

[tool.pytest.ini_options]
testpaths = "tests"
addopts = [
    "--cov",
    "--cov-append",
    "--cov-report=",
    "--import-mode=append",
    "--disable-warnings",
]

[tool.ruff]
exclude = ["versioneer.py", "docs/src/examples/**", "src/maicos/_version.py"]
line-length = 88

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules for additional details
extend-select = [
    "F",  # Pyflakes checks (e.g., unused imports, undefined variables)
    "B",  # Pyflakes-bugbear checks (e.g., unused imports, undefined variables)
    "D",  # PEP 257 docstring conventions (e.g., formatting, consistency)
    "E",  # Pycodestyle errors (e.g., indentation, whitespace, syntax)
    "UP",  # PyUpgrade rules (e.g., upgrading to modern Python syntax)
    "I",  # Import conventions (e.g., sorting imports, duplicate imports)
    "SIM",  # Simplification suggestions (e.g., refactoring redundant code)
    "PT",  # Pytest style rules (e.g., avoiding assert in tests)
    "RET",  # Return statements consistency (e.g., avoiding multiple return paths)
    "W",  # Warnings about style (e.g., trailing whitespace, blank lines)
    "Q",  # Quotes consistency (e.g., single vs. double quotes)
    "TD",  # TODO checks (e.g., TODO comments without author)
    "LOG",  # Logging checks
    "G",  # Logging formatting checks
    "T20", # Check for print statements
    "ARG", # Checks for unused arguments
    "PTH", # Check for instances where pathlib should be used
    "FLY",  # Checks for str.join() which can be written as f-strings
    "TRY",  # Checks for try/except blocks
]

ignore = [
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D413",  # Missing blank line after last section
    "D417",  # Missing argument description in the docstring for {definition}: {name}
    "TRY003",  # Avoid specifying long messages outside the exception class
    "TD003",  # Missing issue link for this TODO
    "G004",  # f-strings in log messages
    "LOG015",  # Logging using root logger #TODO(@PicoCentauri): Check this
]

[tool.ruff.lint.per-file-ignores]
"**/{docs,examples}/*" = ["T20"]  # Don't require any docstrings in these directories

[tool.ruff.lint.isort]
known-first-party = ["maicos"]

[tool.ruff.format]
docstring-code-format = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/maicos/_version.py"
versionfile_build = "maicos/_version.py"
tag_prefix = "v"
