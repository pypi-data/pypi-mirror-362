[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "arc_file_extractor"
description = "CLI frontend for unified file extraction on UNIX systems."
readme = "README.rst"
authors = [
  {name = "Pedro Henrique Alves", email = "nukhes@protonmail.com"}
]
maintainers = [
  {name = "Pedro Henrique Alves", email = "nukhes@protonmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Archiving :: Compression",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Console",
]
license = "GPL-3.0"
dependencies = [
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
]

requires-python = ">=3.8"
keywords = ["archive", "compression", "extraction", "cli", "zip", "tar", "gzip"]

dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "coverage",  # testing
    "mypy",  # linting
    "pytest",  # testing
    "ruff",  # linting
    "tox", # testing
]

[project.urls]
homepage = "https://github.com/nukhes/arc_file_extractor"
repository = "https://github.com/nukhes/arc_file_extractor"
bugs = "https://github.com/nukhes/arc_file_extractor/issues"
changelog = "https://github.com/nukhes/arc_file_extractor/blob/master/HISTORY.rst"
documentation = "https://arc-file-extractor.readthedocs.io"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["*.*"]


[project.scripts]
arc = "arc_file_extractor.cli:app"


[tool.setuptools.dynamic]
version = {attr = "arc_file_extractor.__version__"}

# Mypy
# ----

[tool.mypy]
files = "."

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
allow_untyped_defs = true
disable_error_code = "attr-defined"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = py39, py310, py311, py312, py313, ruff
isolated_build = true

[gh]
python =
    3.13 = py313
    3.12 = py312
    3.11 = py311
    3.10 = py310
    3.9 = py39
    3.8 = py38

[testenv]
deps =
    -r{toxinidir}/requirements_dev.txt
commands =
    pytest --basetemp={envtmpdir}

[testenv:ruff]
deps =
    ruff
commands =
    ruff check .
"""