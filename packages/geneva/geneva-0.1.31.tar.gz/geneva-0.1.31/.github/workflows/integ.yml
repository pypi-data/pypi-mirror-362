name: Python Integration Tests
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - src/**
      - .github/workflows/integ.yml
      - uv.lock
      - pyproject.toml

jobs:
  integ-test:
    permissions:
      contents: read
      id-token: write
    runs-on: warp-ubuntu-latest-x64-8x
    timeout-minutes: 30
    strategy:
      # prevent GHA from cancelling jobs to avoid orphaned k8s resources
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.12"
    env:
      UV_PYTHON: ${{ matrix.python-version }}
      UV_CACHE_DIR: /tmp/.uv-cache
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_KEY }}
      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: 'geneva-integ'
          location: 'us-central1'
      # don't install large deps like torch for this test
      - name: Install dependencies
        run: |
          uv sync --extra ray --extra gcp --locked
      - name: Run tests
        run: |
          make test-integration
      - name: Generate coverage report
        run: |
          uv run coverage xml
      - name: Minimize uv cache
        run: uv cache prune --ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@main
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          flags: integ-${{ matrix.python-version }}
