[
  {
    "name": "criterion",
    "option_type": "<class 'str'>",
    "default": "squared_error",
    "description": "The function to measure the quality of a split.",
    "required": false,
    "choices": ["squared_error", "friedman_mse", "absolute_error", "poisson"],
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "splitter",
    "option_type": "<class 'str'>",
    "default": "best",
    "description": "The strategy used to choose the split at each node.",
    "required": false,
    "choices": ["best", "random"],
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "max_depth",
    "option_type": "<class 'int'>",
    "default": null,
    "description": "The maximum depth of the tree.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "min_samples_split",
    "option_type": "<class 'int'>",
    "default": null,
    "description": "The minimum number of samples required to split an internal node.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "min_samples_leaf",
    "option_type": "<class 'int'>",
    "default": null,
    "description": "The minimum number of samples required to be at a leaf node.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "min_weight_fraction_leaf",
    "option_type": "<class 'float'>",
    "default": null,
    "description": "The minimum weighted fraction of the sum total of weights required to be at a leaf node.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "max_features",
    "option_type": "<class 'int'>",
    "default": null,
    "description": "The number of features to consider when looking for the best split.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "random_state",
    "option_type": "<class 'int'>",
    "default": null,
    "description": "Controls the randomness of the estimator.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "max_leaf_nodes",
    "option_type": "<class 'int'>",
    "default": null,
    "description": "Grow a tree with max_leaf_nodes in best-first fashion.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "min_impurity_decrease",
    "option_type": "<class 'float'>",
    "default": null,
    "description": "A node will be split if this split induces a decrease of the impurity #.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  },
  {
    "name": "ccp_alpha",
    "option_type": "<class 'float'>",
    "default": null,
    "description": "Complexity parameter used for Minimal Cost-Complexity Pruning.",
    "required": false,
    "choices": null,
    "additional_attributes": null,
    "control_type": null,
    "hidden_from": null
  }
]
