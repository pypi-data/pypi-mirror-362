# generated by datamodel-codegen:
#   filename:  v2_spec.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, List, Literal

from pydantic import ConfigDict, Field

from ..base import MyBaseModel
from . import PaginationWithTotalCount, Participant, ParticipantsPreview


class Direction(Enum):
    SENT = "sent"
    RECEIVED = "received"


class Email(MyBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Annotated[int, Field(examples=[1], ge=1, le=9007199254740991)]
    """
    The email's unique identifier
    """
    sentAt: Annotated[datetime, Field(examples=["2023-01-01T00:00:00Z"])]
    """
    The timestamp of when the email was sent
    """
    loggingType: Annotated[Literal["automated"], Field(examples=["automated"])]
    """
    Indicates how the interaction was added to Affinity: either manually by a user ('manual') or automatically through Affinity's capture process ('automated'). Currently, emails can only be logged as 'automated'.
    """
    direction: Annotated[Direction, Field(examples=["received"])]
    """
    The direction of the email: 'sent' if the email was sent by an internal user and  'received' if the email was sent to an internal user.
    """
    subject: Annotated[str | None, Field(examples=["Example subject"])] = None
    """
    The email's subject
    """
    from_: Annotated[Participant, Field(alias="from")]
    """
    The participant who sent the email
    """
    toParticipantsPreview: ParticipantsPreview
    """
    A preview of the participants in the 'To' field of the email
    """
    ccParticipantsPreview: ParticipantsPreview
    """
    A preview of the participants who are cc'ed in the email
    """


class EmailPaged(MyBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: Annotated[List[Email], Field(max_length=100)]
    """
    A page of Email results
    """
    pagination: PaginationWithTotalCount
