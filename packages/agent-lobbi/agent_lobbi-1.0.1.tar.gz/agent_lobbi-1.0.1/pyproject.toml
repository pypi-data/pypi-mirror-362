[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agent-lobbi"
version = "1.0.1"
description = "Enhanced A2A+ Agent Collaboration Platform with Advanced Metrics and Neuromorphic Intelligence"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Agent Lobby Team", email = "support@agentlobby.com"}
]
maintainers = [
    {name = "Agent Lobby Team", email = "maintainers@agentlobby.com"}
]
keywords = [
    "agent",
    "collaboration", 
    "a2a",
    "artificial intelligence",
    "multi-agent systems",
    "distributed computing",
    "neuromorphic",
    "metrics",
    "analytics",
    "websocket",
    "asyncio",
    "real-time",
    "business intelligence"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
    "Topic :: System :: Networking",
    "Framework :: AsyncIO",
    "Environment :: Web Environment",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "aiohttp>=3.8.0",
    "asyncio-mqtt>=0.13.0",
    "websockets>=11.0.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "structlog>=23.0.0",
    "click>=8.0.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "cryptography>=41.0.0",
    "python-jose[cryptography]>=3.3.0",
    "bcrypt>=4.0.0",
    "httpx>=0.24.0",
    "rich>=13.0.0",
    "typer>=0.9.0"
]

[project.urls]
Homepage = "https://agentlobby.com"
Documentation = "https://docs.agentlobby.com"
Repository = "https://github.com/agentlobby/agent-lobbi"
"Bug Tracker" = "https://github.com/agentlobby/agent-lobbi/issues"
Changelog = "https://github.com/agentlobby/agent-lobbi/blob/main/CHANGELOG.md"
"Discord" = "https://discord.gg/agentlobby"
"Twitter" = "https://twitter.com/agentlobby"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "isort>=5.12.0",
    "bandit>=1.7.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0"
]
monitoring = [
    "prometheus-client>=0.15.0",
    "grafana-client>=3.0.0",
    "statsd>=4.0.0"
]
enterprise = [
    "redis>=4.0.0",
    "celery>=5.0.0",
    "kubernetes>=24.0.0",
    "psycopg2-binary>=2.9.0"
]
all = [
    "agent-lobbi[dev,docs,monitoring,enterprise]"
]

[project.scripts]
agent-lobbi = "src.main:main"
agent-lobbi-server = "src.core.lobby:main"
agent-lobbi-metrics = "src.core.agent_metrics_enhanced:main"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.toml", "*.html", "*.jinja2", "*.css", "*.js", "*.png", "*.jpg", "*.svg"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/venv/*",
    "*/virtualenv/*",
    "*/.venv/*",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == '__main__':",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "virtualenv"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "virtualenv",
    "build",
    "dist",
    "*.egg-info"
] 