name: Build Unity pyinstaller exe
on:
  workflow_dispatch:

jobs:
  build:
    env:
      # Configure a constant location for the uv cache
      UV_CACHE_DIR: /tmp/.uv-cache

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Build for ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create settings for unity
        run: |
          mkdir -p settings/unity
          echo "${{ secrets.UNITY_CHAT_YAML }}" > settings/chat.yaml
          echo "${{ secrets.UNITY_CODEBASE_YAML }}" > settings/unity/codebase.yaml
          echo "${{ secrets.UNITY_VISUAL_SCRIPT_YAML }}" > settings/unity/visualscript.yaml
          echo "${{ secrets.UNITY_REGISTRY_YAML }}" > settings/registry.yaml

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-unity-${{ runner.os }}-${{ hashFiles('uv.lock') }}
      
      - name: Install dependencies
        run: uv sync --group unity
      
      - name: Build pyinstaller exe for Unity
        run: uv run pyinstaller --clean --noconfirm knowlang/api/main.spec

      - name: Compress build artifacts
        run: tar -czf knowlang-unity-${{ matrix.os }}.tar.gz -C dist/main .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: knowlang-unity-${{ matrix.os }}
          path: knowlang-unity-${{ matrix.os }}.tar.gz

      - name: Minimize uv cache
        run: uv cache prune --ci


