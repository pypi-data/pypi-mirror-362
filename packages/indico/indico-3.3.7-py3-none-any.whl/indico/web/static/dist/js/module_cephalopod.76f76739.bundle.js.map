{"version":3,"file":"js/module_cephalopod.76f76739.bundle.js","mappings":"uGASA,SAAUA,GAUR,SAASC,EAAaC,EAAeC,EAAWC,GAC9CA,EAAQA,IAAS,EACjB,MAAMC,EAAQC,EAAEC,WAsChB,OArCAD,EAAEE,KAAK,CACLC,IAAKP,EACLQ,KAAM,MACNC,SAAU,OACVC,QAAS,MAERC,MAAK,SAAmBC,GACvB,IAAIC,GAAS,EACbC,EAAEC,KAAKd,GAAW,SAASe,EAAUC,GAC/BD,IAAaJ,EAASK,KAG1BJ,GAAS,EACX,IACAV,EAAMe,QAAQL,EAChB,IACCM,MAAK,SAAiBC,EAAKC,GAC1B,IAAIC,EAASC,GAAGC,QAAQ,oDACJ,aAAhBJ,EAAIK,SAAyC,MAAfL,EAAIC,QAA6B,gBAAXA,EACtDC,EAASC,GAAGC,QAAQ,kEACK,aAAhBJ,EAAIK,SAAyC,IAAfL,EAAIC,QAA2B,UAAXA,EAC3DC,EAASC,GAAGC,QAAQ,wCACK,aAAhBJ,EAAIK,SAAyC,IAAfL,EAAIC,QAA2B,YAAXA,EAC3DC,EAASC,GAAGC,QAAQ,mDAEH,aAAhBJ,EAAIK,SAAyC,MAAfL,EAAIC,QAChB,cAAnBD,EAAIM,cAEJJ,EAASC,GAAGC,QAAQ,0DAEjBtB,GACHE,EAAE,QAAS,CAACuB,MAAO,eAAgBC,KAAMN,IAASO,SAChDzB,EAAE,QAAS,CAACuB,MAAO,kCAAkCE,SAASzB,EAAE,uBAGpED,EAAM2B,OAAOR,EACf,IACKnB,EAAM4B,SACf,CAEAjC,EAAOkC,wBAA0B,SAAiChC,EAAeiC,GAC/D7B,EAAE,WAEV8B,GAAG,UAAU,WACnB9B,EAAE,gBAAgB+B,KAAK,YAAaC,KAAKC,QAC3C,IAEA,MAAMC,EAAMlC,EAAEC,WACdD,EAAEmC,KAAKD,GAAKE,QAAO,SAASC,GAC1BrC,EAAE,oBACCsC,KAAK,QAAS,cAAcD,EAAMd,SAClCgB,KAAK,oBACLD,KAAK,QAAS,QAAQD,EAAMG,QAC5BC,KAAK,SACLC,SAAS,UACTlB,KAAKa,EAAMM,OACXF,OACAjB,KAAKa,EAAMO,SAChB,IAGKf,EAULlC,EACEC,EACA,CACEiC,QAAS7B,EAAE,WAAW+B,KAAK,WAC3Bc,QAAS7C,EAAE,iBAAiB8C,MAC5BC,MAAO/C,EAAE,kBAAkB8C,MAC3B3C,IAAKH,EAAE,eAAewB,OACtBwB,aAAchD,EAAE,gBAAgBwB,SAElC,GAECjB,MAAK,SAASE,GACTA,EACFyB,EAAIpB,QAAQ,CACV6B,MAAOxB,GAAGC,QAAQ,gBAClBwB,SAAUzB,GAAGC,QACX,yEAEFG,MAAO,YACPiB,KAAM,oBAGRxC,EAAE,kBAAkBiD,OACpBf,EAAIpB,QAAQ,CACV6B,MAAOxB,GAAGC,QAAQ,eAClBwB,SAAUzB,GAAGC,QACX,mFAEFG,MAAO,UACPiB,KAAM,iBAGZ,IACCzB,MAAK,SAASmC,GACbhB,EAAIR,OAAO,CACTiB,MAAOxB,GAAGC,QAAQ,UAClBwB,SAAUM,EACV3B,MAAO,SACPiB,KAAM,gBAEV,IAjDAN,EAAIpB,QAAQ,CACV6B,MAAOxB,GAAGC,QAAQ,YAClBwB,SAAUzB,GAAGC,QAAQ,2DACrBG,MAAO,WACPiB,KAAM,cA8CZ,EAEA9C,EAAOyD,sBAAwB,SAC7BvD,EACAwD,EACAC,GAEA1D,EAAaC,EAAewD,GAAW7C,MAAK,SAASE,GAC9CA,GACHT,EAAE,QAAS,CACTuB,MAAO,eACPC,KAAML,GACHC,QACC,6GAEDkC,OAAOD,KACT5B,SACDzB,EAAE,QAAS,CAACuB,MAAO,oCAAoCE,SAASzB,EAAE,sBAGxE,GACF,CACD,CAnJD,CAmJGuD,O","sources":["webpack:///indico/modules/cephalopod/client/js/index.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* eslint-disable max-len */\n\n(function(global) {\n  /**\n   * Check if the data returned by `cephalopodUrl` matches `localData`\n   *\n   * Performs an ajax request to retrieve the data to check and return a\n   * jQuery promise with the a boolean indicating if the data matches or\n   * not. If the ajax request fails, the promise is rejected wit the ajax\n   * error. An error flash message is also shown on the page unless the\n   * `quiet` option is set to `false` (defaults to `true`).\n   */\n  function _checkSynced(cephalopodUrl, localData, quiet) {\n    quiet = quiet || false;\n    const defer = $.Deferred();\n    $.ajax({\n      url: cephalopodUrl,\n      type: 'GET',\n      dataType: 'json',\n      timeout: 10000, // 10 seconds\n    })\n      .done(function onSuccess(response) {\n        let synced = true;\n        _.each(localData, function(localVal, key) {\n          if (localVal === response[key]) {\n            return;\n          }\n          synced = false;\n        });\n        defer.resolve(synced);\n      })\n      .fail(function onError(xhr, status) {\n        let errMsg = $T.gettext('Unknown error while contacting the Community Hub');\n        if (xhr.state() === 'rejected' && xhr.status === 200 && status === 'parsererror') {\n          errMsg = $T.gettext('Internal error: Parse error on the reply of the Community Hub.');\n        } else if (xhr.state() === 'rejected' && xhr.status === 0 && status === 'error') {\n          errMsg = $T.gettext('Unable to contact the Community Hub.');\n        } else if (xhr.state() === 'rejected' && xhr.status === 0 && status === 'timeout') {\n          errMsg = $T.gettext('The connection to the Community Hub timed out.');\n        } else if (\n          (xhr.state() === 'rejected' && xhr.status === 404) ||\n          xhr.statusText === 'NOT FOUND'\n        ) {\n          errMsg = $T.gettext('Your server is not registered with the Community Hub.');\n        }\n        if (!quiet) {\n          $('<div>', {class: 'message-text', html: errMsg}).appendTo(\n            $('<div>', {class: 'error-message-box fixed-width'}).appendTo($('#flashed-messages'))\n          );\n        }\n        defer.reject(errMsg);\n      });\n    return defer.promise();\n  }\n\n  global.setupCephalopodSettings = function setupCephalopodSettings(cephalopodUrl, enabled) {\n    const $joined = $('#joined');\n\n    $joined.on('change', function() {\n      $('#sync-button').prop('disabled', !this.checked);\n    });\n\n    const dfd = $.Deferred();\n    $.when(dfd).always(function(label) {\n      $('#tracking-status')\n        .attr('class', `action-box ${label.class}`)\n        .find('.section > .icon')\n        .attr('class', `icon ${label.icon}`)\n        .next('.text')\n        .children('.label')\n        .html(label.title)\n        .next()\n        .html(label.subtitle);\n    });\n\n    // Only check if synced, if enabled;\n    if (!enabled) {\n      dfd.resolve({\n        title: $T.gettext('Disabled'),\n        subtitle: $T.gettext('This server is not registered as part of the community.'),\n        class: 'disabled',\n        icon: 'icon-close',\n      });\n      return;\n    }\n\n    _checkSynced(\n      cephalopodUrl,\n      {\n        enabled: $('#joined').prop('checked'),\n        contact: $('#contact_name').val(),\n        email: $('#contact_email').val(),\n        url: $('#server-url').html(),\n        organization: $('#affiliation').html(),\n      },\n      true\n    )\n      .done(function(synced) {\n        if (synced) {\n          dfd.resolve({\n            title: $T.gettext('Synchronized'),\n            subtitle: $T.gettext(\n              'This server is registered as part of the community and is up to date.'\n            ),\n            class: 'highlight',\n            icon: 'icon-checkmark',\n          });\n        } else {\n          $('#sync-tracking').show();\n          dfd.resolve({\n            title: $T.gettext('Out of sync'),\n            subtitle: $T.gettext(\n              'Your Indico server is out of sync. Synchronize it with the button on the right.'\n            ),\n            class: 'warning',\n            icon: 'icon-warning',\n          });\n        }\n      })\n      .fail(function(err) {\n        dfd.reject({\n          title: $T.gettext('Error!'),\n          subtitle: err,\n          class: 'danger',\n          icon: 'icon-disable',\n        });\n      });\n  };\n\n  global.checkCephalopodSynced = function checkCephalopodSynced(\n    cephalopodUrl,\n    checkData,\n    settingsUrl\n  ) {\n    _checkSynced(cephalopodUrl, checkData).done(function(synced) {\n      if (!synced) {\n        $('<div>', {\n          class: 'message-text',\n          html: $T\n            .gettext(\n              'Your Indico server is not synchronized with the Community Hub! You can solve this <a href=\"{0}\">here</a>.'\n            )\n            .format(settingsUrl),\n        }).appendTo(\n          $('<div>', {class: 'warning-message-box fixed-width'}).appendTo($('#flashed-messages'))\n        );\n      }\n    });\n  };\n})(window);\n"],"names":["global","_checkSynced","cephalopodUrl","localData","quiet","defer","$","Deferred","ajax","url","type","dataType","timeout","done","response","synced","_","each","localVal","key","resolve","fail","xhr","status","errMsg","$T","gettext","state","statusText","class","html","appendTo","reject","promise","setupCephalopodSettings","enabled","on","prop","this","checked","dfd","when","always","label","attr","find","icon","next","children","title","subtitle","contact","val","email","organization","show","err","checkCephalopodSynced","checkData","settingsUrl","format","window"],"sourceRoot":""}