Metadata-Version: 2.4
Name: functional_iterators
Version: 2.0.0
Summary: rust-style iterating functions (fiterators)
Project-URL: Homepage, https://codeberg.org/Kwonunn/fiterators
Author-email: Vivian <me@vivstuff.gay>
License: # KOMBUCHA LICENSE
        
        As long as you retain this notice, you are free to use this project however you want.
        
        If you like it and we meet someday you can buy me a kombucha. ~ Kwonunn ^-^
License-File: LICENSE
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown

# Functional Iterators (Fiterators)

do you like functional style programming?

do you not like `list(map(lambda x: x * 2, filter(lambda x: x < 5, [2, 4, 6, 8])))`?

try `Fiterators` today! it lets you do this:

```py
into_iter([2, 4, 6, 8]).filter(lambda x: x < 5).map(lambda x: x * 2).collect()
```

much nicer, and much better for my rusty brain \~.\~

made by me because i got frustrated ~Vivian <3

> But what functions does it have???

i'm glad you asked. with Fiterators you can:
- `filter`
- `map`
- `reduce`
- `enumerate`
- `chain`
- `any`
- `all`
- `find`
- `for_each`  
and  
- `collect`

i might add more if i wanna use them
