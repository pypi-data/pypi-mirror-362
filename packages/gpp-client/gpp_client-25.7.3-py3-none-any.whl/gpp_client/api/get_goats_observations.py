# Generated by ariadne-codegen
# Source: src/queries

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AtomExecutionState,
    Band,
    BrightnessIntegratedUnits,
    CloudExtinctionPreset,
    GmosAmpReadMode,
    GmosBinning,
    GmosNorthBuiltinFpu,
    GmosNorthFilter,
    GmosNorthGrating,
    GmosRoi,
    GmosSouthBuiltinFpu,
    GmosSouthFilter,
    GmosSouthGrating,
    GuideState,
    ImageQualityPreset,
    Instrument,
    ObserveClass,
    ObservingModeType,
    PosAngleConstraintMode,
    ScienceBand,
    SkyBackground,
    StepType,
    WaterVapor,
)


class GetGOATSObservations(BaseModel):
    observations: "GetGOATSObservationsObservations"


class GetGOATSObservationsObservations(BaseModel):
    matches: List["GetGOATSObservationsObservationsMatches"]
    has_more: bool = Field(alias="hasMore")


class GetGOATSObservationsObservationsMatches(BaseModel):
    id: Any
    instrument: Optional[Instrument]
    title: Any
    constraint_set: "GetGOATSObservationsObservationsMatchesConstraintSet" = Field(
        alias="constraintSet"
    )
    target_environment: "GetGOATSObservationsObservationsMatchesTargetEnvironment" = (
        Field(alias="targetEnvironment")
    )
    pos_angle_constraint: (
        "GetGOATSObservationsObservationsMatchesPosAngleConstraint"
    ) = Field(alias="posAngleConstraint")
    science_band: Optional[ScienceBand] = Field(alias="scienceBand")
    observation_duration: Optional[
        "GetGOATSObservationsObservationsMatchesObservationDuration"
    ] = Field(alias="observationDuration")
    observer_notes: Optional[Any] = Field(alias="observerNotes")
    execution: "GetGOATSObservationsObservationsMatchesExecution"
    science_requirements: (
        "GetGOATSObservationsObservationsMatchesScienceRequirements"
    ) = Field(alias="scienceRequirements")
    observing_mode: Optional["GetGOATSObservationsObservationsMatchesObservingMode"] = (
        Field(alias="observingMode")
    )


class GetGOATSObservationsObservationsMatchesConstraintSet(BaseModel):
    image_quality: ImageQualityPreset = Field(alias="imageQuality")
    cloud_extinction: CloudExtinctionPreset = Field(alias="cloudExtinction")
    sky_background: SkyBackground = Field(alias="skyBackground")
    water_vapor: WaterVapor = Field(alias="waterVapor")
    elevation_range: (
        "GetGOATSObservationsObservationsMatchesConstraintSetElevationRange"
    ) = Field(alias="elevationRange")


class GetGOATSObservationsObservationsMatchesConstraintSetElevationRange(BaseModel):
    air_mass: Optional[
        "GetGOATSObservationsObservationsMatchesConstraintSetElevationRangeAirMass"
    ] = Field(alias="airMass")
    hour_angle: Optional[
        "GetGOATSObservationsObservationsMatchesConstraintSetElevationRangeHourAngle"
    ] = Field(alias="hourAngle")


class GetGOATSObservationsObservationsMatchesConstraintSetElevationRangeAirMass(
    BaseModel
):
    min: Any
    max: Any


class GetGOATSObservationsObservationsMatchesConstraintSetElevationRangeHourAngle(
    BaseModel
):
    min_hours: Any = Field(alias="minHours")
    max_hours: Any = Field(alias="maxHours")


class GetGOATSObservationsObservationsMatchesTargetEnvironment(BaseModel):
    first_science_target: Optional[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTarget"
    ] = Field(alias="firstScienceTarget")


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTarget(
    BaseModel
):
    sidereal: Optional[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSidereal"
    ]
    source_profile: (
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfile"
    ) = Field(alias="sourceProfile")


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSidereal(
    BaseModel
):
    proper_motion: Optional[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealProperMotion"
    ] = Field(alias="properMotion")
    parallax: Optional[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealParallax"
    ]
    radial_velocity: Optional[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealRadialVelocity"
    ] = Field(alias="radialVelocity")


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealProperMotion(
    BaseModel
):
    ra: "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealProperMotionRa"
    dec: "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealProperMotionDec"


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealProperMotionRa(
    BaseModel
):
    milliarcseconds_per_year: Any = Field(alias="milliarcsecondsPerYear")


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealProperMotionDec(
    BaseModel
):
    milliarcseconds_per_year: Any = Field(alias="milliarcsecondsPerYear")


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealParallax(
    BaseModel
):
    milliarcseconds: Any


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealRadialVelocity(
    BaseModel
):
    kilometers_per_second: Any = Field(alias="kilometersPerSecond")


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfile(
    BaseModel
):
    point: Optional[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePoint"
    ]


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePoint(
    BaseModel
):
    band_normalized: Optional[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePointBandNormalized"
    ] = Field(alias="bandNormalized")


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePointBandNormalized(
    BaseModel
):
    brightnesses: List[
        "GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePointBandNormalizedBrightnesses"
    ]


class GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePointBandNormalizedBrightnesses(
    BaseModel
):
    band: Band
    value: Any
    units: BrightnessIntegratedUnits


class GetGOATSObservationsObservationsMatchesPosAngleConstraint(BaseModel):
    mode: PosAngleConstraintMode
    angle: "GetGOATSObservationsObservationsMatchesPosAngleConstraintAngle"


class GetGOATSObservationsObservationsMatchesPosAngleConstraintAngle(BaseModel):
    degrees: Any


class GetGOATSObservationsObservationsMatchesObservationDuration(BaseModel):
    seconds: Any
    minutes: Any
    hours: Any
    iso: str


class GetGOATSObservationsObservationsMatchesExecution(BaseModel):
    visits: "GetGOATSObservationsObservationsMatchesExecutionVisits"


class GetGOATSObservationsObservationsMatchesExecutionVisits(BaseModel):
    matches: List["GetGOATSObservationsObservationsMatchesExecutionVisitsMatches"]


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatches(BaseModel):
    id: Any
    created: Any
    interval: Optional[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesInterval"
    ]
    atom_records: (
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecords"
    ) = Field(alias="atomRecords")


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesInterval(BaseModel):
    start: Any
    end: Any
    duration: (
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesIntervalDuration"
    )


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesIntervalDuration(
    BaseModel
):
    seconds: Any
    minutes: Any
    hours: Any


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecords(
    BaseModel
):
    has_more: bool = Field(alias="hasMore")
    matches: List[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatches"
    ]


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatches(
    BaseModel
):
    id: Any
    created: Any
    execution_state: AtomExecutionState = Field(alias="executionState")
    interval: Optional[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesInterval"
    ]
    steps: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesSteps"


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesInterval(
    BaseModel
):
    start: Any
    end: Any
    duration: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesIntervalDuration"


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesIntervalDuration(
    BaseModel
):
    seconds: Any
    minutes: Any
    hours: Any


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesSteps(
    BaseModel
):
    matches: List[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatches"
    ]


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatches(
    BaseModel
):
    index: Any
    step_config: (
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesStepConfig"
    ) = Field(alias="stepConfig")
    observe_class: ObserveClass = Field(alias="observeClass")
    telescope_config: (
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfig"
    ) = Field(alias="telescopeConfig")
    gmos_north: Optional[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorth"
    ] = Field(alias="gmosNorth")
    gmos_south: Optional[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouth"
    ] = Field(alias="gmosSouth")


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesStepConfig(
    BaseModel
):
    typename__: Literal[
        "Bias", "Dark", "Gcal", "Science", "SmartGcal", "StepConfig"
    ] = Field(alias="__typename")
    step_type: StepType = Field(alias="stepType")


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfig(
    BaseModel
):
    offset: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfigOffset"
    guiding: GuideState


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfigOffset(
    BaseModel
):
    p: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfigOffsetP"
    q: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfigOffsetQ"


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfigOffsetP(
    BaseModel
):
    arcseconds: Any


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfigOffsetQ(
    BaseModel
):
    arcseconds: Any


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorth(
    BaseModel
):
    roi: GmosRoi
    readout: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorthReadout"
    exposure: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorthExposure"
    central_wavelength: Optional[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorthCentralWavelength"
    ] = Field(alias="centralWavelength")


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorthReadout(
    BaseModel
):
    x_bin: GmosBinning = Field(alias="xBin")
    y_bin: GmosBinning = Field(alias="yBin")


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorthExposure(
    BaseModel
):
    seconds: Any


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorthCentralWavelength(
    BaseModel
):
    nanometers: Any


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouth(
    BaseModel
):
    roi: GmosRoi
    readout: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouthReadout"
    exposure: "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouthExposure"
    central_wavelength: Optional[
        "GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouthCentralWavelength"
    ] = Field(alias="centralWavelength")


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouthReadout(
    BaseModel
):
    x_bin: GmosBinning = Field(alias="xBin")
    y_bin: GmosBinning = Field(alias="yBin")


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouthExposure(
    BaseModel
):
    seconds: Any


class GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouthCentralWavelength(
    BaseModel
):
    nanometers: Any


class GetGOATSObservationsObservationsMatchesScienceRequirements(BaseModel):
    exposure_time_mode: Optional[
        "GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeMode"
    ] = Field(alias="exposureTimeMode")


class GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeMode(
    BaseModel
):
    signal_to_noise: Optional[
        "GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeSignalToNoise"
    ] = Field(alias="signalToNoise")
    time_and_count: Optional[
        "GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeTimeAndCount"
    ] = Field(alias="timeAndCount")


class GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeSignalToNoise(
    BaseModel
):
    value: Any
    at: "GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeSignalToNoiseAt"


class GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeSignalToNoiseAt(
    BaseModel
):
    nanometers: Any


class GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeTimeAndCount(
    BaseModel
):
    time: "GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeTimeAndCountTime"
    count: Any
    at: "GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeTimeAndCountAt"


class GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeTimeAndCountTime(
    BaseModel
):
    seconds: Any


class GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeTimeAndCountAt(
    BaseModel
):
    nanometers: Any


class GetGOATSObservationsObservationsMatchesObservingMode(BaseModel):
    instrument: Instrument
    mode: ObservingModeType
    gmos_north_long_slit: Optional[
        "GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlit"
    ] = Field(alias="gmosNorthLongSlit")
    gmos_south_long_slit: Optional[
        "GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlit"
    ] = Field(alias="gmosSouthLongSlit")


class GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlit(BaseModel):
    grating: GmosNorthGrating
    filter: Optional[GmosNorthFilter]
    fpu: GmosNorthBuiltinFpu
    spatial_offsets: List[
        "GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlitSpatialOffsets"
    ] = Field(alias="spatialOffsets")
    central_wavelength: (
        "GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlitCentralWavelength"
    ) = Field(alias="centralWavelength")
    wavelength_dithers: List[
        "GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlitWavelengthDithers"
    ] = Field(alias="wavelengthDithers")
    x_bin: GmosBinning = Field(alias="xBin")
    y_bin: GmosBinning = Field(alias="yBin")
    amp_read_mode: GmosAmpReadMode = Field(alias="ampReadMode")
    roi: GmosRoi


class GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlitSpatialOffsets(
    BaseModel
):
    arcseconds: Any


class GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlitCentralWavelength(
    BaseModel
):
    nanometers: Any


class GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlitWavelengthDithers(
    BaseModel
):
    nanometers: Any


class GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlit(BaseModel):
    grating: GmosSouthGrating
    filter: Optional[GmosSouthFilter]
    fpu: GmosSouthBuiltinFpu
    spatial_offsets: List[
        "GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlitSpatialOffsets"
    ] = Field(alias="spatialOffsets")
    central_wavelength: (
        "GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlitCentralWavelength"
    ) = Field(alias="centralWavelength")
    wavelength_dithers: List[
        "GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlitWavelengthDithers"
    ] = Field(alias="wavelengthDithers")
    x_bin: GmosBinning = Field(alias="xBin")
    y_bin: GmosBinning = Field(alias="yBin")
    amp_read_mode: GmosAmpReadMode = Field(alias="ampReadMode")
    roi: GmosRoi


class GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlitSpatialOffsets(
    BaseModel
):
    arcseconds: Any


class GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlitCentralWavelength(
    BaseModel
):
    nanometers: Any


class GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlitWavelengthDithers(
    BaseModel
):
    nanometers: Any


GetGOATSObservations.model_rebuild()
GetGOATSObservationsObservations.model_rebuild()
GetGOATSObservationsObservationsMatches.model_rebuild()
GetGOATSObservationsObservationsMatchesConstraintSet.model_rebuild()
GetGOATSObservationsObservationsMatchesConstraintSetElevationRange.model_rebuild()
GetGOATSObservationsObservationsMatchesTargetEnvironment.model_rebuild()
GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTarget.model_rebuild()
GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSidereal.model_rebuild()
GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSiderealProperMotion.model_rebuild()
GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfile.model_rebuild()
GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePoint.model_rebuild()
GetGOATSObservationsObservationsMatchesTargetEnvironmentFirstScienceTargetSourceProfilePointBandNormalized.model_rebuild()
GetGOATSObservationsObservationsMatchesPosAngleConstraint.model_rebuild()
GetGOATSObservationsObservationsMatchesExecution.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisits.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatches.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesInterval.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecords.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatches.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesInterval.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesSteps.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatches.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfig.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesTelescopeConfigOffset.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosNorth.model_rebuild()
GetGOATSObservationsObservationsMatchesExecutionVisitsMatchesAtomRecordsMatchesStepsMatchesGmosSouth.model_rebuild()
GetGOATSObservationsObservationsMatchesScienceRequirements.model_rebuild()
GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeMode.model_rebuild()
GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeSignalToNoise.model_rebuild()
GetGOATSObservationsObservationsMatchesScienceRequirementsExposureTimeModeTimeAndCount.model_rebuild()
GetGOATSObservationsObservationsMatchesObservingMode.model_rebuild()
GetGOATSObservationsObservationsMatchesObservingModeGmosNorthLongSlit.model_rebuild()
GetGOATSObservationsObservationsMatchesObservingModeGmosSouthLongSlit.model_rebuild()
