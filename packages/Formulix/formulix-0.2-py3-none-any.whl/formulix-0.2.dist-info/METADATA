Metadata-Version: 2.4
Name: Formulix
Version: 0.2
Summary: A toolkit of geometry and physics formulas
Author: Darsh Nayak Das
Author-email: darsh.nayak@outlook.com
Keywords: geometry,physics,formulas,science,education
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Education
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: requires-python
Dynamic: summary

# üì¶ Formulix

**Formulix** is a Python package containing essential geometry and physics formula functions. It's perfect for students, hobbyists, and developers needing fast calculations for areas, volumes, motion, and more.

---

## üöÄ Installation

Install using pip:

```bash
pip install Formulix
```

## üìä Usage

First, import the package in your Python script:

```python
import Formulix
```

---

## üìÄ Geometry Functions

### ‚ñ∂Ô∏è Area Functions

```python
Formulix.rectangle_area(length, breadth)
Formulix.square_area(side)
Formulix.circle_area(radius)
Formulix.triangle_area(base, height)
Formulix.eq_triangle_area(side)
Formulix.rhombus_area(diagonal1, diagonal2)
Formulix.parallelogram_area(base, height)
Formulix.trapezium_area(base1, base2, height)
Formulix.heron_area(a, b, c)
```

### ‚ñ∂Ô∏è Volume Functions

```python
Formulix.cube_volume(side)
Formulix.cuboid_volume(length, breadth, height)
Formulix.cylinder_volume(radius, height)
Formulix.cone_volume(radius, height)
Formulix.sphere_volume(radius)
```

### ‚ñ∂Ô∏è Perimeter & Circumference

```python
Formulix.rectangle_perimeter(length, breadth)
Formulix.square_perimeter(side)
Formulix.triangle_perimeter(a, b, c)
Formulix.circle_circumference(radius)
Formulix.rhombus_perimeter(side)
Formulix.parallelogram_perimeter(base, side)
Formulix.trapezium_perimeter(a, b, c, d)
```

### ‚ñ∂Ô∏è Pythagoras Theorem

```python
Formulix.pythagoras_hypotenuse(a, b)
Formulix.pythagoras_missing_side(hypotenuse, side)
```

---

## üîã Physics Functions

### ‚ñ∂Ô∏è Motion

```python
Formulix.speed(distance, time)
Formulix.distance(speed, time)
Formulix.time(distance, speed)
Formulix.acceleration(final_velocity, initial_velocity, time)
```

### ‚ñ∂Ô∏è Force & Weight

```python
Formulix.force(mass, acceleration)
Formulix.weight(mass, gravity=9.8)
```

---

## üåå Example

```python
import Formulix

print(Formulix.circle_area(7))              # 153.94...
print(Formulix.pythagoras_hypotenuse(3, 4)) # 5.0
print(Formulix.speed(100, 2))               # 50.0
```

---

## üìà Coming Soon

* Electricity formulas
* Optics & waves
* CLI interface for command-line use

---

## ‚úâÔ∏è Author

**Darsh Nayak Das**


---

## üö´ License

This project is open-source and free to use for educational purposes.
